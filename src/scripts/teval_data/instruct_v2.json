{
  "query_470_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": 102,
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_331_2_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_221_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_187_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "academic articles related to quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'academic articles related to quantum computing'."
      }
    ]
  },
  "query_408_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_137_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Tokyo"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Tokyo'."
      }
    ]
  },
  "query_474_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 240
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '240'."
      }
    ]
  },
  "query_333_1_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Employee Benefits Overview",
        "bullet_items": "New Employee Benefits"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Employee Benefits Overview', 'bullet_items' is 'New Employee Benefits'."
      }
    ]
  },
  "query_172_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Paris"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Paris'."
      }
    ]
  },
  "query_451_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_200_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_456_1_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_164_2_13": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_395_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Joker",
        "bullet_items": "Release Date: 2019-10-01[SPAN]Runtime: 122 minutes[SPAN]Overview: During the 1980s, a failed stand-up comedian is driven insane and turns to a life of crime and chaos in Gotham City while becoming an infamous psychopathic crime figure.[SPAN]Rating: 8.166"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Joker', 'bullet_items' is 'Release Date: 2019-10-01[SPAN]Runtime: 122 minutes[SPAN]Overview: During the 1980s, a failed stand-up comedian is driven insane and turns to a life of crime and chaos in Gotham City while becoming an infamous psychopathic crime figure.[SPAN]Rating: 8.166'."
      }
    ]
  },
  "query_221_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "An Optimal Control View of Adversarial Machine Learning",
        "bullet_items": "Authors: Xiaojin Zhu\nSummary: I describe an optimal control view of adversarial machine learning, where the dynamical system is the machine learner, the input are adversarial actions, and the control costs are defined by the adversary's goals to do harm and be hard to detect. This view encompasses many types of adversarial machine learning, including test-item attacks, training-data poisoning, and adversarial reward shaping. The view encourages adversarial machine learning researcher to utilize advances in control theory and reinforcement learning."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'An Optimal Control View of Adversarial Machine Learning', 'bullet_items' is 'Authors: Xiaojin Zhu\nSummary: I describe an optimal control view of adversarial machine learning, where the dynamical system is the machine learner, the input are adversarial actions, and the control costs are defined by the adversary's goals to do harm and be hard to detect. This view encompasses many types of adversarial machine learning, including test-item attacks, training-data poisoning, and adversarial reward shaping. The view encourages adversarial machine learning researcher to utilize advances in control theory and reinforcement learning.'."
      }
    ]
  },
  "query_1_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 50426764
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '50426764'."
      }
    ]
  },
  "query_289_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "TECH"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'TECH'."
      }
    ]
  },
  "query_190_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "European history"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'European history'."
      }
    ]
  },
  "query_69_0_9": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 19404
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '19404'."
      }
    ]
  },
  "query_101_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_272_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "123 Main Street"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is '123 Main Street'."
      }
    ]
  },
  "query_374_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_360_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "James Hansen"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'James Hansen'."
      }
    ]
  },
  "query_118_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 22788198
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '22788198'."
      }
    ]
  },
  "query_20_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "fundamentals and applications of quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'fundamentals and applications of quantum computing'."
      }
    ]
  },
  "query_4_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York'."
      }
    ]
  },
  "query_13_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "art exhibitions"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'art exhibitions'."
      }
    ]
  },
  "query_449_1_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "涉过愤怒的海"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is '涉过愤怒的海'."
      }
    ]
  },
  "query_1_2_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 20654271
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '20654271'."
      }
    ]
  },
  "query_230_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_408_1_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Impact of Climate Change",
        "bullet_items": "1. Rising sea levels\n2. Loss of biodiversity\n3. Food and water scarcity",
        "image": "outputs/1697797428.6362486.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Impact of Climate Change', 'bullet_items' is '1. Rising sea levels\n2. Loss of biodiversity\n3. Food and water scarcity', 'image' is 'outputs/1697797428.6362486.jpg'."
      }
    ]
  },
  "query_413_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/director_summary.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/director_summary.pptx'."
      }
    ]
  },
  "query_105_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 663272282290556235
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '663272282290556235'."
      }
    ]
  },
  "query_348_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "john.doe@example.com",
        "title": "Invitation to the upcoming event",
        "body": "Dear John Doe,\n\nYou are cordially invited to the upcoming event. Here are the event details:\n\nEvent: [Event Name]\nDate: [Event Date]\nTime: 10:00 AM - 1:00 PM\nLocation: [Event Location]\n\nWe look forward to your presence at the event.\n\nBest regards,\n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'john.doe@example.com', 'title' is 'Invitation to the upcoming event', 'body' is 'Dear John Doe,\n\nYou are cordially invited to the upcoming event. Here are the event details:\n\nEvent: [Event Name]\nDate: [Event Date]\nTime: 10:00 AM - 1:00 PM\nLocation: [Event Location]\n\nWe look forward to your presence at the event.\n\nBest regards,\n[Your Name]'."
      }
    ]
  },
  "query_164_2_9": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Conference Agenda",
        "bullet_items": "1. Introduction\n2. Keynote Speech\n3. Breakout Sessions\n4. Networking Lunch\n5. Panel Discussion"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Conference Agenda', 'bullet_items' is '1. Introduction\n2. Keynote Speech\n3. Breakout Sessions\n4. Networking Lunch\n5. Panel Discussion'."
      }
    ]
  },
  "query_251_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_221_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Famous Scientists",
        "bullet_items": "1. Isaac Newton - Laws of motion\n2. Albert Einstein - Theory of relativity\n3. Marie Curie - Discovery of radioactivity"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Famous Scientists', 'bullet_items' is '1. Isaac Newton - Laws of motion\n2. Albert Einstein - Theory of relativity\n3. Marie Curie - Discovery of radioactivity'."
      }
    ]
  },
  "query_61_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "珍·古道尔的传奇一生",
        "bullet_items": "导演：布莱特·摩根\n主演：简·古道尔，雨果·凡·拉维克，雨果·埃里克·路易斯·凡·拉维克"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is '珍·古道尔的传奇一生', 'bullet_items' is '导演：布莱特·摩根\n主演：简·古道尔，雨果·凡·拉维克，雨果·埃里克·路易斯·凡·拉维克'."
      }
    ]
  },
  "query_342_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "The Dark Knight"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'The Dark Knight'."
      }
    ]
  },
  "query_206_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "dreams"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'dreams'."
      }
    ]
  },
  "query_149_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_15_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_16_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "驯龙高手"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '驯龙高手'."
      }
    ]
  },
  "query_351_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_220_2_8": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "珍·古道尔的传奇一生"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '珍·古道尔的传奇一生'."
      }
    ]
  },
  "query_289_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Empire State Building, New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Empire State Building, New York City'."
      }
    ]
  },
  "query_105_0_11": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Tokyo Tower",
        "end": "35.7049,139.81403"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Tokyo Tower', 'end' is '35.7049,139.81403'."
      }
    ]
  },
  "query_166_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_314_2_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "Seminyak Beach",
        "days": 1
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'Seminyak Beach', 'days' is '1'."
      }
    ]
  },
  "query_464_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_225_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_53_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_111_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 941597372112246343
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '941597372112246343'."
      }
    ]
  },
  "query_347_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_114_0_10": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'New York City'."
      }
    ]
  },
  "query_178_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Tesla"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Tesla'."
      }
    ]
  },
  "query_162_0_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "9zb7YrEAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '9zb7YrEAAAAJ'."
      }
    ]
  },
  "query_178_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_140_1_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "红猪 电影 预告片"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is '红猪 电影 预告片'."
      }
    ]
  },
  "query_395_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Inception",
        "bullet_items": "Release Date: 2010-07-15\nRuntime: 148 minutes\n\nOverview:\nCobb, a skilled thief who commits corporate espionage by infiltrating the subconscious of his targets is offered a chance to regain his old life as payment for a task considered to be impossible: \"inception\", the implantation of another person's idea into a target's subconscious.\n\nRating: 8.365/10"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Inception', 'bullet_items' is 'Release Date: 2010-07-15\nRuntime: 148 minutes\n\nOverview:\nCobb, a skilled thief who commits corporate espionage by infiltrating the subconscious of his targets is offered a chance to regain his old life as payment for a task considered to be impossible: \"inception\", the implantation of another person's idea into a target's subconscious.\n\nRating: 8.365/10'."
      }
    ]
  },
  "query_322_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Seattle",
        "end": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Seattle', 'end' is 'San Francisco'."
      }
    ]
  },
  "query_223_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "deep learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'deep learning'."
      }
    ]
  },
  "query_7_2_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "idq1Ms8AAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'idq1Ms8AAAAJ'."
      }
    ]
  },
  "query_194_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_254_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_143_2_12": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Property 1",
        "bullet_items": "Property Type: Private room in home[SPAN]Rating: 4.71[SPAN]Location: Bayonne, NJ, United States",
        "image": "/path/to/image1.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Property 1', 'bullet_items' is 'Property Type: Private room in home[SPAN]Rating: 4.71[SPAN]Location: Bayonne, NJ, United States', 'image' is '/path/to/image1.jpg'."
      }
    ]
  },
  "query_360_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Professor John Smith"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Professor John Smith'."
      }
    ]
  },
  "query_292_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 634649
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '634649'."
      }
    ]
  },
  "query_268_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_289_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "TSLA"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'TSLA'."
      }
    ]
  },
  "query_53_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/hotel.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/hotel.txt'."
      }
    ]
  },
  "query_478_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_166_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_daliy_open_close",
      "args": {
        "ticker": "AAPL",
        "date": "2023-10-10"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_daliy_open_close', 'description': 'get the open, close and afterhours prices of a stock symbol on a certain date', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'date', 'type': 'STRING', 'description': 'The date of the requested open/close in the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'close', 'description': ''}, {'name': 'open', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_daliy_open_close with the parameter as follows: 'ticker' is 'AAPL', 'date' is '2023-10-10'."
      }
    ]
  },
  "query_240_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "Pn8ouvAAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'Pn8ouvAAAAAJ'."
      }
    ]
  },
  "query_208_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Seng W. Loke"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Seng W. Loke'."
      }
    ]
  },
  "query_352_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_356_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_17_2_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 2501
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '2501'."
      }
    ]
  },
  "query_69_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 278
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '278'."
      }
    ]
  },
  "query_142_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Paris"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Paris'."
      }
    ]
  },
  "query_240_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Quantum computing'."
      }
    ]
  },
  "query_226_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_269_0_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "customer2@example.com",
        "title": "Delivery Update",
        "body": "Dear Customer,\n\nWe are pleased to inform you that your package will be delivered on October 19, 2023.\n\nEstimated Delivery Time:\n\nRoute 1: Washington, DC to New York, NY - Distance: 367.293 km, Estimated Time: 4 hours 30 minutes\n\nRoute 2: New York, NY to Cupertino, CA - Distance: 4734.993 km, Estimated Time: 1 day 2 hours\n\nRoute 3: Cupertino, CA to Washington, DC - Distance: 4580.5 km, Estimated Time: 1 day 1 hour\n\nPlease feel free to contact us if you have any questions.\n\nBest regards,\nDelivery Team"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'customer2@example.com', 'title' is 'Delivery Update', 'body' is 'Dear Customer,\n\nWe are pleased to inform you that your package will be delivered on October 19, 2023.\n\nEstimated Delivery Time:\n\nRoute 1: Washington, DC to New York, NY - Distance: 367.293 km, Estimated Time: 4 hours 30 minutes\n\nRoute 2: New York, NY to Cupertino, CA - Distance: 4734.993 km, Estimated Time: 1 day 2 hours\n\nRoute 3: Cupertino, CA to Washington, DC - Distance: 4580.5 km, Estimated Time: 1 day 1 hour\n\nPlease feel free to contact us if you have any questions.\n\nBest regards,\nDelivery Team'."
      }
    ]
  },
  "query_374_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_268_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "New York City",
        "abs_location": "outputs/NewYorkTrip.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'New York City', 'abs_location' is 'outputs/NewYorkTrip.ppt'."
      }
    ]
  },
  "query_358_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_11_1_12": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Property 2: Hostel in Barcelona",
        "bullet_items": "Property Type: Private room in hostel\nCapacity: 1 person\nRating: 4.72\nLatitude: 41.381886\nLongitude: 2.170774"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Property 2: Hostel in Barcelona', 'bullet_items' is 'Property Type: Private room in hostel\nCapacity: 1 person\nRating: 4.72\nLatitude: 41.381886\nLongitude: 2.170774'."
      }
    ]
  },
  "query_85_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_134_0_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/ParisTrip.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/ParisTrip.ppt'."
      }
    ]
  },
  "query_348_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_347_2_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 968051
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '968051'."
      }
    ]
  },
  "query_25_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "neighbor@example.com",
        "title": "Plant watering request",
        "body": "Dear neighbor, \n\nI hope this message finds you well. I will be going on vacation and I was wondering if you could kindly water my plants while I am away. I will be leaving on October 20th and returning on October 30th. I would greatly appreciate your help. Please let me know if you have any questions. \n\nThank you so much!\n\nBest regards, \n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'neighbor@example.com', 'title' is 'Plant watering request', 'body' is 'Dear neighbor, \n\nI hope this message finds you well. I will be going on vacation and I was wondering if you could kindly water my plants while I am away. I will be leaving on October 20th and returning on October 30th. I would greatly appreciate your help. Please let me know if you have any questions. \n\nThank you so much!\n\nBest regards, \n[Your Name]'."
      }
    ]
  },
  "query_10_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 731584702487700952
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '731584702487700952'."
      }
    ]
  },
  "query_350_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Movie Recommendation",
        "bullet_items": "You may also like The Matrix."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Movie Recommendation', 'bullet_items' is 'You may also like The Matrix.'."
      }
    ]
  },
  "query_162_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_103_1_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_98_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 38533722
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '38533722'."
      }
    ]
  },
  "query_4_1_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 887888251157143883
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '887888251157143883'."
      }
    ]
  },
  "query_10_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 54239108
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '54239108'."
      }
    ]
  },
  "query_266_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "accommodation",
        "places": "Times Square, New York City",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'accommodation', 'places' is 'Times Square, New York City', 'radius' is '1000'."
      }
    ]
  },
  "query_117_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 989020487048284489
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '989020487048284489'."
      }
    ]
  },
  "query_108_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 48347678
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '48347678'."
      }
    ]
  },
  "query_33_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "gas station",
        "latitude": 37.7749,
        "longitude": -122.4194,
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'gas station', 'latitude' is '37.7749', 'longitude' is '-122.4194', 'radius' is '5000'."
      }
    ]
  },
  "query_482_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_7_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "pBw6UH_9mAUJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'pBw6UH_9mAUJ'."
      }
    ]
  },
  "query_97_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_17_2_11": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 203801
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '203801'."
      }
    ]
  },
  "query_447_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_152_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_14_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "neural networks"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'neural networks'."
      }
    ]
  },
  "query_55_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 278
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '278'."
      }
    ]
  },
  "query_11_1_10": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "Barcelona,architecture"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'Barcelona,architecture'."
      }
    ]
  },
  "query_355_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "13:00",
        "end_time": "17:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '13:00', 'end_time' is '17:00'."
      }
    ]
  },
  "query_220_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_245_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum error correction"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum error correction'."
      }
    ]
  },
  "query_235_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.get_route",
      "args": {
        "origin": "current_location",
        "destination": "(102.963036,25.486193)"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'origin', 'type': 'STRING', 'description': \"coordinate of the start location, format with 'lon,lat'\"}, {'name': 'destination', 'type': 'STRING', 'description': \"coordinate of the end location, format with 'lon,lat'\"}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_route with the parameter as follows: 'origin' is 'current_location', 'destination' is '(102.963036,25.486193)'."
      }
    ]
  },
  "query_0_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Berlin"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Berlin'."
      }
    ]
  },
  "query_13_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Stanford University",
        "end": "Institute for Research in the Social Sciences"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Stanford University', 'end' is 'Institute for Research in the Social Sciences'."
      }
    ]
  },
  "query_153_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Tokyo"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Tokyo'."
      }
    ]
  },
  "query_224_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 157336
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '157336'."
      }
    ]
  },
  "query_221_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Lecture Notes: Optimization for Machine Learning",
        "bullet_items": "Authors: Elad Hazan\nSummary: Lecture notes on optimization for machine learning, derived from a course at Princeton University and tutorials given in MLSS, Buenos Aires, as well as Simons Foundation, Berkeley."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Lecture Notes: Optimization for Machine Learning', 'bullet_items' is 'Authors: Elad Hazan\nSummary: Lecture notes on optimization for machine learning, derived from a course at Princeton University and tutorials given in MLSS, Buenos Aires, as well as Simons Foundation, Berkeley.'."
      }
    ]
  },
  "query_377_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_329_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Impact of AI on Modern Society"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Impact of AI on Modern Society'."
      }
    ]
  },
  "query_472_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Top Rated Movies",
        "bullet_items": "Title: The Godfather\nRelease Date: 1972-03-14\nPopularity: 111.806\nRating: 8.7\n\nTitle: The Shawshank Redemption\nRelease Date: 1994-09-23\nPopularity: 95.725\nRating: 8.7\n\nTitle: The Godfather Part II\nRelease Date: 1974-12-20\nPopularity: 57.588\nRating: 8.6\n\nTitle: Schindler's List\nRelease Date: 1993-12-15\nPopularity: 59.152\nRating: 8.6\n\nTitle: Dilwale Dulhania Le Jayenge\nRelease Date: 1995-10-20\nPopularity: 28.46\nRating: 8.6"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Top Rated Movies', 'bullet_items' is 'Title: The Godfather\nRelease Date: 1972-03-14\nPopularity: 111.806\nRating: 8.7\n\nTitle: The Shawshank Redemption\nRelease Date: 1994-09-23\nPopularity: 95.725\nRating: 8.7\n\nTitle: The Godfather Part II\nRelease Date: 1974-12-20\nPopularity: 57.588\nRating: 8.6\n\nTitle: Schindler's List\nRelease Date: 1993-12-15\nPopularity: 59.152\nRating: 8.6\n\nTitle: Dilwale Dulhania Le Jayenge\nRelease Date: 1995-10-20\nPopularity: 28.46\nRating: 8.6'."
      }
    ]
  },
  "query_305_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "downtown Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'downtown Los Angeles'."
      }
    ]
  },
  "query_310_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "123 Main St, New York, NY"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is '123 Main St, New York, NY'."
      }
    ]
  },
  "query_78_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "climate change",
        "limit": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'climate change', 'limit' is '3'."
      }
    ]
  },
  "query_104_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 10803849
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '10803849'."
      }
    ]
  },
  "query_374_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {
        "ticker": "AAPL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: 'ticker' is 'AAPL'."
      }
    ]
  },
  "query_347_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_336_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_68_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 299534
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '299534'."
      }
    ]
  },
  "query_443_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "惊奇队长2"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '惊奇队长2'."
      }
    ]
  },
  "query_360_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "impacts of climate change on biodiversity"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'impacts of climate change on biodiversity'."
      }
    ]
  },
  "query_297_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_9_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51619634
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51619634'."
      }
    ]
  },
  "query_104_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 4195503
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '4195503'."
      }
    ]
  },
  "query_223_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.aggregate_stock_with_time",
      "args": {
        "ticker": "AAPL",
        "multiplier": 1,
        "timespan": "week",
        "from": "2023-10-10",
        "to": "2023-10-16"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.aggregate_stock_with_time', 'description': 'get aggregate bars for a stock over a given date range in custom time window sizes', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The ticker symbol of the stock/equity'}, {'name': 'multiplier', 'type': 'NUMBER', 'description': 'The size of the timespan multiplier'}, {'name': 'timespan', 'type': 'STRING', 'description': \"The size of the time window, supported 'day', 'hour', 'week'\"}, {'name': 'from', 'type': 'STRING', 'description': 'The start of the aggregate time window with the format YYYY-MM-DD'}, {'name': 'to', 'type': 'STRING', 'description': 'The end of the aggregate time window with the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list of dict including the open and closed price in the given time period and the unix msec timestamp for the start of the aggregate window'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.aggregate_stock_with_time with the parameter as follows: 'ticker' is 'AAPL', 'multiplier' is '1', 'timespan' is 'week', 'from' is '2023-10-10', 'to' is '2023-10-16'."
      }
    ]
  },
  "query_221_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/recent_papers.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/recent_papers.ppt'."
      }
    ]
  },
  "query_350_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "marketing",
        "abs_location": "outputs/marketing.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'marketing', 'abs_location' is 'outputs/marketing.pptx'."
      }
    ]
  },
  "query_34_0_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Gas Stations Along the Route",
        "bullet_items": "- BP\n- Shell\n- Exxon\n- Gulf Gas Station\n- Shell"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Gas Stations Along the Route', 'bullet_items' is '- BP\n- Shell\n- Exxon\n- Gulf Gas Station\n- Shell'."
      }
    ]
  },
  "query_174_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 727017675359552471
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '727017675359552471'."
      }
    ]
  },
  "query_448_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "红猪"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is '红猪'."
      }
    ]
  },
  "query_254_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Scientific",
        "abs_location": "outputs/quantum_computing.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Scientific', 'abs_location' is 'outputs/quantum_computing.ppt'."
      }
    ]
  },
  "query_486_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_daliy_open_close",
      "args": {
        "ticker": "TSLA",
        "date": "2023-10-18"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_daliy_open_close', 'description': 'get the open, close and afterhours prices of a stock symbol on a certain date', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'date', 'type': 'STRING', 'description': 'The date of the requested open/close in the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'close', 'description': ''}, {'name': 'open', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_daliy_open_close with the parameter as follows: 'ticker' is 'TSLA', 'date' is '2023-10-18'."
      }
    ]
  },
  "query_475_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 299054
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '299054'."
      }
    ]
  },
  "query_117_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 49378969
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '49378969'."
      }
    ]
  },
  "query_91_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 691676460109271194
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '691676460109271194'."
      }
    ]
  },
  "query_296_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurants"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurants'."
      }
    ]
  },
  "query_208_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_107_1_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 424
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '424'."
      }
    ]
  },
  "query_35_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "10 Downing Street, London",
        "end": "1600 Pennsylvania Avenue, Washington D.C."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '10 Downing Street, London', 'end' is '1600 Pennsylvania Avenue, Washington D.C.'."
      }
    ]
  },
  "query_294_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 968051
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '968051'."
      }
    ]
  },
  "query_1_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Los Angeles'."
      }
    ]
  },
  "query_92_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_241_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_290_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "40.6892,-74.0445",
        "end": "31 Montgomery St, Jersey City, NJ, 07302"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '40.6892,-74.0445', 'end' is '31 Montgomery St, Jersey City, NJ, 07302'."
      }
    ]
  },
  "query_349_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_290_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_290_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "40.6892,-74.0445",
        "keywords": "restaurants"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '40.6892,-74.0445', 'keywords' is 'restaurants'."
      }
    ]
  },
  "query_202_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_212_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Modern",
        "abs_location": "outputs/ML_Research_Papers.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Modern', 'abs_location' is 'outputs/ML_Research_Papers.pptx'."
      }
    ]
  },
  "query_64_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 968051
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '968051'."
      }
    ]
  },
  "query_245_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "neural networks"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'neural networks'."
      }
    ]
  },
  "query_333_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "all_employees@example.com",
        "title": "New Employee Benefits",
        "body": "Here are the details of our new employee benefits package:\n\n- Health insurance\n- Retirement plan\n- Paid time off\n- Employee discounts\n\nPlease let me know if you have any questions or concerns.\n\nBest regards,\n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'all_employees@example.com', 'title' is 'New Employee Benefits', 'body' is 'Here are the details of our new employee benefits package:\n\n- Health insurance\n- Retirement plan\n- Paid time off\n- Employee discounts\n\nPlease let me know if you have any questions or concerns.\n\nBest regards,\n[Your Name]'."
      }
    ]
  },
  "query_164_1_9": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "MLA Citation",
        "bullet_items": "Muschter, Sabine, et al. 'Third-party impacts of short-term rental accommodation: A community survey to inform government responses.' Journal of sustainable tourism 30.5 (2022): 1102-1121."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'MLA Citation', 'bullet_items' is 'Muschter, Sabine, et al. 'Third-party impacts of short-term rental accommodation: A community survey to inform government responses.' Journal of sustainable tourism 30.5 (2022): 1102-1121.'."
      }
    ]
  },
  "query_342_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_67_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_486_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_68_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_245_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_97_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "HhtZwpAAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'HhtZwpAAAAAJ'."
      }
    ]
  },
  "query_104_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 4195503
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '4195503'."
      }
    ]
  },
  "query_202_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Quantum Computing Research",
        "bullet_items": "Bullet item 1.[SPAN]Bullet item 2.[SPAN]Bullet item 3."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Quantum Computing Research', 'bullet_items' is 'Bullet item 1.[SPAN]Bullet item 2.[SPAN]Bullet item 3.'."
      }
    ]
  },
  "query_64_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "LgoTNyB5W3kJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'LgoTNyB5W3kJ'."
      }
    ]
  },
  "query_274_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "efZZXguoqq8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'efZZXguoqq8J'."
      }
    ]
  },
  "query_314_2_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Seminyak Beach"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Seminyak Beach'."
      }
    ]
  },
  "query_78_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "renewable energy"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'renewable energy'."
      }
    ]
  },
  "query_453_1_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "奥本海默"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '奥本海默'."
      }
    ]
  },
  "query_305_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "famous landmarks in New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'famous landmarks in New York'."
      }
    ]
  },
  "query_67_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_356_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_377_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Amazon"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Amazon'."
      }
    ]
  },
  "query_202_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "standard",
        "abs_location": "outputs/quantum_research.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'standard', 'abs_location' is 'outputs/quantum_research.ppt'."
      }
    ]
  },
  "query_310_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "school",
        "places": "123 Main St, New York, NY",
        "radius": 2000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'school', 'places' is '123 Main St, New York, NY', 'radius' is '2000'."
      }
    ]
  },
  "query_148_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 700888293266225258
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '700888293266225258'."
      }
    ]
  },
  "query_245_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_321_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Central Park",
        "end": "Times Square"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Central Park', 'end' is 'Times Square'."
      }
    ]
  },
  "query_77_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_217_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "LnhCGNMAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'LnhCGNMAAAAJ'."
      }
    ]
  },
  "query_114_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51403713
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51403713'."
      }
    ]
  },
  "query_297_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_456_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "珍·古道尔的传奇一生, poster"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is '珍·古道尔的传奇一生, poster'."
      }
    ]
  },
  "query_152_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_332_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "/home/documents/business_document.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is '/home/documents/business_document.txt'."
      }
    ]
  },
  "query_246_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_53_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "business",
        "abs_location": "outputs/marketing_presentation.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'business', 'abs_location' is 'outputs/marketing_presentation.pptx'."
      }
    ]
  },
  "query_10_1_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_148_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_259_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "London, UK"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'London, UK'."
      }
    ]
  },
  "query_176_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Conference",
        "abs_location": "outputs/conference.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Conference', 'abs_location' is 'outputs/conference.ppt'."
      }
    ]
  },
  "query_7_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Paris"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Paris'."
      }
    ]
  },
  "query_70_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "121.473701,31.230416",
        "keywords": "attractions"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '121.473701,31.230416', 'keywords' is 'attractions'."
      }
    ]
  },
  "query_26_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "1600 Pennsylvania Avenue NW, Washington, DC 20500"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is '1600 Pennsylvania Avenue NW, Washington, DC 20500'."
      }
    ]
  },
  "query_13_0_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Stanford University",
        "end": "Michelle R. Clayman Institute for Gender Research"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Stanford University', 'end' is 'Michelle R. Clayman Institute for Gender Research'."
      }
    ]
  },
  "query_471_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_142_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_68_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Avengers: Endgame",
        "bullet_items": "Genres: Adventure, Science Fiction, Action\nRelease Date: 2019-04-24\nRuntime: 181 minutes\nOverview: After the devastating events of Avengers: Infinity War, the universe is in ruins due to the efforts of the Mad Titan, Thanos. With the help of remaining allies, the Avengers must assemble once more in order to undo Thanos' actions and restore order to the universe once and for all, no matter what consequences may be in store.\nVote Average: 8.262\nPopularity: 111.005",
        "image": "path/to/avengers_endgame_poster.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Avengers: Endgame', 'bullet_items' is 'Genres: Adventure, Science Fiction, Action\nRelease Date: 2019-04-24\nRuntime: 181 minutes\nOverview: After the devastating events of Avengers: Infinity War, the universe is in ruins due to the efforts of the Mad Titan, Thanos. With the help of remaining allies, the Avengers must assemble once more in order to undo Thanos' actions and restore order to the universe once and for all, no matter what consequences may be in store.\nVote Average: 8.262\nPopularity: 111.005', 'image' is 'path/to/avengers_endgame_poster.jpg'."
      }
    ]
  },
  "query_17_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 240
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '240'."
      }
    ]
  },
  "query_64_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 968051
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '968051'."
      }
    ]
  },
  "query_93_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Eiffel Tower, Paris"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Eiffel Tower, Paris'."
      }
    ]
  },
  "query_134_2_8": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 53555858
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '53555858'."
      }
    ]
  },
  "query_470_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 278
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '278'."
      }
    ]
  },
  "query_242_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum mechanics"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum mechanics'."
      }
    ]
  },
  "query_68_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_132_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "13:00",
        "end_time": "14:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '13:00', 'end_time' is '14:00'."
      }
    ]
  },
  "query_174_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 51746773
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '51746773'."
      }
    ]
  },
  "query_486_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_305_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "famous landmarks in New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'famous landmarks in New York'."
      }
    ]
  },
  "query_153_2_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 38677942
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '38677942'."
      }
    ]
  },
  "query_140_1_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "涉过愤怒的海 电影 预告片"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is '涉过愤怒的海 电影 预告片'."
      }
    ]
  },
  "query_17_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_58_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "迷失之城"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '迷失之城'."
      }
    ]
  },
  "query_1_0_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "Chiyoda City, Tokyo, Japan",
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'Chiyoda City, Tokyo, Japan', 'radius' is '500'."
      }
    ]
  },
  "query_310_1_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Simon Property Group"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Simon Property Group'."
      }
    ]
  },
  "query_175_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Paris"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Paris'."
      }
    ]
  },
  "query_250_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_464_1_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "116.407417,39.904172",
        "keywords": "restaurant"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '116.407417,39.904172', 'keywords' is 'restaurant'."
      }
    ]
  },
  "query_431_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "沙丘"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '沙丘'."
      }
    ]
  },
  "query_25_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "789 Park Ave, New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is '789 Park Ave, New York'."
      }
    ]
  },
  "query_88_2_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_472_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_101_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Business",
        "abs_location": "outputs/GlobalWarming.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Business', 'abs_location' is 'outputs/GlobalWarming.ppt'."
      }
    ]
  },
  "query_269_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_221_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Education",
        "abs_location": "outputs/science_education.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Education', 'abs_location' is 'outputs/science_education.ppt'."
      }
    ]
  },
  "query_310_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Lennar Corporation"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Lennar Corporation'."
      }
    ]
  },
  "query_212_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Machine Learning Papers",
        "bullet_items": "Published: 2019-09-08\nTitle: Lecture Notes: Optimization for Machine Learning\nAuthors: Elad Hazan\nSummary: Lecture notes on optimization for machine learning, derived from a course at Princeton University and tutorials given in MLSS, Buenos Aires, as well as Simons Foundation, Berkeley.\n\nPublished: 2018-11-11\nTitle: An Optimal Control View of Adversarial Machine Learning\nAuthors: Xiaojin Zhu\nSummary: I describe an optimal control view of adversarial machine learning, where the dynamical system is the machine learner, the input are adversarial actions, and the control costs are defined by the adversary's goals to do harm and be hard to detect. This view encompasses many types of adversarial machine learning, including test-item attacks, training-data poisoning, and adversarial reward shaping. The view encourages adversarial machine learning researcher to utilize advances in control theory and reinforcement learning.\n\nPublished: 2017-07-16\nTitle: Minimax Deviation Strategies for Machine Learning and Recognition with Short Learning Samples\nAuthors: Michail Schlesinger, Evgeniy Vodolazskiy\nSummary: The article is devoted to the problem of small learning samples in machine learning. The flaws of maximum likelihood learning and minimax learning are looked into and the concept of minimax deviation learning is introduced that is free of those flaws."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Machine Learning Papers', 'bullet_items' is 'Published: 2019-09-08\nTitle: Lecture Notes: Optimization for Machine Learning\nAuthors: Elad Hazan\nSummary: Lecture notes on optimization for machine learning, derived from a course at Princeton University and tutorials given in MLSS, Buenos Aires, as well as Simons Foundation, Berkeley.\n\nPublished: 2018-11-11\nTitle: An Optimal Control View of Adversarial Machine Learning\nAuthors: Xiaojin Zhu\nSummary: I describe an optimal control view of adversarial machine learning, where the dynamical system is the machine learner, the input are adversarial actions, and the control costs are defined by the adversary's goals to do harm and be hard to detect. This view encompasses many types of adversarial machine learning, including test-item attacks, training-data poisoning, and adversarial reward shaping. The view encourages adversarial machine learning researcher to utilize advances in control theory and reinforcement learning.\n\nPublished: 2017-07-16\nTitle: Minimax Deviation Strategies for Machine Learning and Recognition with Short Learning Samples\nAuthors: Michail Schlesinger, Evgeniy Vodolazskiy\nSummary: The article is devoted to the problem of small learning samples in machine learning. The flaws of maximum likelihood learning and minimax learning are looked into and the concept of minimax deviation learning is introduced that is free of those flaws.'."
      }
    ]
  },
  "query_339_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_449_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Top Movies",
        "abs_location": "outputs/top_movies.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Top Movies', 'abs_location' is 'outputs/top_movies.pptx'."
      }
    ]
  },
  "query_299_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "latitude": 40.757972,
        "longitude": -73.985536,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'latitude' is '40.757972', 'longitude' is '-73.985536', 'radius' is '1000'."
      }
    ]
  },
  "query_247_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Introduction",
        "bullet_items": "1. Blended learning\n2. Incorporating technology\n3. Focus on problem-solving\n4. Emphasis on conceptual understanding"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Introduction', 'bullet_items' is '1. Blended learning\n2. Incorporating technology\n3. Focus on problem-solving\n4. Emphasis on conceptual understanding'."
      }
    ]
  },
  "query_105_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 38677942
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '38677942'."
      }
    ]
  },
  "query_181_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Miami"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Miami'."
      }
    ]
  },
  "query_251_1_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Image related to Number Theory",
        "bullet_items": "Image: [SPAN]Basic concepts, Prime numbers, Number patterns",
        "image": "outputs/1697777690.2402813.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Image related to Number Theory', 'bullet_items' is 'Image: [SPAN]Basic concepts, Prime numbers, Number patterns', 'image' is 'outputs/1697777690.2402813.jpg'."
      }
    ]
  },
  "query_230_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'New York'."
      }
    ]
  },
  "query_275_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "Delivery_Distance.txt",
        "text": "The distance between 221B Baker Street and 10 Downing Street is 5.5 km."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'Delivery_Distance.txt', 'text' is 'The distance between 221B Baker Street and 10 Downing Street is 5.5 km.'."
      }
    ]
  },
  "query_272_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "Italian restaurant",
        "latitude": 41.122948,
        "longitude": -73.416082,
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'Italian restaurant', 'latitude' is '41.122948', 'longitude' is '-73.416082', 'radius' is '5000'."
      }
    ]
  },
  "query_68_0_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_7_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Best Travel Destinations"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Best Travel Destinations'."
      }
    ]
  },
  "query_296_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_187_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "recent scholarly articles about quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'recent scholarly articles about quantum computing'."
      }
    ]
  },
  "query_486_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "AAPL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'AAPL'."
      }
    ]
  },
  "query_148_1_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 691676460109271194,
        "date": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '691676460109271194', 'date' is '2023-10-19'."
      }
    ]
  },
  "query_164_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51634632
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51634632'."
      }
    ]
  },
  "query_44_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "organic products"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'organic products'."
      }
    ]
  },
  "query_305_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "I9ke4-WO9y8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'I9ke4-WO9y8J'."
      }
    ]
  },
  "query_76_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Intergovernmental Panel On Climate Change"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Intergovernmental Panel On Climate Change'."
      }
    ]
  },
  "query_231_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_269_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "New York",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'New York', 'days' is '3'."
      }
    ]
  },
  "query_191_0_9": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Quantum Computing Research",
        "bullet_items": "Research on quantum computing\n- Meta information of top 3 articles\n- Universities and research institutions nearby\n- Distance from 1600 Pennsylvania Avenue NW\n- Image related to quantum computing",
        "image": "outputs/1697703644.9069078.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Quantum Computing Research', 'bullet_items' is 'Research on quantum computing\n- Meta information of top 3 articles\n- Universities and research institutions nearby\n- Distance from 1600 Pennsylvania Avenue NW\n- Image related to quantum computing', 'image' is 'outputs/1697703644.9069078.jpg'."
      }
    ]
  },
  "query_114_2_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "San Francisco",
        "latitude": 37.797432,
        "longitude": -122.407883,
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'San Francisco', 'latitude' is '37.797432', 'longitude' is '-122.407883', 'radius' is '500'."
      }
    ]
  },
  "query_259_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_105_0_13": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/tokyo_trip_properties.txt",
        "text": "Property 1:\nTitle: Boutique hotel in Taito City\nType: Room in boutique hotel\nCapacity: 2\nRating: 4.72\nCoordinates: Latitude: 35.71975, Longitude: 139.79289\n\nProperty 2:\nTitle: Condo in Sumida City\nType: Entire condo\nCapacity: 2\nRating: 4.63\nCoordinates: Latitude: 35.7049, Longitude: 139.81403\n\nProperty 3:\nTitle: Hotel in Koto City\nType: Room in hotel\nCapacity: 2\nRating: 4.89\nCoordinates: Latitude: 35.6709, Longitude: 139.81034\n"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/tokyo_trip_properties.txt', 'text' is 'Property 1:\nTitle: Boutique hotel in Taito City\nType: Room in boutique hotel\nCapacity: 2\nRating: 4.72\nCoordinates: Latitude: 35.71975, Longitude: 139.79289\n\nProperty 2:\nTitle: Condo in Sumida City\nType: Entire condo\nCapacity: 2\nRating: 4.63\nCoordinates: Latitude: 35.7049, Longitude: 139.81403\n\nProperty 3:\nTitle: Hotel in Koto City\nType: Room in hotel\nCapacity: 2\nRating: 4.89\nCoordinates: Latitude: 35.6709, Longitude: 139.81034\n'."
      }
    ]
  },
  "query_10_2_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 37677930
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '37677930'."
      }
    ]
  },
  "query_143_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 972494279345285252
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '972494279345285252'."
      }
    ]
  },
  "query_281_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_24_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_290_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "40.6892,-74.0445",
        "end": "187 Warren St Ste 100, Jersey City, NJ, 07302"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '40.6892,-74.0445', 'end' is '187 Warren St Ste 100, Jersey City, NJ, 07302'."
      }
    ]
  },
  "query_368_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_363_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "pw00iBU50qkJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'pw00iBU50qkJ'."
      }
    ]
  },
  "query_176_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51634632
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51634632'."
      }
    ]
  },
  "query_92_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'San Francisco'."
      }
    ]
  },
  "query_165_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'machine learning'."
      }
    ]
  },
  "query_360_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "NhWonoUAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'NhWonoUAAAAJ'."
      }
    ]
  },
  "query_402_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Movie Analysis",
        "bullet_items": "1. The top movie genres\n2. Box office performance\n3. Audience ratings\n4. Trends in movie genres"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Movie Analysis', 'bullet_items' is '1. The top movie genres\n2. Box office performance\n3. Audience ratings\n4. Trends in movie genres'."
      }
    ]
  },
  "query_313_2_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Wegmans Catering",
        "bullet_items": "Offer a wide range of menu options.[SPAN]Known for excellent customer service.",
        "image": "outputs/1697708811.7092824.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Wegmans Catering', 'bullet_items' is 'Offer a wide range of menu options.[SPAN]Known for excellent customer service.', 'image' is 'outputs/1697708811.7092824.jpg'."
      }
    ]
  },
  "query_274_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_54_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "event_weather.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'event_weather.txt'."
      }
    ]
  },
  "query_431_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_162_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Pavel Hamet"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Pavel Hamet'."
      }
    ]
  },
  "query_392_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 968051
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '968051'."
      }
    ]
  },
  "query_368_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_164_2_11": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Property Information",
        "bullet_items": "1. Property 1: Bed and breakfast in San Francisco\n   - Type: Shared room in bed and breakfast\n   - Capacity: 1 person\n   - Rating: 4.74\n   - Latitude: 37.79821\n   - Longitude: -122.40521\n\n2. Property 2: Hostel in San Francisco\n   - Type: Shared room in hostel\n   - Capacity: 1 person\n   - Rating: 4.63\n   - Latitude: 37.78856\n   - Longitude: -122.41952\n\n3. Property 3: Aparthotel in San Francisco\n   - Type: Room in aparthotel\n   - Capacity: 1 person\n   - Rating: 4.88\n   - Latitude: 37.79101\n   - Longitude: -122.42011"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Property Information', 'bullet_items' is '1. Property 1: Bed and breakfast in San Francisco\n   - Type: Shared room in bed and breakfast\n   - Capacity: 1 person\n   - Rating: 4.74\n   - Latitude: 37.79821\n   - Longitude: -122.40521\n\n2. Property 2: Hostel in San Francisco\n   - Type: Shared room in hostel\n   - Capacity: 1 person\n   - Rating: 4.63\n   - Latitude: 37.78856\n   - Longitude: -122.41952\n\n3. Property 3: Aparthotel in San Francisco\n   - Type: Room in aparthotel\n   - Capacity: 1 person\n   - Rating: 4.88\n   - Latitude: 37.79101\n   - Longitude: -122.42011'."
      }
    ]
  },
  "query_375_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_163_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "O89oBDOtbPMJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'O89oBDOtbPMJ'."
      }
    ]
  },
  "query_279_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "200 Broadway, New York",
        "end": "22 Cortlandt Street, New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '200 Broadway, New York', 'end' is '22 Cortlandt Street, New York'."
      }
    ]
  },
  "query_395_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/inception_review.txt",
        "text": "Title: Inception\nRelease Date: 2010-07-15\nRuntime: 148 minutes\n\nOverview:\nCobb, a skilled thief who commits corporate espionage by infiltrating the subconscious of his targets is offered a chance to regain his old life as payment for a task considered to be impossible: \"inception\", the implantation of another person's idea into a target's subconscious.\n\nRating: 8.365/10"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/inception_review.txt', 'text' is 'Title: Inception\nRelease Date: 2010-07-15\nRuntime: 148 minutes\n\nOverview:\nCobb, a skilled thief who commits corporate espionage by infiltrating the subconscious of his targets is offered a chance to regain his old life as payment for a task considered to be impossible: \"inception\", the implantation of another person's idea into a target's subconscious.\n\nRating: 8.365/10'."
      }
    ]
  },
  "query_251_1_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_194_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "colleague@example.com",
        "title": "Machine Learning Article",
        "attachment": "outputs/article.docx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'colleague@example.com', 'title' is 'Machine Learning Article', 'attachment' is 'outputs/article.docx'."
      }
    ]
  },
  "query_347_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_174_1_9": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 727017675359552471
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '727017675359552471'."
      }
    ]
  },
  "query_53_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "data_v2/template_data/hotel.txt",
        "text": "{'text': 'Updated content of the file.'}"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'data_v2/template_data/hotel.txt', 'text' is '{'text': 'Updated content of the file.'}'."
      }
    ]
  },
  "query_355_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_208_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_92_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_191_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Conference Schedule",
        "bullet_items": "1. Opening Remarks\n2. Keynote Speech\n3. Panel Discussion\n4. Break\n5. Paper Presentations\n6. Lunch\n7. Workshop Sessions\n8. Closing Remarks"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Conference Schedule', 'bullet_items' is '1. Opening Remarks\n2. Keynote Speech\n3. Panel Discussion\n4. Break\n5. Paper Presentations\n6. Lunch\n7. Workshop Sessions\n8. Closing Remarks'."
      }
    ]
  },
  "query_456_0_10": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "侏罗纪公园",
        "bullet_items": "导演: 史蒂文·斯皮尔伯格\n主演: 山姆·尼尔, 劳拉·邓恩, 杰夫·高布伦\n评分: 8.3",
        "image": "outputs/1697986306.798348.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is '侏罗纪公园', 'bullet_items' is '导演: 史蒂文·斯皮尔伯格\n主演: 山姆·尼尔, 劳拉·邓恩, 杰夫·高布伦\n评分: 8.3', 'image' is 'outputs/1697986306.798348.jpg'."
      }
    ]
  },
  "query_151_1_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_96_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 51403713
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '51403713'."
      }
    ]
  },
  "query_77_2_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "JY-va7uEmP8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'JY-va7uEmP8J'."
      }
    ]
  },
  "query_321_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Central Park, New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Central Park, New York'."
      }
    ]
  },
  "query_270_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_270_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "hospital",
        "latitude": 43.3945347,
        "longitude": -87.89811154,
        "radius": 2000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'hospital', 'latitude' is '43.3945347', 'longitude' is '-87.89811154', 'radius' is '2000'."
      }
    ]
  },
  "query_40_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "colleague@example.com",
        "title": "Research Proposal",
        "body": "The purpose of the research: \n\nMethodologies used: \n\nExpected outcomes: "
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'colleague@example.com', 'title' is 'Research Proposal', 'body' is 'The purpose of the research: \n\nMethodologies used: \n\nExpected outcomes: '."
      }
    ]
  },
  "query_448_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_451_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_115_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 51634632,
        "checkIn": "2023-10-20",
        "checkOut": "2023-10-27"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '51634632', 'checkIn' is '2023-10-20', 'checkOut' is '2023-10-27'."
      }
    ]
  },
  "query_306_0_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "Xll3fxbuP8cJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'Xll3fxbuP8cJ'."
      }
    ]
  },
  "query_25_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "john.doe@example.com",
        "title": "Delivery Confirmation",
        "body": "Hello John, I am confirming the successful delivery to 123 Main St, Springfield."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'john.doe@example.com', 'title' is 'Delivery Confirmation', 'body' is 'Hello John, I am confirming the successful delivery to 123 Main St, Springfield.'."
      }
    ]
  },
  "query_61_2_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "驯龙高手",
        "bullet_items": "导演：迪恩·德布洛斯 克里斯·桑德斯\n主演：杰伊·巴鲁切尔，杰拉德·巴特勒，克雷格·费格森"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is '驯龙高手', 'bullet_items' is '导演：迪恩·德布洛斯 克里斯·桑德斯\n主演：杰伊·巴鲁切尔，杰拉德·巴特勒，克雷格·费格森'."
      }
    ]
  },
  "query_36_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/paper_readme.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/paper_readme.txt'."
      }
    ]
  },
  "query_483_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_77_2_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "102",
        "start_time": "09:00",
        "end_time": "11:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '09:00', 'end_time' is '11:00'."
      }
    ]
  },
  "query_10_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 53931387
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '53931387'."
      }
    ]
  },
  "query_262_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "123 Main Street",
        "end": "456 Oak Avenue"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '123 Main Street', 'end' is '456 Oak Avenue'."
      }
    ]
  },
  "query_368_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Introduction",
        "bullet_items": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut tristique lectus et lorem aliquam, at gravida ipsum dignissim. Sed eu risus lobortis, tincidunt mi non, scelerisque velit. Cras convallis tincidunt urna vitae dapibus. [SPAN] Sed auctor turpis nec nisi [SPAN] tempus, et venenatis magna interdum. [SPAN]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Introduction', 'bullet_items' is 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut tristique lectus et lorem aliquam, at gravida ipsum dignissim. Sed eu risus lobortis, tincidunt mi non, scelerisque velit. Cras convallis tincidunt urna vitae dapibus. [SPAN] Sed auctor turpis nec nisi [SPAN] tempus, et venenatis magna interdum. [SPAN]'."
      }
    ]
  },
  "query_108_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 48347678
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '48347678'."
      }
    ]
  },
  "query_210_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_60_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_240_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_266_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Hotel Mela Times Square",
        "end": "Empire State Building"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Hotel Mela Times Square', 'end' is 'Empire State Building'."
      }
    ]
  },
  "query_453_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_227_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_10_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 941597372112246343
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '941597372112246343'."
      }
    ]
  },
  "query_97_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": "858697692672545141"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '858697692672545141'."
      }
    ]
  },
  "query_148_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_46_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_227_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_144_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_251_0_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_156_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 933732691116240543
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '933732691116240543'."
      }
    ]
  },
  "query_338_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_333_1_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_172_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 38931663,
        "date": "2023-10-25"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '38931663', 'date' is '2023-10-25'."
      }
    ]
  },
  "query_395_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/Joker.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/Joker.pptx'."
      }
    ]
  },
  "query_148_1_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 51634632,
        "date": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '51634632', 'date' is '2023-10-19'."
      }
    ]
  },
  "query_105_0_10": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Tokyo Tower",
        "end": "35.71975,139.79289"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Tokyo Tower', 'end' is '35.71975,139.79289'."
      }
    ]
  },
  "query_254_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_192_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Oxford",
        "end": "Cambridge"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Oxford', 'end' is 'Cambridge'."
      }
    ]
  },
  "query_313_2_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "catering event"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'catering event'."
      }
    ]
  },
  "query_449_1_12": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "金手指"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '金手指'."
      }
    ]
  },
  "query_235_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.get_distance",
      "args": {
        "origins": "current_location",
        "destination": "(102.963036,25.486193)"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'origins', 'type': 'STRING', 'description': \"coordinate of the start location, format with 'lon,lat'\"}, {'name': 'destination', 'type': 'STRING', 'description': \"coordinate of the end location, format with 'lon,lat'\"}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in KM'}, {'name': 'duration', 'description': 'expected time in minutes'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_distance with the parameter as follows: 'origins' is 'current_location', 'destination' is '(102.963036,25.486193)'."
      }
    ]
  },
  "query_221_1_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "珍·古道尔的传奇一生"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is '珍·古道尔的传奇一生'."
      }
    ]
  },
  "query_269_0_8": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "customer3@example.com",
        "title": "Delivery Update",
        "body": "Dear Customer,\n\nWe are pleased to inform you that your package will be delivered on October 19, 2023.\n\nEstimated Delivery Time:\n\nRoute 1: Washington, DC to New York, NY - Distance: 367.293 km, Estimated Time: 4 hours 30 minutes\n\nRoute 2: New York, NY to Cupertino, CA - Distance: 4734.993 km, Estimated Time: 1 day 2 hours\n\nRoute 3: Cupertino, CA to Washington, DC - Distance: 4580.5 km, Estimated Time: 1 day 1 hour\n\nPlease feel free to contact us if you have any questions.\n\nBest regards,\nDelivery Team"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'customer3@example.com', 'title' is 'Delivery Update', 'body' is 'Dear Customer,\n\nWe are pleased to inform you that your package will be delivered on October 19, 2023.\n\nEstimated Delivery Time:\n\nRoute 1: Washington, DC to New York, NY - Distance: 367.293 km, Estimated Time: 4 hours 30 minutes\n\nRoute 2: New York, NY to Cupertino, CA - Distance: 4734.993 km, Estimated Time: 1 day 2 hours\n\nRoute 3: Cupertino, CA to Washington, DC - Distance: 4580.5 km, Estimated Time: 1 day 1 hour\n\nPlease feel free to contact us if you have any questions.\n\nBest regards,\nDelivery Team'."
      }
    ]
  },
  "query_311_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Times Square"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Times Square'."
      }
    ]
  },
  "query_20_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "big data analytics"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'big data analytics'."
      }
    ]
  },
  "query_185_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 137599
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '137599'."
      }
    ]
  },
  "query_182_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_92_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_221_1_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "奥本海默"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is '奥本海默'."
      }
    ]
  },
  "query_449_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "珍·古道尔的传奇一生",
        "bullet_items": "珍·古道尔的传奇一生是一部美国的纪录片、传记电影，由布莱特·摩根导演，简·古道尔、雨果·凡·拉维克、雨果·埃里克·路易斯·凡·拉维克等人主演。\n剧情简介：影片主角是在世界上拥有极高声誉的动物学家珍·古道尔，她二十多岁时前往非洲的原始森林，为了观察黑猩猩，在那里度过了三十八年的野外生涯，后来常年奔走于世界各地，呼吁人们保护野生动物、保护地球环境。 导演布莱特·摩根尤其擅长人物刻画，他从100多个小时从未公布过的珍·古道尔在野外考察和访谈的影像资料中选材剪辑，以第一人称视角，讲述了珍·古道尔年轻时在非洲研究黑猩猩的故事。伴随菲利普·格拉斯的迷人配乐，让观众感受到在那个仍由男性主导野外科研的年代，一个女人如何通过激情、奉献和毅力改变世界。影片还把人类的命运与动物交织在一起，大大强化了人与自然的关系。"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is '珍·古道尔的传奇一生', 'bullet_items' is '珍·古道尔的传奇一生是一部美国的纪录片、传记电影，由布莱特·摩根导演，简·古道尔、雨果·凡·拉维克、雨果·埃里克·路易斯·凡·拉维克等人主演。\n剧情简介：影片主角是在世界上拥有极高声誉的动物学家珍·古道尔，她二十多岁时前往非洲的原始森林，为了观察黑猩猩，在那里度过了三十八年的野外生涯，后来常年奔走于世界各地，呼吁人们保护野生动物、保护地球环境。 导演布莱特·摩根尤其擅长人物刻画，他从100多个小时从未公布过的珍·古道尔在野外考察和访谈的影像资料中选材剪辑，以第一人称视角，讲述了珍·古道尔年轻时在非洲研究黑猩猩的故事。伴随菲利普·格拉斯的迷人配乐，让观众感受到在那个仍由男性主导野外科研的年代，一个女人如何通过激情、奉献和毅力改变世界。影片还把人类的命运与动物交织在一起，大大强化了人与自然的关系。'."
      }
    ]
  },
  "query_204_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_187_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Smith"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Smith'."
      }
    ]
  },
  "query_297_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "New York City",
        "end": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'New York City', 'end' is 'Los Angeles'."
      }
    ]
  },
  "query_258_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "ABIT"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'ABIT'."
      }
    ]
  },
  "query_107_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_188_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "cafe",
        "places": "Eiffel Tower",
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'cafe', 'places' is 'Eiffel Tower', 'radius' is '500'."
      }
    ]
  },
  "query_250_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_140_1_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "惊奇队长2 电影 预告片"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is '惊奇队长2 电影 预告片'."
      }
    ]
  },
  "query_376_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "New York",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'New York', 'days' is '3'."
      }
    ]
  },
  "query_453_1_9": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "驯龙高手",
        "bullet_items": "驯龙高手是一部美国的动画、奇幻、冒险电影，由迪恩·德布洛斯导演，杰伊·巴鲁切尔、杰拉德·巴特勒、克雷格·费格森等人主演。\n\n剧情简介：维京岛国的少年小嗝嗝（杰伊•巴鲁切尔 Jay Baruchel 配音）是部落统领伟大的斯托里克（杰拉德·巴特勒 Gerard Butler 配音）的儿子，他非常想像自己的父亲一样亲手屠龙——这些飞龙是岛上维京人放牧羊群的主要天敌——但他每次出现在部落屠龙的战斗中都只给大家徒增烦恼。在一次对抗飞龙的战斗中，希卡普偷偷用射龙器击伤了一只最神秘的“夜之怒龙”，并背着族人放生、豢养，甚至驯服了这只龙，还给它起名“无牙”。希卡普的神秘行径引起了一同训练屠龙技巧的女孩阿斯特丽德（亚美莉卡·费雷拉 America Ferrera 配音）的怀疑。阿斯特丽德发现了希卡普的秘密，却同时被身骑“无牙”御风而飞的美妙体验所震撼。格雷决定在屠龙成人礼上向远征归来的斯托里克和族人讲明真相，说服大家放弃屠龙，却偏偏弄巧成拙，害得“无牙”被俘，一场更大的灾难就在眼前……"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is '驯龙高手', 'bullet_items' is '驯龙高手是一部美国的动画、奇幻、冒险电影，由迪恩·德布洛斯导演，杰伊·巴鲁切尔、杰拉德·巴特勒、克雷格·费格森等人主演。\n\n剧情简介：维京岛国的少年小嗝嗝（杰伊•巴鲁切尔 Jay Baruchel 配音）是部落统领伟大的斯托里克（杰拉德·巴特勒 Gerard Butler 配音）的儿子，他非常想像自己的父亲一样亲手屠龙——这些飞龙是岛上维京人放牧羊群的主要天敌——但他每次出现在部落屠龙的战斗中都只给大家徒增烦恼。在一次对抗飞龙的战斗中，希卡普偷偷用射龙器击伤了一只最神秘的“夜之怒龙”，并背着族人放生、豢养，甚至驯服了这只龙，还给它起名“无牙”。希卡普的神秘行径引起了一同训练屠龙技巧的女孩阿斯特丽德（亚美莉卡·费雷拉 America Ferrera 配音）的怀疑。阿斯特丽德发现了希卡普的秘密，却同时被身骑“无牙”御风而飞的美妙体验所震撼。格雷决定在屠龙成人礼上向远征归来的斯托里克和族人讲明真相，说服大家放弃屠龙，却偏偏弄巧成拙，害得“无牙”被俘，一场更大的灾难就在眼前……'."
      }
    ]
  },
  "query_471_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_241_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "ITZ1e7MAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'ITZ1e7MAAAAJ'."
      }
    ]
  },
  "query_365_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Smith"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Smith'."
      }
    ]
  },
  "query_240_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_98_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 34546645
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '34546645'."
      }
    ]
  },
  "query_472_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/movie_comparison.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/movie_comparison.pptx'."
      }
    ]
  },
  "query_133_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 984458557997768943
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '984458557997768943'."
      }
    ]
  },
  "query_322_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'San Francisco'."
      }
    ]
  },
  "query_163_1_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": "12358255"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '12358255'."
      }
    ]
  },
  "query_368_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "marketingteam@example.com",
        "title": "New Campaign Ideas",
        "body": "Hi team, I would like to gather some new campaign ideas for our upcoming product launch. Please share your suggestions by the end of the week. Thank you!"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'marketingteam@example.com', 'title' is 'New Campaign Ideas', 'body' is 'Hi team, I would like to gather some new campaign ideas for our upcoming product launch. Please share your suggestions by the end of the week. Thank you!'."
      }
    ]
  },
  "query_56_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "小丑"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '小丑'."
      }
    ]
  },
  "query_134_2_11": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Property 1",
        "bullet_items": "Guest suite in Miami\n- ★4.59\n- 1 bedroom\n- 1 bed\n- 1 bath"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Property 1', 'bullet_items' is 'Guest suite in Miami\n- ★4.59\n- 1 bedroom\n- 1 bed\n- 1 bath'."
      }
    ]
  },
  "query_449_1_18": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_310_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "museum",
        "places": "Times Square",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'museum', 'places' is 'Times Square', 'radius' is '5000'."
      }
    ]
  },
  "query_208_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "aRCT0jKYjgIJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'aRCT0jKYjgIJ'."
      }
    ]
  },
  "query_77_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "13:00",
        "end_time": "14:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '13:00', 'end_time' is '14:00'."
      }
    ]
  },
  "query_204_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_136_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 1004413709358464188
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '1004413709358464188'."
      }
    ]
  },
  "query_111_1_9": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "New Brunswick, NJ, United States"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'New Brunswick, NJ, United States'."
      }
    ]
  },
  "query_372_2_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Agenda",
        "bullet_items": "1. Introduction[SPAN]2. Project updates[SPAN]3. Discussion on next steps"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Agenda', 'bullet_items' is '1. Introduction[SPAN]2. Project updates[SPAN]3. Discussion on next steps'."
      }
    ]
  },
  "query_172_0_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 38931663
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '38931663'."
      }
    ]
  },
  "query_306_0_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "_OeLMnH7R0IJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is '_OeLMnH7R0IJ'."
      }
    ]
  },
  "query_77_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Smith"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Smith'."
      }
    ]
  },
  "query_165_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "ITZ1e7MAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'ITZ1e7MAAAAJ'."
      }
    ]
  },
  "query_190_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_2_0_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 53132475
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '53132475'."
      }
    ]
  },
  "query_272_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 968051
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '968051'."
      }
    ]
  },
  "query_46_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "疯狂元素城"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '疯狂元素城'."
      }
    ]
  },
  "query_164_2_12": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Key Points from Scholarly Articles",
        "bullet_items": "1. Utilizing digital advocacy in community organizing: Lessons learned from organizing in virtual spaces to promote worker rights and economic justice\n   - Citation: Brady, Shane R., Jimmy A. Young, and David A. McLeod. \"Utilizing digital advocacy in community organizing: Lessons learned from organizing in virtual spaces to promote worker rights and economic justice.\" Journal of Community Practice 23.2 (2015): 255-273\n\n2. So you think you want to run an environmental conservation meeting? Advice on the slings and arrows of outrageous fortune that accompany academic conference planning\n   - Citation: Parsons, E. C. M. \"So you think you want to run an environmental conservation meeting? Advice on the slings and arrows of outrageous fortune that accompany academic conference planning.\" Journal of Environmental Studies and Sciences 5 (2015): 735-744\n\n3. Manpower planning and organization design\n   - Citation: Bryant, Donald T., and Richard J. Niehaus. Manpower planning and organization design. Vol. 7. Springer Science & Business Media, 2013"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Key Points from Scholarly Articles', 'bullet_items' is '1. Utilizing digital advocacy in community organizing: Lessons learned from organizing in virtual spaces to promote worker rights and economic justice\n   - Citation: Brady, Shane R., Jimmy A. Young, and David A. McLeod. \"Utilizing digital advocacy in community organizing: Lessons learned from organizing in virtual spaces to promote worker rights and economic justice.\" Journal of Community Practice 23.2 (2015): 255-273\n\n2. So you think you want to run an environmental conservation meeting? Advice on the slings and arrows of outrageous fortune that accompany academic conference planning\n   - Citation: Parsons, E. C. M. \"So you think you want to run an environmental conservation meeting? Advice on the slings and arrows of outrageous fortune that accompany academic conference planning.\" Journal of Environmental Studies and Sciences 5 (2015): 735-744\n\n3. Manpower planning and organization design\n   - Citation: Bryant, Donald T., and Richard J. Niehaus. Manpower planning and organization design. Vol. 7. Springer Science & Business Media, 2013'."
      }
    ]
  },
  "query_477_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "The Godfather movie information"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'The Godfather movie information'."
      }
    ]
  },
  "query_176_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_307_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Berlin"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Berlin'."
      }
    ]
  },
  "query_35_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "New York City",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'New York City', 'days' is '3'."
      }
    ]
  },
  "query_205_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "驯龙高手"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '驯龙高手'."
      }
    ]
  },
  "query_181_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 733251743064542501
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '733251743064542501'."
      }
    ]
  },
  "query_116_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Los Angeles'."
      }
    ]
  },
  "query_305_1_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Smith"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Smith'."
      }
    ]
  },
  "query_279_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "Broadway_to_Cortlandt_route.txt",
        "text": "['Head east on Broadway toward Roebling St', 'Turn right onto Marcy Ave', 'Road name changes to Williamsburg St W', 'Turn left onto Wythe Ave, then immediately turn left onto Williamsburg St E', 'Take the ramp on the left for I-278 East and head toward La Guardia Airport / Triboro Br', 'Take the ramp on the left for I-278 East and head toward RFK Br', 'Take the ramp on the left for I-278 East and head toward Bruckner Expwy / New Haven', 'At Exit 52, head right on the ramp for Bruckner Blvd toward Bronx River Pkwy / White Plains', 'Take the ramp on the right for Bronx River Pkwy N and head toward WHITE PLAINS', 'At Exit 10A, head on the ramp right and follow signs for Yonkers Ave', 'Turn right onto Yonkers Ave toward Mount Vernon', 'Road name changes to Mount Vernon Ave', 'Turn right onto S Bond St', 'Road name changes to N 14th Ave', 'Turn right onto W 1st St', 'Turn right onto Cortlandt St', 'Arrive at 22 Cortlandt St, Mount Vernon, NY 10550']"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'Broadway_to_Cortlandt_route.txt', 'text' is '['Head east on Broadway toward Roebling St', 'Turn right onto Marcy Ave', 'Road name changes to Williamsburg St W', 'Turn left onto Wythe Ave, then immediately turn left onto Williamsburg St E', 'Take the ramp on the left for I-278 East and head toward La Guardia Airport / Triboro Br', 'Take the ramp on the left for I-278 East and head toward RFK Br', 'Take the ramp on the left for I-278 East and head toward Bruckner Expwy / New Haven', 'At Exit 52, head right on the ramp for Bruckner Blvd toward Bronx River Pkwy / White Plains', 'Take the ramp on the right for Bronx River Pkwy N and head toward WHITE PLAINS', 'At Exit 10A, head on the ramp right and follow signs for Yonkers Ave', 'Turn right onto Yonkers Ave toward Mount Vernon', 'Road name changes to Mount Vernon Ave', 'Turn right onto S Bond St', 'Road name changes to N 14th Ave', 'Turn right onto W 1st St', 'Turn right onto Cortlandt St', 'Arrive at 22 Cortlandt St, Mount Vernon, NY 10550']'."
      }
    ]
  },
  "query_71_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.get_distance",
      "args": {
        "origins": "121.490872,31.241364",
        "destination": "121.490784,31.243674"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'origins', 'type': 'STRING', 'description': \"coordinate of the start location, format with 'lon,lat'\"}, {'name': 'destination', 'type': 'STRING', 'description': \"coordinate of the end location, format with 'lon,lat'\"}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in KM'}, {'name': 'duration', 'description': 'expected time in minutes'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_distance with the parameter as follows: 'origins' is '121.490872,31.241364', 'destination' is '121.490784,31.243674'."
      }
    ]
  },
  "query_246_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_266_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "09:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '09:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_376_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "subscribers@example.com",
        "title": "New Travel Blog Post",
        "body": "Check out my latest blog post: [LINK_TO_BLOG_POST]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'subscribers@example.com', 'title' is 'New Travel Blog Post', 'body' is 'Check out my latest blog post: [LINK_TO_BLOG_POST]'."
      }
    ]
  },
  "query_103_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 40553667
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '40553667'."
      }
    ]
  },
  "query_456_1_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Top 3 Forthcoming Movies",
        "bullet_items": "1. [SPAN]红猪[SPAN] - 喜剧 / 动画 / 冒险[SPAN] - 11月17日\n2. [SPAN]涉过愤怒的海[SPAN] - 剧情 / 犯罪 / 悬疑[SPAN] - 11月25日\n3. [SPAN]惊奇队长2[SPAN] - 动作 / 奇幻 / 冒险[SPAN] - 11月10日"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Top 3 Forthcoming Movies', 'bullet_items' is '1. [SPAN]红猪[SPAN] - 喜剧 / 动画 / 冒险[SPAN] - 11月17日\n2. [SPAN]涉过愤怒的海[SPAN] - 剧情 / 犯罪 / 悬疑[SPAN] - 11月25日\n3. [SPAN]惊奇队长2[SPAN] - 动作 / 奇幻 / 冒险[SPAN] - 11月10日'."
      }
    ]
  },
  "query_247_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_69_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 278
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '278'."
      }
    ]
  },
  "query_16_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_105_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 38677942
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '38677942'."
      }
    ]
  },
  "query_220_2_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_484_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_355_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "attendee1@example.com, attendee2@example.com, attendee3@example.com",
        "title": "Meeting Details",
        "body": "Dear attendees, \n\nWe would like to invite you to a meeting tomorrow at 2:00 PM. The details are as follows: \n\nLocation: Conference Room A \nTopic: Project Planning \n\nPlease let us know if you have any conflicts. \n\nBest regards, \nEvent Planner"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'attendee1@example.com, attendee2@example.com, attendee3@example.com', 'title' is 'Meeting Details', 'body' is 'Dear attendees, \n\nWe would like to invite you to a meeting tomorrow at 2:00 PM. The details are as follows: \n\nLocation: Conference Room A \nTopic: Project Planning \n\nPlease let us know if you have any conflicts. \n\nBest regards, \nEvent Planner'."
      }
    ]
  },
  "query_10_1_9": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 51619634,
        "checkIn": "2023-10-18",
        "checkOut": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '51619634', 'checkIn' is '2023-10-18', 'checkOut' is '2023-10-19'."
      }
    ]
  },
  "query_174_1_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51541759
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51541759'."
      }
    ]
  },
  "query_404_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_352_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_381_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_453_1_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "珍·古道尔的传奇一生"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '珍·古道尔的传奇一生'."
      }
    ]
  },
  "query_40_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_291_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_461_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "TSLA"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'TSLA'."
      }
    ]
  },
  "query_376_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_443_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "涉过愤怒的海"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '涉过愤怒的海'."
      }
    ]
  },
  "query_94_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_255_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_134_2_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 834833864568549748
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '834833864568549748'."
      }
    ]
  },
  "query_369_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Paris"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Paris'."
      }
    ]
  },
  "query_215_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_143_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 972494279345285252
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '972494279345285252'."
      }
    ]
  },
  "query_144_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 691676460109271194,
        "checkIn": "2023-10-20",
        "checkOut": "2023-10-23"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '691676460109271194', 'checkIn' is '2023-10-20', 'checkOut' is '2023-10-23'."
      }
    ]
  },
  "query_484_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "movie_reviews",
        "abs_location": "outputs/movie_reviews.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'movie_reviews', 'abs_location' is 'outputs/movie_reviews.ppt'."
      }
    ]
  },
  "query_148_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_33_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_95_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_78_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "6Vn-Xp2UGfgJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is '6Vn-Xp2UGfgJ'."
      }
    ]
  },
  "query_206_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_482_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_449_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_81_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_28_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "W New York - Times Square",
        "end": "Central Park"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'W New York - Times Square', 'end' is 'Central Park'."
      }
    ]
  },
  "query_57_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "奥本海默"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '奥本海默'."
      }
    ]
  },
  "query_174_1_17": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "San Francisco, CA"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'San Francisco, CA'."
      }
    ]
  },
  "query_279_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "200 Broadway, New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is '200 Broadway, New York'."
      }
    ]
  },
  "query_56_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_104_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Los Angeles'."
      }
    ]
  },
  "query_174_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51746773
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51746773'."
      }
    ]
  },
  "query_132_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "102",
        "start_time": "13:00",
        "end_time": "14:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '13:00', 'end_time' is '14:00'."
      }
    ]
  },
  "query_195_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "长安三万里"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '长安三万里'."
      }
    ]
  },
  "query_259_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "GOOGL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'GOOGL'."
      }
    ]
  },
  "query_295_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 785218
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '785218'."
      }
    ]
  },
  "query_351_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_247_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "deep learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'deep learning'."
      }
    ]
  },
  "query_351_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "New York City",
        "days": 1
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'New York City', 'days' is '1'."
      }
    ]
  },
  "query_229_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_477_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_2_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 33884250
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '33884250'."
      }
    ]
  },
  "query_441_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Brett Morgen"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Brett Morgen'."
      }
    ]
  },
  "query_294_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_1_1_8": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 51746773
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '51746773'."
      }
    ]
  },
  "query_111_1_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 4807875
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '4807875'."
      }
    ]
  },
  "query_255_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "London",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'London', 'days' is '3'."
      }
    ]
  },
  "query_182_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "123 Main Street, New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is '123 Main Street, New York'."
      }
    ]
  },
  "query_258_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "cryptocurrency regulations"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'cryptocurrency regulations'."
      }
    ]
  },
  "query_226_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_454_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "<location>",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is '<location>', 'days' is '3'."
      }
    ]
  },
  "query_352_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Apple Inc."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Apple Inc.'."
      }
    ]
  },
  "query_172_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 989883752603321143,
        "date": "2023-10-25"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '989883752603321143', 'date' is '2023-10-25'."
      }
    ]
  },
  "query_363_1_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Applications",
        "bullet_items": "1. Disease diagnosis\n2. Treatment recommendation\n3. Patient monitoring\n4. Drug discovery\n5. Healthcare management"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Applications', 'bullet_items' is '1. Disease diagnosis\n2. Treatment recommendation\n3. Patient monitoring\n4. Drug discovery\n5. Healthcare management'."
      }
    ]
  },
  "query_408_1_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_377_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Tesla"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Tesla'."
      }
    ]
  },
  "query_354_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_35_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'New York City'."
      }
    ]
  },
  "query_148_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 299054
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '299054'."
      }
    ]
  },
  "query_77_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "pdcI9r5sCJcJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'pdcI9r5sCJcJ'."
      }
    ]
  },
  "query_221_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/now_playing_movies.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/now_playing_movies.ppt'."
      }
    ]
  },
  "query_283_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_103_1_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 24533837,
        "checkIn": "2023-10-19",
        "checkOut": "2023-10-26"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '24533837', 'checkIn' is '2023-10-19', 'checkOut' is '2023-10-26'."
      }
    ]
  },
  "query_230_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_174_1_11": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "09:00",
        "end_time": "11:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '09:00', 'end_time' is '11:00'."
      }
    ]
  },
  "query_200_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_335_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_199_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_218_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "number theory"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'number theory'."
      }
    ]
  },
  "query_365_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_466_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "technology"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'technology'."
      }
    ]
  },
  "query_114_2_8": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "San Bruno",
        "latitude": 37.6332,
        "longitude": -122.41208,
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'San Bruno', 'latitude' is '37.6332', 'longitude' is '-122.41208', 'radius' is '500'."
      }
    ]
  },
  "query_1_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 20654271
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '20654271'."
      }
    ]
  },
  "query_78_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Robert Gross"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Robert Gross'."
      }
    ]
  },
  "query_111_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'San Francisco'."
      }
    ]
  },
  "query_174_1_16": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'San Francisco'."
      }
    ]
  },
  "query_25_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "456 Broad St, Springfield",
        "end": "123 Main St, Springfield"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '456 Broad St, Springfield', 'end' is '123 Main St, Springfield'."
      }
    ]
  },
  "query_25_1_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "attendee3@example.com",
        "title": "Thank You for Attending the Event",
        "body": "Dear Attendee 3, \n\nThank you for attending our event at 789 Park Ave, New York. We hope you had a great time and found it informative. If you have any further questions or feedback, please don't hesitate to reach out to us. \n\nBest regards, \nEvent Planner"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'attendee3@example.com', 'title' is 'Thank You for Attending the Event', 'body' is 'Dear Attendee 3, \n\nThank you for attending our event at 789 Park Ave, New York. We hope you had a great time and found it informative. If you have any further questions or feedback, please don't hesitate to reach out to us. \n\nBest regards, \nEvent Planner'."
      }
    ]
  },
  "query_255_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "Quantum Computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'Quantum Computing'."
      }
    ]
  },
  "query_91_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "New York, NY, United States",
        "end": "45 Murray St, New York, NY, 10007"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'New York, NY, United States', 'end' is '45 Murray St, New York, NY, 10007'."
      }
    ]
  },
  "query_216_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_88_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Image of World War II",
        "bullet_items": "Image of World War II",
        "image": "outputs/1697716116.3940063.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Image of World War II', 'bullet_items' is 'Image of World War II', 'image' is 'outputs/1697716116.3940063.jpg'."
      }
    ]
  },
  "query_144_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_10_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_483_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "AAPL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'AAPL'."
      }
    ]
  },
  "query_224_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "The Dark Knight"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'The Dark Knight'."
      }
    ]
  },
  "query_464_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_107_1_10": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 19404
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '19404'."
      }
    ]
  },
  "query_297_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "movie theater",
        "latitude": 34.05223846,
        "longitude": -118.24334717,
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'movie theater', 'latitude' is '34.05223846', 'longitude' is '-118.24334717', 'radius' is '5000'."
      }
    ]
  },
  "query_134_0_9": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/paper_readme.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/paper_readme.txt'."
      }
    ]
  },
  "query_294_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "event space",
        "places": "Los Angeles Convention Center",
        "radius": 2000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'event space', 'places' is 'Los Angeles Convention Center', 'radius' is '2000'."
      }
    ]
  },
  "query_79_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Author Information",
        "bullet_items": "Name: John Smith\nAffiliations: Unknown affiliation\nWebsite: http://www.donysterling.co.uk/"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Author Information', 'bullet_items' is 'Name: John Smith\nAffiliations: Unknown affiliation\nWebsite: http://www.donysterling.co.uk/'."
      }
    ]
  },
  "query_13_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_395_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_443_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_431_2_14": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "User Review 3",
        "bullet_items": "User: Varya\nRating: N/A\nReview: Is there anyone on earth who doesn't like Christopher Nolan’s films? Inception is one of his masterpieces. It’s a science fiction film released in 2010 and written by undoubtedly one of the greatest directors in Hollywood, Christopher Nolan, the creator of such stunning films as ‘Memento’, ‘The dark knight’, Prestige’ and ‘Interstellar’. the cast is impressive: the main roles are played by Leo DiCaprio, Ken Watanabe, Joseph Gordon-Levitt, Marion Cotillard, Ellen Page, Tom Hardy, Dileep Rao, Cillian Murphy, Tom Berenger, and Michael Caine.\n\nThe film is based on the idea of lucid dreams. In the story, the professionals of industrial espionage, using special techniques to steal valuable secrets from the depths of the subconscious during sleep, when the human mind is most vulnerable, learn a new technique - the ‘inception’ of ideas into the human mind through his dream. The main character - Dom Cobb is a talented thief, his rare abilities made him a truly valuable player in the treacherous world of espionage, but they also turned him into a perennial fugitive and stripped him of everything he had ever loved. One day Cobb has a chance to correct mistakes. His latest case can bring everything back, but for that he needs to do the impossible - inception.\n\nThere are so many good things about the film. The plot of the film is definitely mind-blowing. You won't be able to take your eyes off the screen. The soundtrack is written by Hans Zimmer, who is certainly one of the most sought-after composers. I think all his music is incredibly touching, dramatic and powerful. There are also some iconic songs we all know. The work on the special effects is done flawlessly, evidently, a lot of money was spent on this. The acting is also wonderful, Leo DiCaprio, who was the first actor to accept the offer to play in the film, has done an amazing job.\n\nThe only thing that viewers can find bad about this film is that it can be extremely difficult to perceive. If you don’t watch the film close enough you can simply get lost in all these jumping from dreams to reality.\n\nA curious fact is that Christopher Nolan released the film in 2010 but started working on it at the beginning of the 2000s! I would recommend everyone to see the film, even if you are not interested in sci-fi.",
        "image": "outputs/1697986044.9381223.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'User Review 3', 'bullet_items' is 'User: Varya\nRating: N/A\nReview: Is there anyone on earth who doesn't like Christopher Nolan’s films? Inception is one of his masterpieces. It’s a science fiction film released in 2010 and written by undoubtedly one of the greatest directors in Hollywood, Christopher Nolan, the creator of such stunning films as ‘Memento’, ‘The dark knight’, Prestige’ and ‘Interstellar’. the cast is impressive: the main roles are played by Leo DiCaprio, Ken Watanabe, Joseph Gordon-Levitt, Marion Cotillard, Ellen Page, Tom Hardy, Dileep Rao, Cillian Murphy, Tom Berenger, and Michael Caine.\n\nThe film is based on the idea of lucid dreams. In the story, the professionals of industrial espionage, using special techniques to steal valuable secrets from the depths of the subconscious during sleep, when the human mind is most vulnerable, learn a new technique - the ‘inception’ of ideas into the human mind through his dream. The main character - Dom Cobb is a talented thief, his rare abilities made him a truly valuable player in the treacherous world of espionage, but they also turned him into a perennial fugitive and stripped him of everything he had ever loved. One day Cobb has a chance to correct mistakes. His latest case can bring everything back, but for that he needs to do the impossible - inception.\n\nThere are so many good things about the film. The plot of the film is definitely mind-blowing. You won't be able to take your eyes off the screen. The soundtrack is written by Hans Zimmer, who is certainly one of the most sought-after composers. I think all his music is incredibly touching, dramatic and powerful. There are also some iconic songs we all know. The work on the special effects is done flawlessly, evidently, a lot of money was spent on this. The acting is also wonderful, Leo DiCaprio, who was the first actor to accept the offer to play in the film, has done an amazing job.\n\nThe only thing that viewers can find bad about this film is that it can be extremely difficult to perceive. If you don’t watch the film close enough you can simply get lost in all these jumping from dreams to reality.\n\nA curious fact is that Christopher Nolan released the film in 2010 but started working on it at the beginning of the 2000s! I would recommend everyone to see the film, even if you are not interested in sci-fi.', 'image' is 'outputs/1697986044.9381223.jpg'."
      }
    ]
  },
  "query_47_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_417_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "18:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '18:00'."
      }
    ]
  },
  "query_238_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.aggregate_stock_with_time",
      "args": {
        "ticker": "AAPL",
        "multiplier": 7,
        "timespan": "day",
        "from": "2023-01-01",
        "to": "2023-01-31"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.aggregate_stock_with_time', 'description': 'get aggregate bars for a stock over a given date range in custom time window sizes', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The ticker symbol of the stock/equity'}, {'name': 'multiplier', 'type': 'NUMBER', 'description': 'The size of the timespan multiplier'}, {'name': 'timespan', 'type': 'STRING', 'description': \"The size of the time window, supported 'day', 'hour', 'week'\"}, {'name': 'from', 'type': 'STRING', 'description': 'The start of the aggregate time window with the format YYYY-MM-DD'}, {'name': 'to', 'type': 'STRING', 'description': 'The end of the aggregate time window with the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list of dict including the open and closed price in the given time period and the unix msec timestamp for the start of the aggregate window'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.aggregate_stock_with_time with the parameter as follows: 'ticker' is 'AAPL', 'multiplier' is '7', 'timespan' is 'day', 'from' is '2023-01-01', 'to' is '2023-01-31'."
      }
    ]
  },
  "query_164_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Impact of Short-Term Rentals on Local Communities"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Impact of Short-Term Rentals on Local Communities'."
      }
    ]
  },
  "query_11_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 52047578
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '52047578'."
      }
    ]
  },
  "query_114_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 561489475078914207
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '561489475078914207'."
      }
    ]
  },
  "query_474_0_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "The Shawshank Redemption"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'The Shawshank Redemption'."
      }
    ]
  },
  "query_368_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "john.doe@example.com",
        "title": "Product Inquiry",
        "body": "Hi John, I hope this email finds you well. I am reaching out to inquire about your interest in our latest product offerings. Please let me know if you have any questions. Best regards, Alex"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'john.doe@example.com', 'title' is 'Product Inquiry', 'body' is 'Hi John, I hope this email finds you well. I am reaching out to inquire about your interest in our latest product offerings. Please let me know if you have any questions. Best regards, Alex'."
      }
    ]
  },
  "query_356_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "john.doe@example.com",
        "title": "Urgent Delivery",
        "body": "Please confirm the delivery address as soon as possible."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'john.doe@example.com', 'title' is 'Urgent Delivery', 'body' is 'Please confirm the delivery address as soon as possible.'."
      }
    ]
  },
  "query_434_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.get_distance",
      "args": {
        "origins": "116.397499,39.908722",
        "destination": "121.510556,31.239722"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'origins', 'type': 'STRING', 'description': \"coordinate of the start location, format with 'lon,lat'\"}, {'name': 'destination', 'type': 'STRING', 'description': \"coordinate of the end location, format with 'lon,lat'\"}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in KM'}, {'name': 'duration', 'description': 'expected time in minutes'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_distance with the parameter as follows: 'origins' is '116.397499,39.908722', 'destination' is '121.510556,31.239722'."
      }
    ]
  },
  "query_220_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "惊奇队长2"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '惊奇队长2'."
      }
    ]
  },
  "query_70_0_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "Qian Zhongshu"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'Qian Zhongshu'."
      }
    ]
  },
  "query_294_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_103_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Barcelona"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Barcelona'."
      }
    ]
  },
  "query_5_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": "909363587647904523"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '909363587647904523'."
      }
    ]
  },
  "query_479_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_449_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Default",
        "abs_location": "outputs/upcoming_movies.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Default', 'abs_location' is 'outputs/upcoming_movies.pptx'."
      }
    ]
  },
  "query_14_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning in healthcare"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning in healthcare'."
      }
    ]
  },
  "query_163_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "CdeY2EeXYiAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'CdeY2EeXYiAJ'."
      }
    ]
  },
  "query_484_1_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "User Review",
        "bullet_items": "User: drystyx\nRating: 1.0\nReview: While I'm writing this, The Godfather is still beloved by people who love it simply because they are told they have to love it. \nIt's written by a mobster with the sole intention of depicting the lead mobsters as demi gods. Every line and every scene in the movie and the book is meant to intimidate people into thinking the 'Mafia' and really any mob, is a supernatural force.\nThis is a movie glorifying control freaks, and most critics are control freaks, and most critics are either in the mob or think they can join the mob.\nThe movie itself is dull and totally uninspiring, not to mention totally uninspired. For fifty years, the sheep have been cowing to the control freaks who tell them to love this movie that degrades them. \nThere just isn't anything favorable about this movie. It owes its success to people who have interests in the movie or think they can get brownie points with such people. It's totally Hollywood in its depressing nature, and even in the seventies it was a formula film."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'User Review', 'bullet_items' is 'User: drystyx\nRating: 1.0\nReview: While I'm writing this, The Godfather is still beloved by people who love it simply because they are told they have to love it. \nIt's written by a mobster with the sole intention of depicting the lead mobsters as demi gods. Every line and every scene in the movie and the book is meant to intimidate people into thinking the 'Mafia' and really any mob, is a supernatural force.\nThis is a movie glorifying control freaks, and most critics are control freaks, and most critics are either in the mob or think they can join the mob.\nThe movie itself is dull and totally uninspiring, not to mention totally uninspired. For fifty years, the sheep have been cowing to the control freaks who tell them to love this movie that degrades them. \nThere just isn't anything favorable about this movie. It owes its success to people who have interests in the movie or think they can get brownie points with such people. It's totally Hollywood in its depressing nature, and even in the seventies it was a formula film.'."
      }
    ]
  },
  "query_355_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_172_2_16": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "20:00",
        "end_time": "21:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '20:00', 'end_time' is '21:00'."
      }
    ]
  },
  "query_264_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Times Square, New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Times Square, New York City'."
      }
    ]
  },
  "query_208_0_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Seth Lloyd"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Seth Lloyd'."
      }
    ]
  },
  "query_111_1_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Bayonne, NJ, United States"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Bayonne, NJ, United States'."
      }
    ]
  },
  "query_200_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_372_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_224_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "computer vision"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'computer vision'."
      }
    ]
  },
  "query_332_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "example@example.com",
        "title": "Important Document",
        "body": "Please find the attached document.",
        "attachment": "/home/documents/business_document.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'example@example.com', 'title' is 'Important Document', 'body' is 'Please find the attached document.', 'attachment' is '/home/documents/business_document.txt'."
      }
    ]
  },
  "query_133_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Tokyo"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Tokyo'."
      }
    ]
  },
  "query_181_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Paris"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Paris'."
      }
    ]
  },
  "query_34_0_9": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Hotels Along the Route",
        "bullet_items": "- The Frederick Hotel\n- The Beekman, a Thompson Hotel\n- Millennium Downtown New York\n- Four Seasons Hotel New York Downtown\n- Smyth Tribeca"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Hotels Along the Route', 'bullet_items' is '- The Frederick Hotel\n- The Beekman, a Thompson Hotel\n- Millennium Downtown New York\n- Four Seasons Hotel New York Downtown\n- Smyth Tribeca'."
      }
    ]
  },
  "query_407_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "The Impact of Social Media on Society"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'The Impact of Social Media on Society'."
      }
    ]
  },
  "query_349_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_15_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/ML_articles_summary.txt",
        "text": "Published: 2019-09-08\nTitle: Lecture Notes: Optimization for Machine Learning\nAuthors: Elad Hazan\nSummary: Lecture notes on optimization for machine learning, derived from a course at\nPrinceton University and tutorials given in MLSS, Buenos Aires, as well as\nSimons Foundation, Berkeley.\n\nPublished: 2018-11-11\nTitle: An Optimal Control View of Adversarial Machine Learning\nAuthors: Xiaojin Zhu\nSummary: I describe an optimal control view of adversarial machine learning, where the\ndynamical system is the machine learner, the input are adversarial actions, and\nthe control costs are defined by the adversary's goals to do harm and be hard\nto detect. This view encompasses many types of adversarial machine learning,\nincluding test-item attacks, training-data poisoning, and adversarial reward\nshaping. The view encourages adversarial machine learning researcher to utilize\nadvances in control theory and reinforcement learning.\n\nPublished: 2017-07-16\nTitle: Minimax deviation strategies for machine learning and recognition with short learning samples\nAuthors: Michail Schlesinger, Evgeniy Vodolazskiy\nSummary: The article is devoted to the problem of small learning samples in machine\nlearning. The flaws of maximum likelihood learning and minimax learning are\nlooked into and the concept of minimax deviation learning is introduced that is\nfree of those flaws."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/ML_articles_summary.txt', 'text' is 'Published: 2019-09-08\nTitle: Lecture Notes: Optimization for Machine Learning\nAuthors: Elad Hazan\nSummary: Lecture notes on optimization for machine learning, derived from a course at\nPrinceton University and tutorials given in MLSS, Buenos Aires, as well as\nSimons Foundation, Berkeley.\n\nPublished: 2018-11-11\nTitle: An Optimal Control View of Adversarial Machine Learning\nAuthors: Xiaojin Zhu\nSummary: I describe an optimal control view of adversarial machine learning, where the\ndynamical system is the machine learner, the input are adversarial actions, and\nthe control costs are defined by the adversary's goals to do harm and be hard\nto detect. This view encompasses many types of adversarial machine learning,\nincluding test-item attacks, training-data poisoning, and adversarial reward\nshaping. The view encourages adversarial machine learning researcher to utilize\nadvances in control theory and reinforcement learning.\n\nPublished: 2017-07-16\nTitle: Minimax deviation strategies for machine learning and recognition with short learning samples\nAuthors: Michail Schlesinger, Evgeniy Vodolazskiy\nSummary: The article is devoted to the problem of small learning samples in machine\nlearning. The flaws of maximum likelihood learning and minimax learning are\nlooked into and the concept of minimax deviation learning is introduced that is\nfree of those flaws.'."
      }
    ]
  },
  "query_33_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "37.7749,-122.4194",
        "end": "1601 Mission St, San Francisco, CA, 94103"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '37.7749,-122.4194', 'end' is '1601 Mission St, San Francisco, CA, 94103'."
      }
    ]
  },
  "query_274_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_133_0_15": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 984458557997768943
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '984458557997768943'."
      }
    ]
  },
  "query_256_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "IBM"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'IBM'."
      }
    ]
  },
  "query_22_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "climate change"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'climate change'."
      }
    ]
  },
  "query_89_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_336_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 10997
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '10997'."
      }
    ]
  },
  "query_19_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "aRCT0jKYjgIJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'aRCT0jKYjgIJ'."
      }
    ]
  },
  "query_294_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "hotel",
        "places": "New York City",
        "latitude": 40.7589,
        "longitude": -73.9851,
        "radius": 2000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'hotel', 'places' is 'New York City', 'latitude' is '40.7589', 'longitude' is '-73.9851', 'radius' is '2000'."
      }
    ]
  },
  "query_224_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.get_coordinate",
      "args": {
        "address": "洛杉矶, 加利福尼亚"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_coordinate', 'description': 'Get the coordinate of a location. Param must be in Chinese', 'required_parameters': [{'name': 'address', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [{'name': 'city', 'type': 'STRING', 'description': 'specify the city to search'}], 'return_data': [{'name': 'coordinate', 'description': 'coordinate of the location, format with (lon, lat)'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_coordinate with the parameter as follows: 'address' is '洛杉矶, 加利福尼亚'."
      }
    ]
  },
  "query_77_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_134_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 855819398716503903
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '855819398716503903'."
      }
    ]
  },
  "query_76_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "climate change"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'climate change'."
      }
    ]
  },
  "query_34_1_12": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_482_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_110_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 890123674087541242
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '890123674087541242'."
      }
    ]
  },
  "query_238_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.get_distance",
      "args": {
        "origins": "39.908722,116.397496",
        "destination": "31.230416,121.473701"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'origins', 'type': 'STRING', 'description': \"coordinate of the start location, format with 'lon,lat'\"}, {'name': 'destination', 'type': 'STRING', 'description': \"coordinate of the end location, format with 'lon,lat'\"}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in KM'}, {'name': 'duration', 'description': 'expected time in minutes'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_distance with the parameter as follows: 'origins' is '39.908722,116.397496', 'destination' is '31.230416,121.473701'."
      }
    ]
  },
  "query_96_1_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_330_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "teacher@example.com",
        "title": "Homework Submission",
        "body": "Dear Teacher, I have attached my completed homework for your review. Thank you."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'teacher@example.com', 'title' is 'Homework Submission', 'body' is 'Dear Teacher, I have attached my completed homework for your review. Thank you.'."
      }
    ]
  },
  "query_192_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "coffee shops",
        "places": "Amsterdam",
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'coffee shops', 'places' is 'Amsterdam', 'radius' is '500'."
      }
    ]
  },
  "query_447_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_156_1_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "35.60381,139.73119",
        "keywords": "restaurant"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '35.60381,139.73119', 'keywords' is 'restaurant'."
      }
    ]
  },
  "query_156_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 37677930
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '37677930'."
      }
    ]
  },
  "query_43_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_314_2_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "Nusa Dua Beach",
        "days": 1
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'Nusa Dua Beach', 'days' is '1'."
      }
    ]
  },
  "query_427_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_82_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "upper body workout routines"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'upper body workout routines'."
      }
    ]
  },
  "query_191_0_10": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_1_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 33884250
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '33884250'."
      }
    ]
  },
  "query_376_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_220_2_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_44_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "Microsoft CMT <email@msr-cmt.org>",
        "title": "Follow-up on our conversation",
        "body": "",
        "attachment": "outputs/Product_Presentation.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'Microsoft CMT <email@msr-cmt.org>', 'title' is 'Follow-up on our conversation', 'body' is '', 'attachment' is 'outputs/Product_Presentation.ppt'."
      }
    ]
  },
  "query_174_1_14": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 727017675359552471,
        "date": "2023-10-18"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '727017675359552471', 'date' is '2023-10-18'."
      }
    ]
  },
  "query_368_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Marketing",
        "abs_location": "outputs/Marketing_Campaign.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Marketing', 'abs_location' is 'outputs/Marketing_Campaign.pptx'."
      }
    ]
  },
  "query_272_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurants",
        "places": "Miami",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurants', 'places' is 'Miami', 'radius' is '5000'."
      }
    ]
  },
  "query_452_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_134_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 7559897
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '7559897'."
      }
    ]
  },
  "query_41_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_193_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "sustainable tourism"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'sustainable tourism'."
      }
    ]
  },
  "query_78_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "HR5pAakAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'HR5pAakAAAAJ'."
      }
    ]
  },
  "query_444_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Doe"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Doe'."
      }
    ]
  },
  "query_139_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Patrick Henry Winston"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Patrick Henry Winston'."
      }
    ]
  },
  "query_174_1_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 51541759
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '51541759'."
      }
    ]
  },
  "query_340_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_164_1_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Sabine Muschter"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Sabine Muschter'."
      }
    ]
  },
  "query_54_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "weather.txt",
        "text": "Overall conditions: Sunny\nAverage temperature: 11.0°C"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'weather.txt', 'text' is 'Overall conditions: Sunny\nAverage temperature: 11.0°C'."
      }
    ]
  },
  "query_356_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_77_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_77_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Mary Johnson"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Mary Johnson'."
      }
    ]
  },
  "query_274_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "coffee shop",
        "latitude": 40.75699997,
        "longitude": -73.98600006,
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'coffee shop', 'latitude' is '40.75699997', 'longitude' is '-73.98600006', 'radius' is '500'."
      }
    ]
  },
  "query_479_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "The Godfather"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'The Godfather'."
      }
    ]
  },
  "query_137_1_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 550
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '550'."
      }
    ]
  },
  "query_79_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning techniques for anomaly detection"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning techniques for anomaly detection'."
      }
    ]
  },
  "query_486_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_336_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_8_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Los Angeles'."
      }
    ]
  },
  "query_65_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_310_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Central Park, New York, NY"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Central Park, New York, NY'."
      }
    ]
  },
  "query_140_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "涉过愤怒的海"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '涉过愤怒的海'."
      }
    ]
  },
  "query_55_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_250_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_228_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Avengers: Endgame"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Avengers: Endgame'."
      }
    ]
  },
  "query_28_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "New York Marriott Marquis",
        "end": "Central Park"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'New York Marriott Marquis', 'end' is 'Central Park'."
      }
    ]
  },
  "query_70_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Qian Zhongshu Shanghai"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Qian Zhongshu Shanghai'."
      }
    ]
  },
  "query_482_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_224_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_9_1_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": 101,
        "start_time": "18:00",
        "end_time": "22:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '101', 'start_time' is '18:00', 'end_time' is '22:00'."
      }
    ]
  },
  "query_127_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 858697692672545141,
        "checkIn": "2023-10-25",
        "checkOut": "2023-10-27"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '858697692672545141', 'checkIn' is '2023-10-25', 'checkOut' is '2023-10-27'."
      }
    ]
  },
  "query_427_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "The Godfather Part II"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'The Godfather Part II'."
      }
    ]
  },
  "query_17_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 2109
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '2109'."
      }
    ]
  },
  "query_101_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "Global Warming"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'Global Warming'."
      }
    ]
  },
  "query_456_0_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "奥本海默, poster"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is '奥本海默, poster'."
      }
    ]
  },
  "query_376_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_114_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51619634
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51619634'."
      }
    ]
  },
  "query_94_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "奥本海默"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '奥本海默'."
      }
    ]
  },
  "query_272_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "New York City",
        "end": "Miami"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'New York City', 'end' is 'Miami'."
      }
    ]
  },
  "query_51_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_374_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Apple Inc."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Apple Inc.'."
      }
    ]
  },
  "query_270_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "REAL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'REAL'."
      }
    ]
  },
  "query_111_2_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 726986015697846171
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '726986015697846171'."
      }
    ]
  },
  "query_451_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "FOX"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'FOX'."
      }
    ]
  },
  "query_251_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_68_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Avengers: Endgame"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Avengers: Endgame'."
      }
    ]
  },
  "query_258_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Bitcoin"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Bitcoin'."
      }
    ]
  },
  "query_68_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 299534
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '299534'."
      }
    ]
  },
  "query_352_1_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 597
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '597'."
      }
    ]
  },
  "query_71_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.get_route",
      "args": {
        "origin": "121.490872,31.241364",
        "destination": "121.490784,31.243674"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'origin', 'type': 'STRING', 'description': \"coordinate of the start location, format with 'lon,lat'\"}, {'name': 'destination', 'type': 'STRING', 'description': \"coordinate of the end location, format with 'lon,lat'\"}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_route with the parameter as follows: 'origin' is '121.490872,31.241364', 'destination' is '121.490784,31.243674'."
      }
    ]
  },
  "query_281_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_111_2_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 4631873
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '4631873'."
      }
    ]
  },
  "query_349_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_336_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 438631
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '438631'."
      }
    ]
  },
  "query_133_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 51113056,
        "date": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '51113056', 'date' is '2023-10-19'."
      }
    ]
  },
  "query_153_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 663272282290556235
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '663272282290556235'."
      }
    ]
  },
  "query_111_1_13": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_30_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "New York",
        "end": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'New York', 'end' is 'Los Angeles'."
      }
    ]
  },
  "query_45_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "john.doe@example.com",
        "title": "Meeting Confirmation",
        "body": "Dear John,\n\nI am writing to confirm our meeting on October 17, 2023, at 3 PM. The meeting will be held at our office. Please let me know if there are any changes or if you have any questions.\n\nBest regards,\n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'john.doe@example.com', 'title' is 'Meeting Confirmation', 'body' is 'Dear John,\n\nI am writing to confirm our meeting on October 17, 2023, at 3 PM. The meeting will be held at our office. Please let me know if there are any changes or if you have any questions.\n\nBest regards,\n[Your Name]'."
      }
    ]
  },
  "query_314_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "Gramercy Tavern",
        "latitude": 40.71304703,
        "longitude": -74.00723267,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'Gramercy Tavern', 'latitude' is '40.71304703', 'longitude' is '-74.00723267', 'radius' is '1000'."
      }
    ]
  },
  "query_277_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_268_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Los Angeles",
        "end": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Los Angeles', 'end' is 'San Francisco'."
      }
    ]
  },
  "query_322_0_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_88_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_456_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_359_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.get_coordinate",
      "args": {
        "address": "789 布罗德威, 纽约"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_coordinate', 'description': 'Get the coordinate of a location. Param must be in Chinese', 'required_parameters': [{'name': 'address', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [{'name': 'city', 'type': 'STRING', 'description': 'specify the city to search'}], 'return_data': [{'name': 'coordinate', 'description': 'coordinate of the location, format with (lon, lat)'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_coordinate with the parameter as follows: 'address' is '789 布罗德威, 纽约'."
      }
    ]
  },
  "query_108_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 48347678
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '48347678'."
      }
    ]
  },
  "query_478_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 554600
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '554600'."
      }
    ]
  },
  "query_218_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_191_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "1600 Pennsylvania Avenue NW, Washington, DC 20500",
        "end": "2121 I St NW, Washington, DC, 20052"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '1600 Pennsylvania Avenue NW, Washington, DC 20500', 'end' is '2121 I St NW, Washington, DC, 20052'."
      }
    ]
  },
  "query_269_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Central Park, New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Central Park, New York'."
      }
    ]
  },
  "query_310_2_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Empire State Realty Trust"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Empire State Realty Trust'."
      }
    ]
  },
  "query_57_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_299_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "40.757972, -73.985536",
        "end": "1501 Broadway, New York, NY, 10036"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '40.757972, -73.985536', 'end' is '1501 Broadway, New York, NY, 10036'."
      }
    ]
  },
  "query_0_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 997382,
        "checkIn": "2023-12-01",
        "checkOut": "2023-12-05"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '997382', 'checkIn' is '2023-12-01', 'checkOut' is '2023-12-05'."
      }
    ]
  },
  "query_242_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "iyxBtazI0SMJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'iyxBtazI0SMJ'."
      }
    ]
  },
  "query_254_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Technology",
        "abs_location": "outputs/computer_vision.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Technology', 'abs_location' is 'outputs/computer_vision.ppt'."
      }
    ]
  },
  "query_185_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Eiffel Tower",
        "end": "Louvre Museum"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Eiffel Tower', 'end' is 'Louvre Museum'."
      }
    ]
  },
  "query_206_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_235_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.get_coordinate",
      "args": {
        "address": "研究机构"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_coordinate', 'description': 'Get the coordinate of a location. Param must be in Chinese', 'required_parameters': [{'name': 'address', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [{'name': 'city', 'type': 'STRING', 'description': 'specify the city to search'}], 'return_data': [{'name': 'coordinate', 'description': 'coordinate of the location, format with (lon, lat)'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_coordinate with the parameter as follows: 'address' is '研究机构'."
      }
    ]
  },
  "query_312_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'San Francisco'."
      }
    ]
  },
  "query_10_2_10": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_79_1_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_172_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 44783505,
        "date": "2023-12-01"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '44783505', 'date' is '2023-12-01'."
      }
    ]
  },
  "query_374_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "subscribers@example.com",
        "title": "Latest News: Apple Inc.",
        "body": "Dear Subscribers,\n\nHere are the latest news articles related to the stock of Apple Inc.:\n\n1. Proshares' Short QQQ Play Tops The List This Week - ETF Winners And Losers: Leveraged Flows\n\n2. Netflix price increase: Here’s how much the major streaming services are set to cost\n\n3. Citizens grows coast-to-coast reach with private-banking unit\n\n4. Israel-Hamas war threatens tech sector growth and innovation\n\n5. Microsoft’s acquisition of Activision makes Big Tech even bigger — and harder to rein in\n\nStay updated with the latest news!\n\nRegards,\nYour Company"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'subscribers@example.com', 'title' is 'Latest News: Apple Inc.', 'body' is 'Dear Subscribers,\n\nHere are the latest news articles related to the stock of Apple Inc.:\n\n1. Proshares' Short QQQ Play Tops The List This Week - ETF Winners And Losers: Leveraged Flows\n\n2. Netflix price increase: Here’s how much the major streaming services are set to cost\n\n3. Citizens grows coast-to-coast reach with private-banking unit\n\n4. Israel-Hamas war threatens tech sector growth and innovation\n\n5. Microsoft’s acquisition of Activision makes Big Tech even bigger — and harder to rein in\n\nStay updated with the latest news!\n\nRegards,\nYour Company'."
      }
    ]
  },
  "query_34_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "gas station",
        "places": "New York",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'gas station', 'places' is 'New York', 'radius' is '5000'."
      }
    ]
  },
  "query_0_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 49634091,
        "checkIn": "2023-12-01",
        "checkOut": "2023-12-05"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '49634091', 'checkIn' is '2023-12-01', 'checkOut' is '2023-12-05'."
      }
    ]
  },
  "query_182_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "potentialclient@business.com",
        "title": "Product Demo",
        "body": "Dear potential client,\n\nI hope this email finds you well. I wanted to reach out to you to schedule a product demo for our latest offering. Our office is located at 123 Main Street, New York.\n\nPlease let me know a convenient time for you to have the demo, and I will be happy to arrange it.\n\nLooking forward to hearing from you.\n\nBest regards,\n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'potentialclient@business.com', 'title' is 'Product Demo', 'body' is 'Dear potential client,\n\nI hope this email finds you well. I wanted to reach out to you to schedule a product demo for our latest offering. Our office is located at 123 Main Street, New York.\n\nPlease let me know a convenient time for you to have the demo, and I will be happy to arrange it.\n\nLooking forward to hearing from you.\n\nBest regards,\n[Your Name]'."
      }
    ]
  },
  "query_456_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Top Movies",
        "abs_location": "outputs/top_movies.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Top Movies', 'abs_location' is 'outputs/top_movies.pptx'."
      }
    ]
  },
  "query_172_0_10": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 41020735,
        "checkIn": "2023-10-25",
        "checkOut": "2023-10-26"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '41020735', 'checkIn' is '2023-10-25', 'checkOut' is '2023-10-26'."
      }
    ]
  },
  "query_148_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "food"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'food'."
      }
    ]
  },
  "query_299_0_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "40.757972, -73.985536",
        "end": "1501 Broadway, New York, NY, 10036"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '40.757972, -73.985536', 'end' is '1501 Broadway, New York, NY, 10036'."
      }
    ]
  },
  "query_185_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "New York City",
        "end": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'New York City', 'end' is 'San Francisco'."
      }
    ]
  },
  "query_431_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 438631
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '438631'."
      }
    ]
  },
  "query_164_1_11": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_25_1_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: ."
      }
    ]
  },
  "query_11_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 24424717
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '24424717'."
      }
    ]
  },
  "query_307_1_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_377_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "researchteam@example.com",
        "title": "Project Updates",
        "body": "Please find attached the latest updates on our project."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'researchteam@example.com', 'title' is 'Project Updates', 'body' is 'Please find attached the latest updates on our project.'."
      }
    ]
  },
  "query_153_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 663272282290556235
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '663272282290556235'."
      }
    ]
  },
  "query_292_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Los Angeles",
        "end": "Las Vegas"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Los Angeles', 'end' is 'Las Vegas'."
      }
    ]
  },
  "query_43_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "professor2@example.com",
        "title": "Meeting Request for Project Discussion",
        "body": "Dear Professor, \n\nI hope this email finds you well. I am writing to request a meeting with you to discuss my project. I have been working on a project related to [project topic], and I would greatly appreciate your guidance and feedback.\n\nPlease let me know a convenient day and time for you to meet. I am available [provide your availability options]. If none of these times work for you, please suggest an alternative time that suits you better.\n\nThank you for considering my request. I look forward to meeting with you and discussing my project in detail.\n\nBest regards,\n[Your Name]",
        "attachment": ""
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'professor2@example.com', 'title' is 'Meeting Request for Project Discussion', 'body' is 'Dear Professor, \n\nI hope this email finds you well. I am writing to request a meeting with you to discuss my project. I have been working on a project related to [project topic], and I would greatly appreciate your guidance and feedback.\n\nPlease let me know a convenient day and time for you to meet. I am available [provide your availability options]. If none of these times work for you, please suggest an alternative time that suits you better.\n\nThank you for considering my request. I look forward to meeting with you and discussing my project in detail.\n\nBest regards,\n[Your Name]', 'attachment' is ''."
      }
    ]
  },
  "query_168_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 49378969
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '49378969'."
      }
    ]
  },
  "query_453_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "沙丘"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '沙丘'."
      }
    ]
  },
  "query_97_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "first author"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'first author'."
      }
    ]
  },
  "query_220_2_9": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "奥本海默"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '奥本海默'."
      }
    ]
  },
  "query_359_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.get_coordinate",
      "args": {
        "address": "789 Broadway, New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_coordinate', 'description': 'Get the coordinate of a location. Param must be in Chinese', 'required_parameters': [{'name': 'address', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [{'name': 'city', 'type': 'STRING', 'description': 'specify the city to search'}], 'return_data': [{'name': 'coordinate', 'description': 'coordinate of the location, format with (lon, lat)'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_coordinate with the parameter as follows: 'address' is '789 Broadway, New York'."
      }
    ]
  },
  "query_133_0_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 44783505,
        "date": "2023-10-20"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '44783505', 'date' is '2023-10-20'."
      }
    ]
  },
  "query_402_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Modern",
        "abs_location": "outputs/blog_post.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Modern', 'abs_location' is 'outputs/blog_post.ppt'."
      }
    ]
  },
  "query_453_1_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "珍·古道尔的传奇一生",
        "bullet_items": "珍·古道尔的传奇一生是一部美国的纪录片、传记电影，由布莱特·摩根导演，简·古道尔、雨果·凡·拉维克、雨果·埃里克·路易斯·凡·拉维克等人主演。\n\n剧情简介：影片主角是在世界上拥有极高声誉的动物学家珍·古道尔，她二十多岁时前往非洲的原始森林，为了观察黑猩猩，在那里度过了三十八年的野外生涯，后来常年奔走于世界各地，呼吁人们保护野生动物、保护地球环境。 导演布莱特·摩根尤其擅长人物刻画，他从100多个小时从未公布过的珍·古道尔在野外考察和访谈的影像资料中选材剪辑，以第一人称视角，讲述了珍·古道尔年轻时在非洲研究黑猩猩的故事。伴随菲利普·格拉斯的迷人配乐，让观众感受到在那个仍由男性主导野外科研的年代，一个女人如何通过激情、奉献和毅力改变世界。影片还把人类的命运与动物交织在一起，大大强化了人与自然的关系。"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is '珍·古道尔的传奇一生', 'bullet_items' is '珍·古道尔的传奇一生是一部美国的纪录片、传记电影，由布莱特·摩根导演，简·古道尔、雨果·凡·拉维克、雨果·埃里克·路易斯·凡·拉维克等人主演。\n\n剧情简介：影片主角是在世界上拥有极高声誉的动物学家珍·古道尔，她二十多岁时前往非洲的原始森林，为了观察黑猩猩，在那里度过了三十八年的野外生涯，后来常年奔走于世界各地，呼吁人们保护野生动物、保护地球环境。 导演布莱特·摩根尤其擅长人物刻画，他从100多个小时从未公布过的珍·古道尔在野外考察和访谈的影像资料中选材剪辑，以第一人称视角，讲述了珍·古道尔年轻时在非洲研究黑猩猩的故事。伴随菲利普·格拉斯的迷人配乐，让观众感受到在那个仍由男性主导野外科研的年代，一个女人如何通过激情、奉献和毅力改变世界。影片还把人类的命运与动物交织在一起，大大强化了人与自然的关系。'."
      }
    ]
  },
  "query_247_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "latest articles on mathematics education"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'latest articles on mathematics education'."
      }
    ]
  },
  "query_134_2_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 53555858
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '53555858'."
      }
    ]
  },
  "query_148_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51634632
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51634632'."
      }
    ]
  },
  "query_11_1_8": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Corporate Retreat in Barcelona",
        "bullet_items": "Date: October 18-25, 2023\nLocation: Barcelona, Spain"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Corporate Retreat in Barcelona', 'bullet_items' is 'Date: October 18-25, 2023\nLocation: Barcelona, Spain'."
      }
    ]
  },
  "query_474_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_348_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_151_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_211_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "sample.txt",
        "text": "This is a sample text."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'sample.txt', 'text' is 'This is a sample text.'."
      }
    ]
  },
  "query_259_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Mountain View, California"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Mountain View, California'."
      }
    ]
  },
  "query_35_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Los Angeles",
        "end": "Times Square, New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Los Angeles', 'end' is 'Times Square, New York City'."
      }
    ]
  },
  "query_259_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_2_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Los Angeles'."
      }
    ]
  },
  "query_156_1_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 933732691116240543
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '933732691116240543'."
      }
    ]
  },
  "query_92_1_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "professor@example.com",
        "title": "Research Proposal",
        "body": "Dear Professor, I hope this email finds you well. I am writing to submit my research proposal on the topic of [insert topic]. I have attached the proposal document for your review. Thank you for your time and consideration. Best regards, [Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'professor@example.com', 'title' is 'Research Proposal', 'body' is 'Dear Professor, I hope this email finds you well. I am writing to submit my research proposal on the topic of [insert topic]. I have attached the proposal document for your review. Thank you for your time and consideration. Best regards, [Your Name]'."
      }
    ]
  },
  "query_478_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 575264
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '575264'."
      }
    ]
  },
  "query_431_0_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_454_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "15:00",
        "end_time": "18:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '15:00', 'end_time' is '18:00'."
      }
    ]
  },
  "query_239_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning algorithms"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning algorithms'."
      }
    ]
  },
  "query_453_1_14": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_168_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_111_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 726986015697846171
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '726986015697846171'."
      }
    ]
  },
  "query_185_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_134_2_14": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Property 2",
        "bullet_items": "Rental unit in Miami\n- ★4.98\n- Studio\n- 2 beds\n- 1 bath"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Property 2', 'bullet_items' is 'Rental unit in Miami\n- ★4.98\n- Studio\n- 2 beds\n- 1 bath'."
      }
    ]
  },
  "query_33_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "New York City",
        "end": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'New York City', 'end' is 'Los Angeles'."
      }
    ]
  },
  "query_339_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "john.doe@example.com",
        "title": "Meeting Agenda",
        "body": "Attached is the agenda for our upcoming meeting. Please review it ahead of time.",
        "attachment": "Agenda.pdf"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'john.doe@example.com', 'title' is 'Meeting Agenda', 'body' is 'Attached is the agenda for our upcoming meeting. Please review it ahead of time.', 'attachment' is 'Agenda.pdf'."
      }
    ]
  },
  "query_281_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Paris",
        "end": "London"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Paris', 'end' is 'London'."
      }
    ]
  },
  "query_92_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51619634
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51619634'."
      }
    ]
  },
  "query_110_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Los Angeles'."
      }
    ]
  },
  "query_221_1_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "珍·古道尔的传奇一生",
        "bullet_items": "Category: 纪录片、传记电影\nRegion: 美国\nNumber of Interested Viewers: 9.2\nSynopsis: 珍·古道尔的传奇一生是一部美国的纪录片、传记电影，由布莱特·摩根导演，简·古道尔、雨果·凡·拉维克、雨果·埃里克·路易斯·凡·拉维克等人主演。剧情简介：影片主角是在世界上拥有极高声誉的动物学家珍·古道尔，她二十多岁时前往非洲的原始森林，为了观察黑猩猩，在那里度过了三十八年的野外生涯，后来常年奔走于世界各地，呼吁人们保护野生动物、保护地球环境。 导演布莱特·摩根尤其擅长人物刻画，他从100多个小时从未公布过的珍·古道尔在野外考察和访谈的影像资料中选材剪辑，以第一人称视角，讲述了珍·古道尔年轻时在非洲研究黑猩猩的故事。伴随菲利普·格拉斯的迷人配乐，让观众感受到在那个仍由男性主导野外科研的年代，一个女人如何通过激情、奉献和毅力改变世界。影片还把人类的命运与动物交织在一起，大大强化了人与自然的关系。",
        "image": "outputs/1697752201.9295337.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is '珍·古道尔的传奇一生', 'bullet_items' is 'Category: 纪录片、传记电影\nRegion: 美国\nNumber of Interested Viewers: 9.2\nSynopsis: 珍·古道尔的传奇一生是一部美国的纪录片、传记电影，由布莱特·摩根导演，简·古道尔、雨果·凡·拉维克、雨果·埃里克·路易斯·凡·拉维克等人主演。剧情简介：影片主角是在世界上拥有极高声誉的动物学家珍·古道尔，她二十多岁时前往非洲的原始森林，为了观察黑猩猩，在那里度过了三十八年的野外生涯，后来常年奔走于世界各地，呼吁人们保护野生动物、保护地球环境。 导演布莱特·摩根尤其擅长人物刻画，他从100多个小时从未公布过的珍·古道尔在野外考察和访谈的影像资料中选材剪辑，以第一人称视角，讲述了珍·古道尔年轻时在非洲研究黑猩猩的故事。伴随菲利普·格拉斯的迷人配乐，让观众感受到在那个仍由男性主导野外科研的年代，一个女人如何通过激情、奉献和毅力改变世界。影片还把人类的命运与动物交织在一起，大大强化了人与自然的关系。', 'image' is 'outputs/1697752201.9295337.jpg'."
      }
    ]
  },
  "query_91_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "beach",
        "latitude": -8.44929,
        "longitude": 115.3113,
        "radius": 2000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'beach', 'latitude' is '-8.44929', 'longitude' is '115.3113', 'radius' is '2000'."
      }
    ]
  },
  "query_372_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "client@example.com",
        "title": "Product Inquiry",
        "body": "Hello, \n\nI hope this email finds you well. I wanted to reach out and see if you have any queries about our newest product. Please let me know if there's anything I can assist you with. \n\nBest regards, \n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'client@example.com', 'title' is 'Product Inquiry', 'body' is 'Hello, \n\nI hope this email finds you well. I wanted to reach out and see if you have any queries about our newest product. Please let me know if there's anything I can assist you with. \n\nBest regards, \n[Your Name]'."
      }
    ]
  },
  "query_181_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Miami"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Miami'."
      }
    ]
  },
  "query_53_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_85_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": 101,
        "start_time": "20:53",
        "end_time": "22:53"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '101', 'start_time' is '20:53', 'end_time' is '22:53'."
      }
    ]
  },
  "query_363_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "johnson@example.com",
        "title": "Request for Access to Research Paper",
        "body": "Dear Professor Johnson,\n\nI hope this email finds you well. I am writing to request access to your research paper titled 'Advancements in Artificial Intelligence'. I am particularly interested in understanding the latest developments in this field and believe your paper will provide valuable insights.\n\nIn order to properly reference your paper, could you please provide me with the MLA citation format for it?\n\nThank you very much for your time and consideration. I look forward to your response.\n\nBest regards,\n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'johnson@example.com', 'title' is 'Request for Access to Research Paper', 'body' is 'Dear Professor Johnson,\n\nI hope this email finds you well. I am writing to request access to your research paper titled 'Advancements in Artificial Intelligence'. I am particularly interested in understanding the latest developments in this field and believe your paper will provide valuable insights.\n\nIn order to properly reference your paper, could you please provide me with the MLA citation format for it?\n\nThank you very much for your time and consideration. I look forward to your response.\n\nBest regards,\n[Your Name]'."
      }
    ]
  },
  "query_482_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'New York City'."
      }
    ]
  },
  "query_99_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_283_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurants",
        "places": "Times Square, New York City",
        "latitude": 40.7589,
        "longitude": -73.9851,
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurants', 'places' is 'Times Square, New York City', 'latitude' is '40.7589', 'longitude' is '-73.9851', 'radius' is '500'."
      }
    ]
  },
  "query_451_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'Inception'."
      }
    ]
  },
  "query_305_1_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_417_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "18:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '18:00'."
      }
    ]
  },
  "query_447_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "沙丘"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '沙丘'."
      }
    ]
  },
  "query_464_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_312_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "Empire State Building",
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'Empire State Building', 'radius' is '500'."
      }
    ]
  },
  "query_172_2_9": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 38677942
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '38677942'."
      }
    ]
  },
  "query_259_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "New York City",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'New York City', 'days' is '3'."
      }
    ]
  },
  "query_196_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "film theory"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'film theory'."
      }
    ]
  },
  "query_453_0_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "Dune movie poster"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'Dune movie poster'."
      }
    ]
  },
  "query_2_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 33884250
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '33884250'."
      }
    ]
  },
  "query_375_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Campaign Goals",
        "bullet_items": "Increase brand awareness, Drive website traffic, Generate leads"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Campaign Goals', 'bullet_items' is 'Increase brand awareness, Drive website traffic, Generate leads'."
      }
    ]
  },
  "query_314_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "Nusa Dua Beach information"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'Nusa Dua Beach information'."
      }
    ]
  },
  "query_313_2_8": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_92_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 691676460109271194
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '691676460109271194'."
      }
    ]
  },
  "query_330_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "homework.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'homework.txt'."
      }
    ]
  },
  "query_26_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "New York City",
        "end": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'New York City', 'end' is 'Los Angeles'."
      }
    ]
  },
  "query_360_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "hr@example.com",
        "title": "Job Application",
        "body": "Dear HR, I am writing to apply for the position advertised on your website. Attached is my resume for your consideration. Best, [Your Name]",
        "attachment": "/Documents/my_resume.pdf"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'hr@example.com', 'title' is 'Job Application', 'body' is 'Dear HR, I am writing to apply for the position advertised on your website. Attached is my resume for your consideration. Best, [Your Name]', 'attachment' is '/Documents/my_resume.pdf'."
      }
    ]
  },
  "query_11_1_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Corporate",
        "abs_location": "outputs/Corporate_Retreat_Properties_Barcelona.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Corporate', 'abs_location' is 'outputs/Corporate_Retreat_Properties_Barcelona.ppt'."
      }
    ]
  },
  "query_363_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "vp5MqwP06U4J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'vp5MqwP06U4J'."
      }
    ]
  },
  "query_375_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/marketing_campaign.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/marketing_campaign.pptx'."
      }
    ]
  },
  "query_235_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_449_1_11": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "惊奇队长2",
        "bullet_items": "动作 / 奇幻 / 冒险",
        "image": "outputs/1697985210.8721418.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is '惊奇队长2', 'bullet_items' is '动作 / 奇幻 / 冒险', 'image' is 'outputs/1697985210.8721418.jpg'."
      }
    ]
  },
  "query_134_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 29592742,
        "checkIn": "2023-10-20",
        "checkOut": "2023-10-25"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '29592742', 'checkIn' is '2023-10-20', 'checkOut' is '2023-10-25'."
      }
    ]
  },
  "query_195_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_202_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_111_2_9": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "37.78007889, -122.42015839",
        "end": "37.7749, -122.4194"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '37.78007889, -122.42015839', 'end' is '37.7749, -122.4194'."
      }
    ]
  },
  "query_461_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "Tokyo",
        "days": 4
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'Tokyo', 'days' is '4'."
      }
    ]
  },
  "query_97_2_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "EQ8shYj8Ai8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'EQ8shYj8Ai8J'."
      }
    ]
  },
  "query_17_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_449_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "红猪"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is '红猪'."
      }
    ]
  },
  "query_217_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_14_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "john.doe@example.com",
        "title": "Latest Article on Quantum Computing",
        "body": "Published: 2022-08-01\nTitle: The Rise of Quantum Internet Computing\nAuthors: Seng W. Loke\nSummary: This article highlights quantum Internet computing as referring to\ndistributed quantum computing over the quantum Internet, analogous to\n(classical) Internet computing involving (classical) distributed computing over\nthe (classical) Internet. Relevant to quantum Internet computing would be areas\nof study such as quantum protocols for distributed nodes using quantum\ninformation for computations, quantum cloud computing, delegated verifiable\nblind or private computing, non-local gates, and distributed quantum\napplications, over Internet-scale distances."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'john.doe@example.com', 'title' is 'Latest Article on Quantum Computing', 'body' is 'Published: 2022-08-01\nTitle: The Rise of Quantum Internet Computing\nAuthors: Seng W. Loke\nSummary: This article highlights quantum Internet computing as referring to\ndistributed quantum computing over the quantum Internet, analogous to\n(classical) Internet computing involving (classical) distributed computing over\nthe (classical) Internet. Relevant to quantum Internet computing would be areas\nof study such as quantum protocols for distributed nodes using quantum\ninformation for computations, quantum cloud computing, delegated verifiable\nblind or private computing, non-local gates, and distributed quantum\napplications, over Internet-scale distances.'."
      }
    ]
  },
  "query_188_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Stanford University",
        "end": "Google Headquarters"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Stanford University', 'end' is 'Google Headquarters'."
      }
    ]
  },
  "query_5_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_248_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_79_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "KayGeLj14tgJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'KayGeLj14tgJ'."
      }
    ]
  },
  "query_88_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Causes of World War II",
        "bullet_items": "Treaty of Versailles, Rise of Fascism, Appeasement"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Causes of World War II', 'bullet_items' is 'Treaty of Versailles, Rise of Fascism, Appeasement'."
      }
    ]
  },
  "query_363_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Artificial Intelligence Applications"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Artificial Intelligence Applications'."
      }
    ]
  },
  "query_110_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Los Angeles",
        "end": "789 Street, Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Los Angeles', 'end' is '789 Street, Los Angeles'."
      }
    ]
  },
  "query_250_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_187_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Central Park"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Central Park'."
      }
    ]
  },
  "query_250_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_140_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "金手指"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '金手指'."
      }
    ]
  },
  "query_238_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.get_route",
      "args": {
        "origin": "39.908722,116.397496",
        "destination": "31.230416,121.473701"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'origin', 'type': 'STRING', 'description': \"coordinate of the start location, format with 'lon,lat'\"}, {'name': 'destination', 'type': 'STRING', 'description': \"coordinate of the end location, format with 'lon,lat'\"}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_route with the parameter as follows: 'origin' is '39.908722,116.397496', 'destination' is '31.230416,121.473701'."
      }
    ]
  },
  "query_51_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "/home/user/documents/data.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is '/home/user/documents/data.txt'."
      }
    ]
  },
  "query_362_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_223_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "大空头"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '大空头'."
      }
    ]
  },
  "query_78_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "selJwfIN0t8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'selJwfIN0t8J'."
      }
    ]
  },
  "query_300_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "456 Elm Street"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is '456 Elm Street'."
      }
    ]
  },
  "query_10_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 53931387
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '53931387'."
      }
    ]
  },
  "query_406_1_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "TXdHj3MAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'TXdHj3MAAAAJ'."
      }
    ]
  },
  "query_311_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "Italian restaurant",
        "places": "Times Square",
        "latitude": 40.75699997,
        "longitude": -73.98600006,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'Italian restaurant', 'places' is 'Times Square', 'latitude' is '40.75699997', 'longitude' is '-73.98600006', 'radius' is '1000'."
      }
    ]
  },
  "query_309_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "climate change"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'climate change'."
      }
    ]
  },
  "query_162_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_181_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Airbnb"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Airbnb'."
      }
    ]
  },
  "query_269_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "1600 Pennsylvania Ave NW, Washington, DC",
        "end": "350 5th Ave, New York, NY"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '1600 Pennsylvania Ave NW, Washington, DC', 'end' is '350 5th Ave, New York, NY'."
      }
    ]
  },
  "query_363_2_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Sales Techniques",
        "abs_location": "outputs/Sales_Techniques.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Sales Techniques', 'abs_location' is 'outputs/Sales_Techniques.ppt'."
      }
    ]
  },
  "query_178_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.aggregate_stock_with_time",
      "args": {
        "ticker": "TSLZ",
        "multiplier": 1,
        "timespan": "week",
        "from": "2023-10-10",
        "to": "2023-10-17"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.aggregate_stock_with_time', 'description': 'get aggregate bars for a stock over a given date range in custom time window sizes', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The ticker symbol of the stock/equity'}, {'name': 'multiplier', 'type': 'NUMBER', 'description': 'The size of the timespan multiplier'}, {'name': 'timespan', 'type': 'STRING', 'description': \"The size of the time window, supported 'day', 'hour', 'week'\"}, {'name': 'from', 'type': 'STRING', 'description': 'The start of the aggregate time window with the format YYYY-MM-DD'}, {'name': 'to', 'type': 'STRING', 'description': 'The end of the aggregate time window with the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list of dict including the open and closed price in the given time period and the unix msec timestamp for the start of the aggregate window'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.aggregate_stock_with_time with the parameter as follows: 'ticker' is 'TSLZ', 'multiplier' is '1', 'timespan' is 'week', 'from' is '2023-10-10', 'to' is '2023-10-17'."
      }
    ]
  },
  "query_114_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 51619634
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '51619634'."
      }
    ]
  },
  "query_321_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "eateries",
        "places": "Times Square",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'eateries', 'places' is 'Times Square', 'radius' is '1000'."
      }
    ]
  },
  "query_291_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "WLaj9ZUvTjoJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'WLaj9ZUvTjoJ'."
      }
    ]
  },
  "query_348_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_268_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Times Square",
        "end": "Central Park"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Times Square', 'end' is 'Central Park'."
      }
    ]
  },
  "query_228_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_9_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "18:00",
        "end_time": "22:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '18:00', 'end_time' is '22:00'."
      }
    ]
  },
  "query_143_2_10": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_30_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "Z6CaJkkhLkMJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'Z6CaJkkhLkMJ'."
      }
    ]
  },
  "query_274_1_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "40.69417191,-74.0430603",
        "end": "40.75699997,-73.98600006"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '40.69417191,-74.0430603', 'end' is '40.75699997,-73.98600006'."
      }
    ]
  },
  "query_59_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "102",
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_115_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "ZG"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'ZG'."
      }
    ]
  },
  "query_191_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Washington Convention Center",
        "end": "Marriott Marquis Washington, DC"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Washington Convention Center', 'end' is 'Marriott Marquis Washington, DC'."
      }
    ]
  },
  "query_111_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York'."
      }
    ]
  },
  "query_54_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Paris"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Paris'."
      }
    ]
  },
  "query_444_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_221_1_12": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "驯龙高手",
        "bullet_items": "Category: 动画、奇幻、冒险电影\nRegion: 美国\nNumber of Interested Viewers: 8.8\nSynopsis: 驯龙高手是一部美国的动画、奇幻、冒险电影，由迪恩·德布洛斯导演，杰伊·巴鲁切尔、杰拉德·巴特勒、克雷格·费格森等人主演。剧情简介：维京岛国的少年小嗝嗝（杰伊•巴鲁切尔 Jay Baruchel 配音）是部落统领伟大的斯托里克（杰拉德·巴特勒 Gerard Butler 配音）的儿子，他非常想像自己的父亲一样亲手屠龙——这些飞龙是岛上维京人放牧羊群的主要天敌——但他每次出现在部落屠龙的战斗中都只给大家徒增烦恼。在一次对抗飞龙的战斗中，希卡普偷偷用射龙器击伤了一只最神秘的“夜之怒龙”，并背着族人放生、豢养，甚至驯服了这只龙，还给它起名“无牙”。希卡普的神秘行径引起了一同训练屠龙技巧的女孩阿斯特丽德（亚美莉卡·费雷拉 America Ferrera 配音）的怀疑。阿斯特丽德发现了希卡普的秘密，却同时被身骑“无牙”御风而飞的美妙体验所震撼。格雷决定在屠龙成人礼上向远征归来的斯托里克和族人讲明真相，说服大家放弃屠龙，却偏偏弄巧成拙，害得“无牙”被俘，一场更大的灾难就在眼前……",
        "image": "outputs/1697752260.5545056.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is '驯龙高手', 'bullet_items' is 'Category: 动画、奇幻、冒险电影\nRegion: 美国\nNumber of Interested Viewers: 8.8\nSynopsis: 驯龙高手是一部美国的动画、奇幻、冒险电影，由迪恩·德布洛斯导演，杰伊·巴鲁切尔、杰拉德·巴特勒、克雷格·费格森等人主演。剧情简介：维京岛国的少年小嗝嗝（杰伊•巴鲁切尔 Jay Baruchel 配音）是部落统领伟大的斯托里克（杰拉德·巴特勒 Gerard Butler 配音）的儿子，他非常想像自己的父亲一样亲手屠龙——这些飞龙是岛上维京人放牧羊群的主要天敌——但他每次出现在部落屠龙的战斗中都只给大家徒增烦恼。在一次对抗飞龙的战斗中，希卡普偷偷用射龙器击伤了一只最神秘的“夜之怒龙”，并背着族人放生、豢养，甚至驯服了这只龙，还给它起名“无牙”。希卡普的神秘行径引起了一同训练屠龙技巧的女孩阿斯特丽德（亚美莉卡·费雷拉 America Ferrera 配音）的怀疑。阿斯特丽德发现了希卡普的秘密，却同时被身骑“无牙”御风而飞的美妙体验所震撼。格雷决定在屠龙成人礼上向远征归来的斯托里克和族人讲明真相，说服大家放弃屠龙，却偏偏弄巧成拙，害得“无牙”被俘，一场更大的灾难就在眼前……', 'image' is 'outputs/1697752260.5545056.jpg'."
      }
    ]
  },
  "query_199_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "johnson@example.com",
        "title": "Articles on Artificial Intelligence in Healthcare",
        "body": "Published: 2023-04-05\nTitle: A Survey on Federated Learning for the Healthcare Metaverse: Concepts, Applications, Challenges, and Future Directions\nAuthors: Ali Kashif Bashir, Nancy Victor, Sweta Bhattacharya, Thien Huynh-The, Rajeswari Chengoden, Gokul Yenduri, Praveen Kumar Reddy Maddikunta, Quoc-Viet Pham, Thippa Reddy Gadekallu, Madhusanka Liyanage\nSummary: Recent technological advancements have considerately improved healthcare systems to provide various intelligent healthcare services and improve the quality of life. Federated learning (FL), a new branch of artificial intelligence (AI), opens opportunities to deal with privacy issues in healthcare systems and exploit data and computing resources available at distributed devices. Additionally, the Metaverse, through integrating emerging technologies, such as AI, cloud edge computing, Internet of Things (IoT), blockchain, and semantic communications, has transformed many vertical domains in general and the healthcare sector in particular. Obviously, FL shows many benefits and provides new opportunities for conventional and Metaverse healthcare, motivating us to provide a survey on the usage of FL for Metaverse healthcare systems. First, we present preliminaries to IoT-based healthcare systems, FL in conventional healthcare, and Metaverse healthcare. The benefits of FL in Metaverse healthcare are then discussed, from improved privacy and scalability, better interoperability, better data management, and extra security to automation and low-latency healthcare services. Subsequently, we discuss several applications pertaining to FL-enabled Metaverse healthcare, including medical diagnosis, patient monitoring, medical education, infectious disease, and drug discovery. Finally, we highlight significant challenges and potential solutions toward the realization of FL in Metaverse health\n\nPublished: 2022-08-16\nTitle: Fair Machine Learning in Healthcare: A Review\nAuthors: Qizhang Feng, Mengnan Du, Na Zou, Xia Hu\nSummary: Benefiting from the digitization of healthcare data and the development of computing power, machine learning methods are increasingly used in the healthcare domain. Fairness problems have been identified in machine learning for healthcare, resulting in an unfair allocation of limited healthcare resources or excessive health risks for certain groups. Therefore, addressing the fairness problems has recently attracted increasing attention from the healthcare community. However, the intersection of machine learning for healthcare and fairness in machine learning remains understudied. In this review, we build the bridge by exposing fairness problems, summarizing possible biases, sorting out mitigation methods and pointing out challenges along with opportunities for the future.\n\nPublished: 2022-09-06\nTitle: Autonomous Mobile Clinics: Empowering Affordable Anywhere Anytime Healthcare Access\nAuthors: Shaoshan Liu, Yuzhang Huang, Leiyu Shi\nSummary: We are facing a global healthcare crisis today as the healthcare cost is ever climbing, but with the aging population, government fiscal revenue is ever dropping. To create a more efficient and effective healthcare system, three technical challenges immediately present themselves: healthcare access, healthcare equity, and healthcare efficiency. An autonomous mobile clinic solves the healthcare access problem by bringing healthcare services to the patient by the order of the patient's fingertips. Nevertheless, to enable a universal autonomous mobile clinic network, a three-stage technical roadmap needs to be achieved: In stage one, we focus on solving the inequity challenge in the existing healthcare system by combining autonomous mobility and telemedicine. In stage two, we develop an AI doctor for primary care, which we foster from infancy to adulthood with clean healthcare data. With the AI doctor, we can solve the inefficiency problem. In stage three, after we have proven that the autonomous mobile clinic network can truly solve the target clinical use cases, we shall open up the platform for all medical verticals, thus enabling universal healthcare through this whole new system."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'johnson@example.com', 'title' is 'Articles on Artificial Intelligence in Healthcare', 'body' is 'Published: 2023-04-05\nTitle: A Survey on Federated Learning for the Healthcare Metaverse: Concepts, Applications, Challenges, and Future Directions\nAuthors: Ali Kashif Bashir, Nancy Victor, Sweta Bhattacharya, Thien Huynh-The, Rajeswari Chengoden, Gokul Yenduri, Praveen Kumar Reddy Maddikunta, Quoc-Viet Pham, Thippa Reddy Gadekallu, Madhusanka Liyanage\nSummary: Recent technological advancements have considerately improved healthcare systems to provide various intelligent healthcare services and improve the quality of life. Federated learning (FL), a new branch of artificial intelligence (AI), opens opportunities to deal with privacy issues in healthcare systems and exploit data and computing resources available at distributed devices. Additionally, the Metaverse, through integrating emerging technologies, such as AI, cloud edge computing, Internet of Things (IoT), blockchain, and semantic communications, has transformed many vertical domains in general and the healthcare sector in particular. Obviously, FL shows many benefits and provides new opportunities for conventional and Metaverse healthcare, motivating us to provide a survey on the usage of FL for Metaverse healthcare systems. First, we present preliminaries to IoT-based healthcare systems, FL in conventional healthcare, and Metaverse healthcare. The benefits of FL in Metaverse healthcare are then discussed, from improved privacy and scalability, better interoperability, better data management, and extra security to automation and low-latency healthcare services. Subsequently, we discuss several applications pertaining to FL-enabled Metaverse healthcare, including medical diagnosis, patient monitoring, medical education, infectious disease, and drug discovery. Finally, we highlight significant challenges and potential solutions toward the realization of FL in Metaverse health\n\nPublished: 2022-08-16\nTitle: Fair Machine Learning in Healthcare: A Review\nAuthors: Qizhang Feng, Mengnan Du, Na Zou, Xia Hu\nSummary: Benefiting from the digitization of healthcare data and the development of computing power, machine learning methods are increasingly used in the healthcare domain. Fairness problems have been identified in machine learning for healthcare, resulting in an unfair allocation of limited healthcare resources or excessive health risks for certain groups. Therefore, addressing the fairness problems has recently attracted increasing attention from the healthcare community. However, the intersection of machine learning for healthcare and fairness in machine learning remains understudied. In this review, we build the bridge by exposing fairness problems, summarizing possible biases, sorting out mitigation methods and pointing out challenges along with opportunities for the future.\n\nPublished: 2022-09-06\nTitle: Autonomous Mobile Clinics: Empowering Affordable Anywhere Anytime Healthcare Access\nAuthors: Shaoshan Liu, Yuzhang Huang, Leiyu Shi\nSummary: We are facing a global healthcare crisis today as the healthcare cost is ever climbing, but with the aging population, government fiscal revenue is ever dropping. To create a more efficient and effective healthcare system, three technical challenges immediately present themselves: healthcare access, healthcare equity, and healthcare efficiency. An autonomous mobile clinic solves the healthcare access problem by bringing healthcare services to the patient by the order of the patient's fingertips. Nevertheless, to enable a universal autonomous mobile clinic network, a three-stage technical roadmap needs to be achieved: In stage one, we focus on solving the inequity challenge in the existing healthcare system by combining autonomous mobility and telemedicine. In stage two, we develop an AI doctor for primary care, which we foster from infancy to adulthood with clean healthcare data. With the AI doctor, we can solve the inefficiency problem. In stage three, after we have proven that the autonomous mobile clinic network can truly solve the target clinical use cases, we shall open up the platform for all medical verticals, thus enabling universal healthcare through this whole new system.'."
      }
    ]
  },
  "query_195_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_47_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 575264
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '575264'."
      }
    ]
  },
  "query_114_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 727017675359552471
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '727017675359552471'."
      }
    ]
  },
  "query_13_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "art gallery",
        "places": "Metropolitan Museum of Art, New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'art gallery', 'places' is 'Metropolitan Museum of Art, New York City'."
      }
    ]
  },
  "query_296_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "current_location",
        "days": 1
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'current_location', 'days' is '1'."
      }
    ]
  },
  "query_300_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "15:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '15:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_417_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_313_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "catering service"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'catering service'."
      }
    ]
  },
  "query_1_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 49634091
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '49634091'."
      }
    ]
  },
  "query_377_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "TSLA"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'TSLA'."
      }
    ]
  },
  "query_406_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "MgNQRO9ui2YJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'MgNQRO9ui2YJ'."
      }
    ]
  },
  "query_95_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_98_1_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 34546645
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '34546645'."
      }
    ]
  },
  "query_483_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "The Shawshank Redemption"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'The Shawshank Redemption'."
      }
    ]
  },
  "query_111_1_10": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "Bayonne, NJ, United States",
        "latitude": 40.66907883,
        "longitude": -74.11717987,
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'Bayonne, NJ, United States', 'latitude' is '40.66907883', 'longitude' is '-74.11717987', 'radius' is '500'."
      }
    ]
  },
  "query_362_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_82_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "dinner recipes"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'dinner recipes'."
      }
    ]
  },
  "query_413_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Director's Biography",
        "bullet_items": "[SPAN]Name: Hayao Miyazaki[SPAN]Nationality: Japanese[SPAN]Born: January 5, 1941[SPAN]Notable Works: Spirited Away, My Neighbor Totoro, Princess Mononoke"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Director's Biography', 'bullet_items' is '[SPAN]Name: Hayao Miyazaki[SPAN]Nationality: Japanese[SPAN]Born: January 5, 1941[SPAN]Notable Works: Spirited Away, My Neighbor Totoro, Princess Mononoke'."
      }
    ]
  },
  "query_1_0_9": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "Taito City, Tokyo, Japan",
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'Taito City, Tokyo, Japan', 'radius' is '500'."
      }
    ]
  },
  "query_464_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_270_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "client@example.com",
        "title": "Property and Stock Information",
        "body": "Dear Client,\n\nI have gathered some information for you regarding your inquiry.\n\nSchools near 742 Evergreen Terrace:\n\n1. Dunwiddie Elementary School\nAddress: 1243 W Lincoln Ave, Port Washington, WI, 53074\n\n2. Port Washington High School\nAddress: 427 W Jackson St, Port Washington, WI, 53074\n\n3. Lincoln Elementary School\nAddress: 1325 N Theis Ln, Port Washington, WI, 53074\n\n4. Thomas Jefferson Middle School\nAddress: 1403 N Holden St, Port Washington, WI, 53074\n\n5. Saukville Elementary School\nAddress: 333 N Mill St, Saukville, WI, 53080\n\nHospitals near 742 Evergreen Terrace:\n\n1. Lakeshore Veterinary Specialists & Emergency Hospital\nAddress: 207 W Seven Hills Rd, Port Washington, WI, 53074\n\n2. Aurora Medical Center Grafton\nAddress: 975 Port Washington Rd, Grafton, WI, 53024\n\n3. BluePearl Pet Hospital\nAddress: 207 W. Seven Hills Rd., Port Washington, WI, 53704\n\n4. Aurora Sports Health\nAddress: 975 Port Washington Rd, Grafton, WI, 53024\n\n5. Froedtert Port Washington Health Center\nAddress: 115 Sweetwater Blvd, Port Washington, WI, 53074\n\nUnfortunately, I couldn't find the stock ticker for ABC Real Estate. However, I found information about a similar company called The RealReal, Inc. Their stock ticker is REAL. Here are some details about The RealReal, Inc.:\n\nAddress: 55 FRANCISCO STREET, SUITE 400, SAN FRANCISCO, CA, 94133\nDescription: The RealReal is the largest luxury resale platform in the U.S., generating $1.8 billion in 2022 gross merchandise volume and addressing a niche (personal luxury resale) that had previously been serviced by inefficient upscale boutiques and local pawn shops. The firm generates revenue via consignment and first-party sales on its online marketplace, and through direct sales across its brick-and-mortar footprint. With a hands-on approach that actively sources inventory and authenticates every item on its platform, The RealReal is able to justify much higher take rates than peers, working out to roughly 35% of net merchandise value, which excludes returns, cancellations, and first-party sales.\nList Date: 2019-06-28\nHomepage URL: [The RealReal](https://www.therealreal.com)\n\nPlease let me know if you need any further assistance.\n\nBest regards,\nYour Assistant"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'client@example.com', 'title' is 'Property and Stock Information', 'body' is 'Dear Client,\n\nI have gathered some information for you regarding your inquiry.\n\nSchools near 742 Evergreen Terrace:\n\n1. Dunwiddie Elementary School\nAddress: 1243 W Lincoln Ave, Port Washington, WI, 53074\n\n2. Port Washington High School\nAddress: 427 W Jackson St, Port Washington, WI, 53074\n\n3. Lincoln Elementary School\nAddress: 1325 N Theis Ln, Port Washington, WI, 53074\n\n4. Thomas Jefferson Middle School\nAddress: 1403 N Holden St, Port Washington, WI, 53074\n\n5. Saukville Elementary School\nAddress: 333 N Mill St, Saukville, WI, 53080\n\nHospitals near 742 Evergreen Terrace:\n\n1. Lakeshore Veterinary Specialists & Emergency Hospital\nAddress: 207 W Seven Hills Rd, Port Washington, WI, 53074\n\n2. Aurora Medical Center Grafton\nAddress: 975 Port Washington Rd, Grafton, WI, 53024\n\n3. BluePearl Pet Hospital\nAddress: 207 W. Seven Hills Rd., Port Washington, WI, 53704\n\n4. Aurora Sports Health\nAddress: 975 Port Washington Rd, Grafton, WI, 53024\n\n5. Froedtert Port Washington Health Center\nAddress: 115 Sweetwater Blvd, Port Washington, WI, 53074\n\nUnfortunately, I couldn't find the stock ticker for ABC Real Estate. However, I found information about a similar company called The RealReal, Inc. Their stock ticker is REAL. Here are some details about The RealReal, Inc.:\n\nAddress: 55 FRANCISCO STREET, SUITE 400, SAN FRANCISCO, CA, 94133\nDescription: The RealReal is the largest luxury resale platform in the U.S., generating $1.8 billion in 2022 gross merchandise volume and addressing a niche (personal luxury resale) that had previously been serviced by inefficient upscale boutiques and local pawn shops. The firm generates revenue via consignment and first-party sales on its online marketplace, and through direct sales across its brick-and-mortar footprint. With a hands-on approach that actively sources inventory and authenticates every item on its platform, The RealReal is able to justify much higher take rates than peers, working out to roughly 35% of net merchandise value, which excludes returns, cancellations, and first-party sales.\nList Date: 2019-06-28\nHomepage URL: [The RealReal](https://www.therealreal.com)\n\nPlease let me know if you need any further assistance.\n\nBest regards,\nYour Assistant'."
      }
    ]
  },
  "query_199_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "beginner-friendly tutorials on machine learning algorithms"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'beginner-friendly tutorials on machine learning algorithms'."
      }
    ]
  },
  "query_13_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Stanford University",
        "end": "Bay Research Institute"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Stanford University', 'end' is 'Bay Research Institute'."
      }
    ]
  },
  "query_66_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_127_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 593322347340602809
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '593322347340602809'."
      }
    ]
  },
  "query_453_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_322_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Miami"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Miami'."
      }
    ]
  },
  "query_472_2_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_310_2_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "eK1pLJ9YcxIJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'eK1pLJ9YcxIJ'."
      }
    ]
  },
  "query_331_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "department_head_1@example.com",
        "title": "Department Meeting",
        "body": "Dear Department Head 1,\n\nI would like to invite you to a department meeting to discuss important matters. The meeting will be held on [DATE] from 2:00 PM to 4:00 PM in meeting room B101. The agenda of the meeting will include:\n\n1. Review of recent department progress\n2. Discussion of upcoming projects\n3. Any other business\n\nPlease make sure to mark your calendars and come prepared.\n\nBest regards,\n[Your Name]",
        "attachment": ""
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'department_head_1@example.com', 'title' is 'Department Meeting', 'body' is 'Dear Department Head 1,\n\nI would like to invite you to a department meeting to discuss important matters. The meeting will be held on [DATE] from 2:00 PM to 4:00 PM in meeting room B101. The agenda of the meeting will include:\n\n1. Review of recent department progress\n2. Discussion of upcoming projects\n3. Any other business\n\nPlease make sure to mark your calendars and come prepared.\n\nBest regards,\n[Your Name]', 'attachment' is ''."
      }
    ]
  },
  "query_306_0_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "road trips"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'road trips'."
      }
    ]
  },
  "query_288_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Denver",
        "end": "Rocky Mountain National Park"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Denver', 'end' is 'Rocky Mountain National Park'."
      }
    ]
  },
  "query_466_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Slide 2",
        "bullet_items": "Image related to technology",
        "image": "outputs/1697979709.741887.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Slide 2', 'bullet_items' is 'Image related to technology', 'image' is 'outputs/1697979709.741887.jpg'."
      }
    ]
  },
  "query_60_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_441_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "布莱特·摩根 导演"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is '布莱特·摩根 导演'."
      }
    ]
  },
  "query_484_1_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "User Review",
        "bullet_items": "User: crastana\nRating: 10.0\nReview: The best movie ever...\nA masterpiece by the young and talented Francis Ford Coppola, about a Mob family and their drama, the story telling is perfect, the acting good, sometimes a little over the top in the case of Thalia Shire (the sister of the director)\nThe 70's were the best years for Hollywood."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'User Review', 'bullet_items' is 'User: crastana\nRating: 10.0\nReview: The best movie ever...\nA masterpiece by the young and talented Francis Ford Coppola, about a Mob family and their drama, the story telling is perfect, the acting good, sometimes a little over the top in the case of Thalia Shire (the sister of the director)\nThe 70's were the best years for Hollywood.'."
      }
    ]
  },
  "query_365_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_321_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "New York City",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'New York City', 'days' is '3'."
      }
    ]
  },
  "query_471_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_484_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_240_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_25_1_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "attendee2@example.com",
        "title": "Thank You for Attending the Event",
        "body": "Dear Attendee 2, \n\nThank you for attending our event at 789 Park Ave, New York. We hope you had a great time and found it informative. If you have any further questions or feedback, please don't hesitate to reach out to us. \n\nBest regards, \nEvent Planner"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'attendee2@example.com', 'title' is 'Thank You for Attending the Event', 'body' is 'Dear Attendee 2, \n\nThank you for attending our event at 789 Park Ave, New York. We hope you had a great time and found it informative. If you have any further questions or feedback, please don't hesitate to reach out to us. \n\nBest regards, \nEvent Planner'."
      }
    ]
  },
  "query_188_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurants",
        "places": "Stanford University",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurants', 'places' is 'Stanford University', 'radius' is '1000'."
      }
    ]
  },
  "query_36_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: ."
      }
    ]
  },
  "query_321_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Yosemite National Park"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Yosemite National Park'."
      }
    ]
  },
  "query_331_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_68_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Now Playing Movies",
        "bullet_items": "Title: The Nun II\nRelease Date: 2023-09-06\n\nTitle: Expend4bles\nRelease Date: 2023-09-15\n\nTitle: The Equalizer 3\nRelease Date: 2023-08-30\n\nTitle: Sound of Freedom\nRelease Date: 2023-07-03\n\nTitle: Talk to Me\nRelease Date: 2023-07-26"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Now Playing Movies', 'bullet_items' is 'Title: The Nun II\nRelease Date: 2023-09-06\n\nTitle: Expend4bles\nRelease Date: 2023-09-15\n\nTitle: The Equalizer 3\nRelease Date: 2023-08-30\n\nTitle: Sound of Freedom\nRelease Date: 2023-07-03\n\nTitle: Talk to Me\nRelease Date: 2023-07-26'."
      }
    ]
  },
  "query_71_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "What are the reviews for 德克士(外滩观景平台店) in Shanghai?"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'What are the reviews for 德克士(外滩观景平台店) in Shanghai?'."
      }
    ]
  },
  "query_242_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Richard S. J. Tol"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Richard S. J. Tol'."
      }
    ]
  },
  "query_163_1_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": "894801997354800272"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '894801997354800272'."
      }
    ]
  },
  "query_221_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Top 3 Movies Currently Showing in China",
        "bullet_items": "1. 珍·古道尔的传奇一生\n2. 奥本海默\n3. 驯龙高手"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Top 3 Movies Currently Showing in China', 'bullet_items' is '1. 珍·古道尔的传奇一生\n2. 奥本海默\n3. 驯龙高手'."
      }
    ]
  },
  "query_483_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 968051
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '968051'."
      }
    ]
  },
  "query_105_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Tokyo"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Tokyo'."
      }
    ]
  },
  "query_242_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "climate change"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'climate change'."
      }
    ]
  },
  "query_363_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "V6nSr3S_gVYJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'V6nSr3S_gVYJ'."
      }
    ]
  },
  "query_21_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "Quantum Computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'Quantum Computing'."
      }
    ]
  },
  "query_13_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Metropolitan Museum of Art, New York City",
        "end": "TAMBARAN GALLERY"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Metropolitan Museum of Art, New York City', 'end' is 'TAMBARAN GALLERY'."
      }
    ]
  },
  "query_275_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Times Square"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Times Square'."
      }
    ]
  },
  "query_182_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_60_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_372_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "sales",
        "abs_location": "outputs/Sales_Presentation.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'sales', 'abs_location' is 'outputs/Sales_Presentation.pptx'."
      }
    ]
  },
  "query_347_2_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 1008042
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '1008042'."
      }
    ]
  },
  "query_98_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum mechanics"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum mechanics'."
      }
    ]
  },
  "query_163_1_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_127_1_10": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "chosen_property.txt",
        "text": "Chosen Property: Rental unit in New York\nProperty ID: 51619634\nCheck-in Date: 2023-10-25\nCheck-out Date: 2023-10-27\nTotal Cost: $705.60"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'chosen_property.txt', 'text' is 'Chosen Property: Rental unit in New York\nProperty ID: 51619634\nCheck-in Date: 2023-10-25\nCheck-out Date: 2023-10-27\nTotal Cost: $705.60'."
      }
    ]
  },
  "query_5_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_134_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Miami"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Miami'."
      }
    ]
  },
  "query_381_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 299534
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '299534'."
      }
    ]
  },
  "query_78_1_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_417_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/research_presentation.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/research_presentation.pptx'."
      }
    ]
  },
  "query_80_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "efZZXguoqq8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'efZZXguoqq8J'."
      }
    ]
  },
  "query_289_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_431_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Dune"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Dune'."
      }
    ]
  },
  "query_477_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Inception",
        "bullet_items": "Genres: Action, Science Fiction, Adventure\nRelease Date: 2010-07-15\nRuntime: 148 minutes\nOverview: Cobb, a skilled thief who commits corporate espionage by infiltrating the subconscious of his targets is offered a chance to regain his old life as payment for a task considered to be impossible: 'inception', the implantation of another person's idea into a target's subconscious.\nVote Average: 8.365\nPopularity: 70.983"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Inception', 'bullet_items' is 'Genres: Action, Science Fiction, Adventure\nRelease Date: 2010-07-15\nRuntime: 148 minutes\nOverview: Cobb, a skilled thief who commits corporate espionage by infiltrating the subconscious of his targets is offered a chance to regain his old life as payment for a task considered to be impossible: 'inception', the implantation of another person's idea into a target's subconscious.\nVote Average: 8.365\nPopularity: 70.983'."
      }
    ]
  },
  "query_244_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning interpretability"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning interpretability'."
      }
    ]
  },
  "query_481_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_198_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_91_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Bali"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Bali'."
      }
    ]
  },
  "query_175_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_194_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_360_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "current job market in the field of data science"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'current job market in the field of data science'."
      }
    ]
  },
  "query_28_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Hilton New York Times Square",
        "end": "Central Park"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Hilton New York Times Square', 'end' is 'Central Park'."
      }
    ]
  },
  "query_241_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'machine learning'."
      }
    ]
  },
  "query_127_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 858697692672545141
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '858697692672545141'."
      }
    ]
  },
  "query_0_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "solar energy"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'solar energy'."
      }
    ]
  },
  "query_463_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 299054
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '299054'."
      }
    ]
  },
  "query_105_0_12": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Tokyo Tower",
        "end": "35.6709,139.81034"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Tokyo Tower', 'end' is '35.6709,139.81034'."
      }
    ]
  },
  "query_482_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Los Angeles'."
      }
    ]
  },
  "query_464_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_17_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_221_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_307_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Times Square history"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Times Square history'."
      }
    ]
  },
  "query_268_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "Times Square"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'Times Square'."
      }
    ]
  },
  "query_78_0_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_431_2_11": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "Inception movie review"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'Inception movie review'."
      }
    ]
  },
  "query_164_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 35494221
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '35494221'."
      }
    ]
  },
  "query_448_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_5_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_419_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_269_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "New York",
        "end": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'New York', 'end' is 'Los Angeles'."
      }
    ]
  },
  "query_11_1_9": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Property 1: Boutique hotel in Barcelona",
        "bullet_items": "Property Type: Room in boutique hotel\nCapacity: 2 persons\nRating: 4.83\nLatitude: 41.384632\nLongitude: 2.177421"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Property 1: Boutique hotel in Barcelona', 'bullet_items' is 'Property Type: Room in boutique hotel\nCapacity: 2 persons\nRating: 4.83\nLatitude: 41.384632\nLongitude: 2.177421'."
      }
    ]
  },
  "query_297_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Los Angeles, California"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Los Angeles, California'."
      }
    ]
  },
  "query_176_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 977756995339499057
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '977756995339499057'."
      }
    ]
  },
  "query_79_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Salima Omar"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Salima Omar'."
      }
    ]
  },
  "query_104_0_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "attractions",
        "places": "Long Island City",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'attractions', 'places' is 'Long Island City', 'radius' is '1000'."
      }
    ]
  },
  "query_428_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_216_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_356_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_182_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "sustainable tourism"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'sustainable tourism'."
      }
    ]
  },
  "query_55_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 240
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '240'."
      }
    ]
  },
  "query_363_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "O6IuVag-XFMJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'O6IuVag-XFMJ'."
      }
    ]
  },
  "query_206_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_219_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_151_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 42409434
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '42409434'."
      }
    ]
  },
  "query_200_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_206_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_5_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 49634091
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '49634091'."
      }
    ]
  },
  "query_408_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "efZZXguoqq8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'efZZXguoqq8J'."
      }
    ]
  },
  "query_313_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Event Planning",
        "abs_location": "outputs/event_planning.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Event Planning', 'abs_location' is 'outputs/event_planning.pptx'."
      }
    ]
  },
  "query_134_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 7559897
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '7559897'."
      }
    ]
  },
  "query_352_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "john.doe@example.com",
        "title": "New Product Inquiry",
        "body": "Dear John, I hope this email finds you well. I wanted to inquire about your interest in our latest software solution. Please let me know if you have any questions. Best regards, Jane"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'john.doe@example.com', 'title' is 'New Product Inquiry', 'body' is 'Dear John, I hope this email finds you well. I wanted to inquire about your interest in our latest software solution. Please let me know if you have any questions. Best regards, Jane'."
      }
    ]
  },
  "query_407_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_322_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "New York",
        "end": "Miami"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'New York', 'end' is 'Miami'."
      }
    ]
  },
  "query_25_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "grocery",
        "places": "123 Orchard St, Springfield",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'grocery', 'places' is '123 Orchard St, Springfield', 'radius' is '1000'."
      }
    ]
  },
  "query_336_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "霸王别姬"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is '霸王别姬'."
      }
    ]
  },
  "query_449_1_14": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "金手指",
        "bullet_items": "剧情 / 犯罪",
        "image": "outputs/1697985258.3357627.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is '金手指', 'bullet_items' is '剧情 / 犯罪', 'image' is 'outputs/1697985258.3357627.jpg'."
      }
    ]
  },
  "query_5_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_174_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "37.7749,-122.4194,37.7833,-122.4081"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is '37.7749,-122.4194,37.7833,-122.4081'."
      }
    ]
  },
  "query_195_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_11_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 24424717,
        "date": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '24424717', 'date' is '2023-10-19'."
      }
    ]
  },
  "query_285_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Los Angeles",
        "end": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Los Angeles', 'end' is 'San Francisco'."
      }
    ]
  },
  "query_149_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_226_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_16_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_443_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "红猪"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '红猪'."
      }
    ]
  },
  "query_80_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_227_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_310_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "park",
        "places": "Times Square",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'park', 'places' is 'Times Square', 'radius' is '5000'."
      }
    ]
  },
  "query_143_2_15": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Property 2",
        "bullet_items": "Property Type: Room in boutique hotel[SPAN]Rating: 4.54[SPAN]Location: Union City, NJ, United States",
        "image": "outputs/1697745182.1838884.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Property 2', 'bullet_items' is 'Property Type: Room in boutique hotel[SPAN]Rating: 4.54[SPAN]Location: Union City, NJ, United States', 'image' is 'outputs/1697745182.1838884.jpg'."
      }
    ]
  },
  "query_444_2_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Introduction",
        "bullet_items": "Welcome to the study presentation.[SPAN]In this presentation, we will explore various topics related to artificial intelligence."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Introduction', 'bullet_items' is 'Welcome to the study presentation.[SPAN]In this presentation, we will explore various topics related to artificial intelligence.'."
      }
    ]
  },
  "query_69_0_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 424
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '424'."
      }
    ]
  },
  "query_289_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Times Square, New York City",
        "end": "Central Park, New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Times Square, New York City', 'end' is 'Central Park, New York City'."
      }
    ]
  },
  "query_151_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Event Details",
        "bullet_items": "1. Date: [SPAN]2. Time: [SPAN]3. Location: [SPAN]4. Movie: [SPAN]5. Food and Drinks: [SPAN]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Event Details', 'bullet_items' is '1. Date: [SPAN]2. Time: [SPAN]3. Location: [SPAN]4. Movie: [SPAN]5. Food and Drinks: [SPAN]'."
      }
    ]
  },
  "query_1_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 909363587647904523
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '909363587647904523'."
      }
    ]
  },
  "query_34_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "school",
        "latitude": 41.8832283,
        "longitude": -87.63240051,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'school', 'latitude' is '41.8832283', 'longitude' is '-87.63240051', 'radius' is '1000'."
      }
    ]
  },
  "query_325_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "New York City",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'New York City', 'radius' is '5000'."
      }
    ]
  },
  "query_10_2_9": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 37677930,
        "checkIn": "2023-10-18",
        "checkOut": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '37677930', 'checkIn' is '2023-10-18', 'checkOut' is '2023-10-19'."
      }
    ]
  },
  "query_91_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": "598889637396090869"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '598889637396090869'."
      }
    ]
  },
  "query_187_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "Times Square",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'Times Square', 'radius' is '1000'."
      }
    ]
  },
  "query_169_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 858697692672545141
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '858697692672545141'."
      }
    ]
  },
  "query_143_2_9": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 47158717
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '47158717'."
      }
    ]
  },
  "query_115_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 51619634,
        "checkIn": "2023-10-20",
        "checkOut": "2023-10-27"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '51619634', 'checkIn' is '2023-10-20', 'checkOut' is '2023-10-27'."
      }
    ]
  },
  "query_254_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "computer vision,image recognition"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'computer vision,image recognition'."
      }
    ]
  },
  "query_322_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Seattle"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Seattle'."
      }
    ]
  },
  "query_193_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_240_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_446_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "红猪"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '红猪'."
      }
    ]
  },
  "query_114_2_10": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "San Francisco",
        "days": 1
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'San Francisco', 'days' is '1'."
      }
    ]
  },
  "query_47_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_269_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "customer1@example.com",
        "title": "Delivery Update",
        "body": "Dear Customer,\n\nWe are pleased to inform you that your package will be delivered on October 19, 2023.\n\nEstimated Delivery Time:\n\nRoute 1: Washington, DC to New York, NY - Distance: 367.293 km, Estimated Time: 4 hours 30 minutes\n\nRoute 2: New York, NY to Cupertino, CA - Distance: 4734.993 km, Estimated Time: 1 day 2 hours\n\nRoute 3: Cupertino, CA to Washington, DC - Distance: 4580.5 km, Estimated Time: 1 day 1 hour\n\nPlease feel free to contact us if you have any questions.\n\nBest regards,\nDelivery Team"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'customer1@example.com', 'title' is 'Delivery Update', 'body' is 'Dear Customer,\n\nWe are pleased to inform you that your package will be delivered on October 19, 2023.\n\nEstimated Delivery Time:\n\nRoute 1: Washington, DC to New York, NY - Distance: 367.293 km, Estimated Time: 4 hours 30 minutes\n\nRoute 2: New York, NY to Cupertino, CA - Distance: 4734.993 km, Estimated Time: 1 day 2 hours\n\nRoute 3: Cupertino, CA to Washington, DC - Distance: 4580.5 km, Estimated Time: 1 day 1 hour\n\nPlease feel free to contact us if you have any questions.\n\nBest regards,\nDelivery Team'."
      }
    ]
  },
  "query_70_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.get_coordinate",
      "args": {
        "address": "时代广场, 纽约"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_coordinate', 'description': 'Get the coordinate of a location. Param must be in Chinese', 'required_parameters': [{'name': 'address', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [{'name': 'city', 'type': 'STRING', 'description': 'specify the city to search'}], 'return_data': [{'name': 'coordinate', 'description': 'coordinate of the location, format with (lon, lat)'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_coordinate with the parameter as follows: 'address' is '时代广场, 纽约'."
      }
    ]
  },
  "query_92_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_10_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Bali"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Bali'."
      }
    ]
  },
  "query_59_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_486_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_11_1_17": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Property 3: Hostel in El Prat de Llobregat",
        "bullet_items": "Property Type: Room in hostel\nCapacity: 1 person\nRating: 4.47\nLatitude: 41.3238\nLongitude: 2.09509",
        "image": "outputs/1697601692.936694.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Property 3: Hostel in El Prat de Llobregat', 'bullet_items' is 'Property Type: Room in hostel\nCapacity: 1 person\nRating: 4.47\nLatitude: 41.3238\nLongitude: 2.09509', 'image' is 'outputs/1697601692.936694.jpg'."
      }
    ]
  },
  "query_93_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Paris"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Paris'."
      }
    ]
  },
  "query_35_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "1600 Pennsylvania Avenue, Washington D.C."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is '1600 Pennsylvania Avenue, Washington D.C.'."
      }
    ]
  },
  "query_208_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "tIXO4GnPdDEJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'tIXO4GnPdDEJ'."
      }
    ]
  },
  "query_268_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "coffee shop",
        "latitude": 40.75699997,
        "longitude": -73.98600006,
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'coffee shop', 'latitude' is '40.75699997', 'longitude' is '-73.98600006', 'radius' is '500'."
      }
    ]
  },
  "query_98_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Bali"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Bali'."
      }
    ]
  },
  "query_407_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_77_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_266_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "10:00 AM",
        "end_time": "12:00 PM"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '10:00 AM', 'end_time' is '12:00 PM'."
      }
    ]
  },
  "query_262_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 926393
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '926393'."
      }
    ]
  },
  "query_69_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Paris"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Paris'."
      }
    ]
  },
  "query_107_1_9": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 19404
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '19404'."
      }
    ]
  },
  "query_16_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "data analysis"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'data analysis'."
      }
    ]
  },
  "query_290_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "40.6892,-74.0445",
        "end": "199 Washington St, Jersey City, NJ, 07302"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '40.6892,-74.0445', 'end' is '199 Washington St, Jersey City, NJ, 07302'."
      }
    ]
  },
  "query_60_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "驯龙高手"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '驯龙高手'."
      }
    ]
  },
  "query_53_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Introduction",
        "bullet_items": "Line 1\nLine 2\nLine 3"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Introduction', 'bullet_items' is 'Line 1\nLine 2\nLine 3'."
      }
    ]
  },
  "query_2_2_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 20654271
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '20654271'."
      }
    ]
  },
  "query_2_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 941597372112246343
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '941597372112246343'."
      }
    ]
  },
  "query_57_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Doe"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Doe'."
      }
    ]
  },
  "query_258_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_0_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 45475252
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '45475252'."
      }
    ]
  },
  "query_329_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Artificial Intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Artificial Intelligence'."
      }
    ]
  },
  "query_28_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "hotels near Times Square"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'hotels near Times Square'."
      }
    ]
  },
  "query_24_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_65_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_55_2_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 424
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '424'."
      }
    ]
  },
  "query_0_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_338_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Doe"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Doe'."
      }
    ]
  },
  "query_47_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_105_0_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Tokyo Tower",
        "end": "35.71975,139.79289"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Tokyo Tower', 'end' is '35.71975,139.79289'."
      }
    ]
  },
  "query_453_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "17:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '17:00'."
      }
    ]
  },
  "query_114_0_8": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurants",
        "places": "40.72301,-73.99201",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurants', 'places' is '40.72301,-73.99201', 'radius' is '1000'."
      }
    ]
  },
  "query_148_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 299054
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '299054'."
      }
    ]
  },
  "query_461_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "流浪地球"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '流浪地球'."
      }
    ]
  },
  "query_470_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 240
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '240'."
      }
    ]
  },
  "query_395_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 475557
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '475557'."
      }
    ]
  },
  "query_89_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "current"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'current'."
      }
    ]
  },
  "query_25_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "gas station",
        "places": "456 Broad St, Springfield",
        "radius": 2000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'gas station', 'places' is '456 Broad St, Springfield', 'radius' is '2000'."
      }
    ]
  },
  "query_363_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Sales Strategies"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Sales Strategies'."
      }
    ]
  },
  "query_342_1_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Movie Details",
        "bullet_items": "Name: The Dark Knight",
        "image": "outputs/1697747710.3830557.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Movie Details', 'bullet_items' is 'Name: The Dark Knight', 'image' is 'outputs/1697747710.3830557.jpg'."
      }
    ]
  },
  "query_218_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "most recent academic papers on 'graph neural networks'"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'most recent academic papers on 'graph neural networks''."
      }
    ]
  },
  "query_143_2_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 47158717
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '47158717'."
      }
    ]
  },
  "query_259_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_347_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 575264
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '575264'."
      }
    ]
  },
  "query_31_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Seattle",
        "end": "Portland"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Seattle', 'end' is 'Portland'."
      }
    ]
  },
  "query_322_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "gas station",
        "places": "Seattle"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'gas station', 'places' is 'Seattle'."
      }
    ]
  },
  "query_230_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 157336
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '157336'."
      }
    ]
  },
  "query_68_0_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Avengers: Endgame",
        "bullet_items": "Genres: Adventure, Science Fiction, Action\nRelease Date: 2019-04-24\nRuntime: 181 minutes\nOverview: After the devastating events of Avengers: Infinity War, the universe is in ruins due to the efforts of the Mad Titan, Thanos. With the help of remaining allies, the Avengers must assemble once more in order to undo Thanos' actions and restore order to the universe once and for all, no matter what consequences may be in store.\nVote Average: 8.262\nPopularity: 111.005",
        "image": "outputs/1697732848.096676.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Avengers: Endgame', 'bullet_items' is 'Genres: Adventure, Science Fiction, Action\nRelease Date: 2019-04-24\nRuntime: 181 minutes\nOverview: After the devastating events of Avengers: Infinity War, the universe is in ruins due to the efforts of the Mad Titan, Thanos. With the help of remaining allies, the Avengers must assemble once more in order to undo Thanos' actions and restore order to the universe once and for all, no matter what consequences may be in store.\nVote Average: 8.262\nPopularity: 111.005', 'image' is 'outputs/1697732848.096676.jpg'."
      }
    ]
  },
  "query_82_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "nutrition plans for weight loss"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'nutrition plans for weight loss'."
      }
    ]
  },
  "query_231_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_91_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 691676460109271194
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '691676460109271194'."
      }
    ]
  },
  "query_431_0_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Details",
        "bullet_items": "Premiere Date: September 15, 2021\nGenres: Science Fiction, Adventure\nDuration: 155 minutes"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Details', 'bullet_items' is 'Premiere Date: September 15, 2021\nGenres: Science Fiction, Adventure\nDuration: 155 minutes'."
      }
    ]
  },
  "query_230_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Interstellar"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Interstellar'."
      }
    ]
  },
  "query_352_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 603
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '603'."
      }
    ]
  },
  "query_61_2_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_97_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_288_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Denver"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Denver'."
      }
    ]
  },
  "query_114_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 561489475078914207
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '561489475078914207'."
      }
    ]
  },
  "query_10_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 1001125627615934457
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '1001125627615934457'."
      }
    ]
  },
  "query_342_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "黑暗骑士"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '黑暗骑士'."
      }
    ]
  },
  "query_230_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "Los Angeles",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'Los Angeles', 'days' is '3'."
      }
    ]
  },
  "query_269_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "350 5th Ave, New York, NY",
        "end": "1 Infinite Loop, Cupertino, CA"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '350 5th Ave, New York, NY', 'end' is '1 Infinite Loop, Cupertino, CA'."
      }
    ]
  },
  "query_57_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "珍·古道尔的传奇一生"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '珍·古道尔的传奇一生'."
      }
    ]
  },
  "query_462_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 299054
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '299054'."
      }
    ]
  },
  "query_266_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "your_email@example.com",
        "title": "Accommodation and Route Details",
        "body": "Dear Sir/Madam,\n\nPlease find below the details of accommodation options near Times Square in New York City and the route from Hotel Mela Times Square to the Empire State Building:\n\nAccommodation Options:\n- Hotel Mela Times Square: 120 W 44th St, New York, NY, 10036\n- Casablanca Hotel: 147 W 43rd St, New York, NY, 10036\n- Kimpton Muse Hotel: 130 W 46th St, New York, NY, 10036\n- Econo Lodge Times Square: 302 W 47th St, New York, NY, 10036\n- Hotel 46 Times Square: 129 W 46th St, New York, NY, 10036\n\nRoute from Hotel Mela Times Square to Empire State Building:\n- Head southwest on 7th Ave toward W 43rd St\n- Turn left onto W 34th St\n- Turn right onto 5th Ave, then immediately turn right onto W 33rd St\n- Arrive at Empire State Building, NY on the right\n\nKindly let me know if you need any further assistance.\n\nThank you.\n\nBest regards,\nYour Name"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'your_email@example.com', 'title' is 'Accommodation and Route Details', 'body' is 'Dear Sir/Madam,\n\nPlease find below the details of accommodation options near Times Square in New York City and the route from Hotel Mela Times Square to the Empire State Building:\n\nAccommodation Options:\n- Hotel Mela Times Square: 120 W 44th St, New York, NY, 10036\n- Casablanca Hotel: 147 W 43rd St, New York, NY, 10036\n- Kimpton Muse Hotel: 130 W 46th St, New York, NY, 10036\n- Econo Lodge Times Square: 302 W 47th St, New York, NY, 10036\n- Hotel 46 Times Square: 129 W 46th St, New York, NY, 10036\n\nRoute from Hotel Mela Times Square to Empire State Building:\n- Head southwest on 7th Ave toward W 43rd St\n- Turn left onto W 34th St\n- Turn right onto 5th Ave, then immediately turn right onto W 33rd St\n- Arrive at Empire State Building, NY on the right\n\nKindly let me know if you need any further assistance.\n\nThank you.\n\nBest regards,\nYour Name'."
      }
    ]
  },
  "query_140_1_9": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "河边的错误 电影 预告片"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is '河边的错误 电影 预告片'."
      }
    ]
  },
  "query_486_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_431_2_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Summary",
        "bullet_items": "Cobb, a skilled thief who commits corporate espionage by infiltrating the subconscious of his targets is offered a chance to regain his old life as payment for a task considered to be impossible: 'inception', the implantation of another person's idea into a target's subconscious."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Summary', 'bullet_items' is 'Cobb, a skilled thief who commits corporate espionage by infiltrating the subconscious of his targets is offered a chance to regain his old life as payment for a task considered to be impossible: 'inception', the implantation of another person's idea into a target's subconscious.'."
      }
    ]
  },
  "query_142_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_431_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_262_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 1151534
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '1151534'."
      }
    ]
  },
  "query_468_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_85_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "20:54",
        "end_time": "23:59"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '20:54', 'end_time' is '23:59'."
      }
    ]
  },
  "query_10_0_9": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 54239108,
        "date": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '54239108', 'date' is '2023-10-19'."
      }
    ]
  },
  "query_91_0_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "New York, NY, United States",
        "end": "45 Murray St, New York, NY, 10007"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'New York, NY, United States', 'end' is '45 Murray St, New York, NY, 10007'."
      }
    ]
  },
  "query_80_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "current"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'current'."
      }
    ]
  },
  "query_199_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence in healthcare"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence in healthcare'."
      }
    ]
  },
  "query_455_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_205_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_358_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "789 Pine Street"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is '789 Pine Street'."
      }
    ]
  },
  "query_245_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "18:00",
        "end_time": "20:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '18:00', 'end_time' is '20:00'."
      }
    ]
  },
  "query_60_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_11_1_18": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_111_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 972494279345285252
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '972494279345285252'."
      }
    ]
  },
  "query_155_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Eiffel Tower, Paris"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Eiffel Tower, Paris'."
      }
    ]
  },
  "query_456_0_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "侏罗纪公园"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '侏罗纪公园'."
      }
    ]
  },
  "query_470_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_22_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_406_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "climate change"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'climate change'."
      }
    ]
  },
  "query_244_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "GOOGL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'GOOGL'."
      }
    ]
  },
  "query_220_2_12": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "侏罗纪公园"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '侏罗纪公园'."
      }
    ]
  },
  "query_255_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_136_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 28722771
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '28722771'."
      }
    ]
  },
  "query_449_1_15": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "一闪一闪亮星星"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '一闪一闪亮星星'."
      }
    ]
  },
  "query_289_1_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.aggregate_stock_with_time",
      "args": {
        "ticker": "TSLA",
        "multiplier": 1,
        "timespan": "day",
        "from": "2023-09-17",
        "to": "2023-10-17"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.aggregate_stock_with_time', 'description': 'get aggregate bars for a stock over a given date range in custom time window sizes', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The ticker symbol of the stock/equity'}, {'name': 'multiplier', 'type': 'NUMBER', 'description': 'The size of the timespan multiplier'}, {'name': 'timespan', 'type': 'STRING', 'description': \"The size of the time window, supported 'day', 'hour', 'week'\"}, {'name': 'from', 'type': 'STRING', 'description': 'The start of the aggregate time window with the format YYYY-MM-DD'}, {'name': 'to', 'type': 'STRING', 'description': 'The end of the aggregate time window with the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list of dict including the open and closed price in the given time period and the unix msec timestamp for the start of the aggregate window'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.aggregate_stock_with_time with the parameter as follows: 'ticker' is 'TSLA', 'multiplier' is '1', 'timespan' is 'day', 'from' is '2023-09-17', 'to' is '2023-10-17'."
      }
    ]
  },
  "query_104_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 714328565788379770
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '714328565788379770'."
      }
    ]
  },
  "query_407_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Smith"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Smith'."
      }
    ]
  },
  "query_137_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 847456265351637680
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '847456265351637680'."
      }
    ]
  },
  "query_79_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_453_1_12": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "侏罗纪公园"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '侏罗纪公园'."
      }
    ]
  },
  "query_307_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Times Square",
        "end": "Statue of Liberty"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Times Square', 'end' is 'Statue of Liberty'."
      }
    ]
  },
  "query_218_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "definition and examples of prime numbers"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'definition and examples of prime numbers'."
      }
    ]
  },
  "query_127_1_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 51619634,
        "date": "2023-10-25"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '51619634', 'date' is '2023-10-25'."
      }
    ]
  },
  "query_134_0_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 7559897,
        "checkIn": "2023-11-10",
        "checkOut": "2023-11-15"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '7559897', 'checkIn' is '2023-11-10', 'checkOut' is '2023-11-15'."
      }
    ]
  },
  "query_247_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "data analysis"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'data analysis'."
      }
    ]
  },
  "query_254_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Introduction to Quantum Computing",
        "bullet_items": "Bullet point 1[SPAN]Bullet point 2[SPAN]Bullet point 3"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Introduction to Quantum Computing', 'bullet_items' is 'Bullet point 1[SPAN]Bullet point 2[SPAN]Bullet point 3'."
      }
    ]
  },
  "query_166_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_312_1_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Times Square",
        "end": "Empire State Building"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Times Square', 'end' is 'Empire State Building'."
      }
    ]
  },
  "query_172_0_9": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 989883752603321143
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '989883752603321143'."
      }
    ]
  },
  "query_272_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "New York City",
        "end": "Miami"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'New York City', 'end' is 'Miami'."
      }
    ]
  },
  "query_402_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Default",
        "abs_location": "outputs/data_analysis.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Default', 'abs_location' is 'outputs/data_analysis.ppt'."
      }
    ]
  },
  "query_449_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_2_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 28260101
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '28260101'."
      }
    ]
  },
  "query_34_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Road Trip",
        "abs_location": "outputs/RoadTrip.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Road Trip', 'abs_location' is 'outputs/RoadTrip.ppt'."
      }
    ]
  },
  "query_359_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Apple Inc."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Apple Inc.'."
      }
    ]
  },
  "query_76_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "David Leslie"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'David Leslie'."
      }
    ]
  },
  "query_27_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "奥本海默"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '奥本海默'."
      }
    ]
  },
  "query_78_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "Dfr79tjK7j4J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'Dfr79tjK7j4J'."
      }
    ]
  },
  "query_153_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51113056
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51113056'."
      }
    ]
  },
  "query_202_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_133_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 44783505
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '44783505'."
      }
    ]
  },
  "query_70_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.get_coordinate",
      "args": {
        "address": "上海"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_coordinate', 'description': 'Get the coordinate of a location. Param must be in Chinese', 'required_parameters': [{'name': 'address', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [{'name': 'city', 'type': 'STRING', 'description': 'specify the city to search'}], 'return_data': [{'name': 'coordinate', 'description': 'coordinate of the location, format with (lon, lat)'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_coordinate with the parameter as follows: 'address' is '上海'."
      }
    ]
  },
  "query_134_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 29592742
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '29592742'."
      }
    ]
  },
  "query_448_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_95_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_374_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_10_1_10": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 941597372112246343,
        "checkIn": "2023-10-18",
        "checkOut": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '941597372112246343', 'checkIn' is '2023-10-18', 'checkOut' is '2023-10-19'."
      }
    ]
  },
  "query_307_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "ICufAw99MmwJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'ICufAw99MmwJ'."
      }
    ]
  },
  "query_251_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/QuantumComputingOverview.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/QuantumComputingOverview.ppt'."
      }
    ]
  },
  "query_255_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "Data Science"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'Data Science'."
      }
    ]
  },
  "query_242_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "NBjp4NBMU-oJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'NBjp4NBMU-oJ'."
      }
    ]
  },
  "query_11_1_16": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "Barcelona,culture"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'Barcelona,culture'."
      }
    ]
  },
  "query_268_0_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_69_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 240
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '240'."
      }
    ]
  },
  "query_2_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 667316357375615620
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '667316357375615620'."
      }
    ]
  },
  "query_56_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_53_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "education",
        "abs_location": "outputs/lesson_presentation.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'education', 'abs_location' is 'outputs/lesson_presentation.pptx'."
      }
    ]
  },
  "query_193_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_431_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_34_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "New York",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'New York', 'radius' is '5000'."
      }
    ]
  },
  "query_247_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/DataAnalysis_Insights.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/DataAnalysis_Insights.ppt'."
      }
    ]
  },
  "query_149_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 575264
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '575264'."
      }
    ]
  },
  "query_242_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Climate Change",
        "bullet_items": "",
        "image": "outputs/1697734594.6192734.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Climate Change', 'bullet_items' is '', 'image' is 'outputs/1697734594.6192734.jpg'."
      }
    ]
  },
  "query_91_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_1_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 37677930
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '37677930'."
      }
    ]
  },
  "query_134_2_16": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_10_0_10": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_307_2_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_64_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_30_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "New York",
        "end": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'New York', 'end' is 'Los Angeles'."
      }
    ]
  },
  "query_17_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 278
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '278'."
      }
    ]
  },
  "query_333_1_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Employee Benefits Overview",
        "bullet_items": "New Employee Benefits",
        "image": "outputs/1697712888.3006213.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Employee Benefits Overview', 'bullet_items' is 'New Employee Benefits', 'image' is 'outputs/1697712888.3006213.jpg'."
      }
    ]
  },
  "query_199_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_8_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 33884250
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '33884250'."
      }
    ]
  },
  "query_477_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_269_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "1 Infinite Loop, Cupertino, CA",
        "end": "1600 Pennsylvania Ave NW, Washington, DC"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '1 Infinite Loop, Cupertino, CA', 'end' is '1600 Pennsylvania Ave NW, Washington, DC'."
      }
    ]
  },
  "query_88_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/WW2Presentation.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/WW2Presentation.pptx'."
      }
    ]
  },
  "query_181_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 50971005,
        "date": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '50971005', 'date' is '2023-10-19'."
      }
    ]
  },
  "query_472_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_338_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_288_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Denver",
        "end": "Rocky Mountain National Park"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Denver', 'end' is 'Rocky Mountain National Park'."
      }
    ]
  },
  "query_453_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Film Screening Event",
        "abs_location": "outputs/film_screening_event.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Film Screening Event', 'abs_location' is 'outputs/film_screening_event.pptx'."
      }
    ]
  },
  "query_31_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Seattle",
        "end": "Portland"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Seattle', 'end' is 'Portland'."
      }
    ]
  },
  "query_447_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_431_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Title",
        "bullet_items": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Title', 'bullet_items' is 'Inception'."
      }
    ]
  },
  "query_182_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "JFK Airport",
        "end": "TWA Hotel"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'JFK Airport', 'end' is 'TWA Hotel'."
      }
    ]
  },
  "query_91_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": "598889637396090869"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '598889637396090869'."
      }
    ]
  },
  "query_306_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Los Angeles'."
      }
    ]
  },
  "query_474_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "The Godfather Part II"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'The Godfather Part II'."
      }
    ]
  },
  "query_156_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Tokyo"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Tokyo'."
      }
    ]
  },
  "query_79_1_8": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Applications of Artificial Intelligence in Healthcare",
        "bullet_items": "Shaheen, Mohammed Yousef. \"Applications of Artificial Intelligence (AI) in healthcare: A review.\" ScienceOpen Preprints (2021).",
        "image": "<image_path>"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Applications of Artificial Intelligence in Healthcare', 'bullet_items' is 'Shaheen, Mohammed Yousef. \"Applications of Artificial Intelligence (AI) in healthcare: A review.\" ScienceOpen Preprints (2021).', 'image' is '<image_path>'."
      }
    ]
  },
  "query_242_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "quantum mechanics"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'quantum mechanics'."
      }
    ]
  },
  "query_188_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Stanford University",
        "end": "Google Headquarters"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Stanford University', 'end' is 'Google Headquarters'."
      }
    ]
  },
  "query_448_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_462_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 926393
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '926393'."
      }
    ]
  },
  "query_101_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Global Warming",
        "bullet_items": "Causes[SPAN]Effects[SPAN]Solutions",
        "image": "outputs/1697796325.6373634.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Global Warming', 'bullet_items' is 'Causes[SPAN]Effects[SPAN]Solutions', 'image' is 'outputs/1697796325.6373634.jpg'."
      }
    ]
  },
  "query_11_1_14": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Property 2: Hostel in Barcelona",
        "bullet_items": "Property Type: Private room in hostel\nCapacity: 1 person\nRating: 4.72\nLatitude: 41.381886\nLongitude: 2.170774",
        "image": "outputs/1697601667.7879188.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Property 2: Hostel in Barcelona', 'bullet_items' is 'Property Type: Private room in hostel\nCapacity: 1 person\nRating: 4.72\nLatitude: 41.381886\nLongitude: 2.170774', 'image' is 'outputs/1697601667.7879188.jpg'."
      }
    ]
  },
  "query_479_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Expend4bles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Expend4bles'."
      }
    ]
  },
  "query_31_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Seattle",
        "end": "Portland"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Seattle', 'end' is 'Portland'."
      }
    ]
  },
  "query_172_0_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 41020735
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '41020735'."
      }
    ]
  },
  "query_277_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "123 Main Street",
        "end": "456 Oak Street"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '123 Main Street', 'end' is '456 Oak Street'."
      }
    ]
  },
  "query_474_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 278
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '278'."
      }
    ]
  },
  "query_25_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "123 Orchard St, Springfield",
        "end": "321 Industrial Ln, Springfield"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '123 Orchard St, Springfield', 'end' is '321 Industrial Ln, Springfield'."
      }
    ]
  },
  "query_16_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_212_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_155_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 15297775
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '15297775'."
      }
    ]
  },
  "query_299_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Empire State Building"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Empire State Building'."
      }
    ]
  },
  "query_20_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "latest instruments and techniques in big data analytics"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'latest instruments and techniques in big data analytics'."
      }
    ]
  },
  "query_462_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 575264
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '575264'."
      }
    ]
  },
  "query_406_1_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Lea Berrang-Ford"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Lea Berrang-Ford'."
      }
    ]
  },
  "query_172_2_11": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "18:00",
        "end_time": "19:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '18:00', 'end_time' is '19:00'."
      }
    ]
  },
  "query_11_1_13": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "Barcelona,beach"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'Barcelona,beach'."
      }
    ]
  },
  "query_444_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Artificial Intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Artificial Intelligence'."
      }
    ]
  },
  "query_477_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_372_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_134_2_15": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Property 3",
        "bullet_items": "Rental unit in Miami Beach\n- ★4.90\n- 1 bedroom\n- 1 bed\n- 1 bath"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Property 3', 'bullet_items' is 'Rental unit in Miami Beach\n- ★4.90\n- 1 bedroom\n- 1 bed\n- 1 bath'."
      }
    ]
  },
  "query_36_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: ."
      }
    ]
  },
  "query_229_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Education",
        "abs_location": "outputs/EducationLecture.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Education', 'abs_location' is 'outputs/EducationLecture.pptx'."
      }
    ]
  },
  "query_220_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "涉过愤怒的海"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '涉过愤怒的海'."
      }
    ]
  },
  "query_208_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "EQ8shYj8Ai8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'EQ8shYj8Ai8J'."
      }
    ]
  },
  "query_477_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "The Lord of the Rings, Fellowship of the Ring, movie poster"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'The Lord of the Rings, Fellowship of the Ring, movie poster'."
      }
    ]
  },
  "query_166_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "selJwfIN0t8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'selJwfIN0t8J'."
      }
    ]
  },
  "query_261_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "The Bund"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'The Bund'."
      }
    ]
  },
  "query_54_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "weather.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'weather.txt'."
      }
    ]
  },
  "query_118_1_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "planner@event.com",
        "title": "Movie Night Details",
        "body": "Here are the details for your movie night in Los Angeles:\n\nAirbnb Properties:\n1. Property ID: 10803849\n   Name: clean warm quiet otaku private room\n   Address: Monterey Park, CA, United States\n\n2. Property ID: 48347678\n   Name: Suite in DTLA w/ King & Twin bed, full kitchen\n   Address: Los Angeles, CA, United States\n\nHighly-Rated Movies:\n1. The Godfather (1972)\n2. The Shawshank Redemption (1994)\n\nCurrently Showing in Theaters:\n1. Expend4bles (Release Date: 2023-09-15)\n2. The Equalizer 3 (Release Date: 2023-08-30)\n\nEnjoy your movie night!",
        "attachment": ""
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'planner@event.com', 'title' is 'Movie Night Details', 'body' is 'Here are the details for your movie night in Los Angeles:\n\nAirbnb Properties:\n1. Property ID: 10803849\n   Name: clean warm quiet otaku private room\n   Address: Monterey Park, CA, United States\n\n2. Property ID: 48347678\n   Name: Suite in DTLA w/ King & Twin bed, full kitchen\n   Address: Los Angeles, CA, United States\n\nHighly-Rated Movies:\n1. The Godfather (1972)\n2. The Shawshank Redemption (1994)\n\nCurrently Showing in Theaters:\n1. Expend4bles (Release Date: 2023-09-15)\n2. The Equalizer 3 (Release Date: 2023-08-30)\n\nEnjoy your movie night!', 'attachment' is ''."
      }
    ]
  },
  "query_67_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 155
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '155'."
      }
    ]
  },
  "query_191_0_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Quantum Computing",
        "abs_location": "outputs/Quantum_Computing_Research.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Quantum Computing', 'abs_location' is 'outputs/Quantum_Computing_Research.ppt'."
      }
    ]
  },
  "query_188_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_246_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_85_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_220_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_332_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "/home/documents/agenda.txt",
        "text": "Meeting Agenda"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is '/home/documents/agenda.txt', 'text' is 'Meeting Agenda'."
      }
    ]
  },
  "query_344_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_235_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_217_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "珍·古道尔的传奇一生"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '珍·古道尔的传奇一生'."
      }
    ]
  },
  "query_172_0_11": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 38931663,
        "checkIn": "2023-10-25",
        "checkOut": "2023-10-26"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '38931663', 'checkIn' is '2023-10-25', 'checkOut' is '2023-10-26'."
      }
    ]
  },
  "query_107_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 278
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '278'."
      }
    ]
  },
  "query_43_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_44_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/Product_Presentation.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/Product_Presentation.ppt'."
      }
    ]
  },
  "query_61_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "奥本海默",
        "bullet_items": "导演：克里斯托弗·诺兰\n主演：基里安·墨菲，艾米莉·布朗特，马特·达蒙"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is '奥本海默', 'bullet_items' is '导演：克里斯托弗·诺兰\n主演：基里安·墨菲，艾米莉·布朗特，马特·达蒙'."
      }
    ]
  },
  "query_251_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_61_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_190_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing research"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing research'."
      }
    ]
  },
  "query_431_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Dune",
        "bullet_items": "Summary: Paul Atreides, a brilliant and gifted young man born into a great destiny beyond his understanding, must travel to the most dangerous planet in the universe to ensure the future of his family and his people. As malevolent forces explode into conflict over the planet's exclusive supply of the most precious resource in existence-a commodity capable of unlocking humanity's greatest potential-only those who can conquer their fear will survive."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Dune', 'bullet_items' is 'Summary: Paul Atreides, a brilliant and gifted young man born into a great destiny beyond his understanding, must travel to the most dangerous planet in the universe to ensure the future of his family and his people. As malevolent forces explode into conflict over the planet's exclusive supply of the most precious resource in existence-a commodity capable of unlocking humanity's greatest potential-only those who can conquer their fear will survive.'."
      }
    ]
  },
  "query_82_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_363_2_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Effective Sales Techniques",
        "bullet_items": "1. Building Rapport\n2. Active Listening\n3. Solution-Oriented Selling\n4. Upselling and Cross-Selling\n5. Follow-Up and Customer Relationship Management"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Effective Sales Techniques', 'bullet_items' is '1. Building Rapport\n2. Active Listening\n3. Solution-Oriented Selling\n4. Upselling and Cross-Selling\n5. Follow-Up and Customer Relationship Management'."
      }
    ]
  },
  "query_404_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_daliy_open_close",
      "args": {
        "ticker": "AAPL",
        "date": "2023-10-15"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_daliy_open_close', 'description': 'get the open, close and afterhours prices of a stock symbol on a certain date', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'date', 'type': 'STRING', 'description': 'The date of the requested open/close in the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'close', 'description': ''}, {'name': 'open', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_daliy_open_close with the parameter as follows: 'ticker' is 'AAPL', 'date' is '2023-10-15'."
      }
    ]
  },
  "query_281_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_267_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "Times Square",
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'Times Square', 'radius' is '500'."
      }
    ]
  },
  "query_134_0_11": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_107_1_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 240
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '240'."
      }
    ]
  },
  "query_5_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Los Angeles'."
      }
    ]
  },
  "query_312_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "The Capital Grille"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'The Capital Grille'."
      }
    ]
  },
  "query_121_1_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_215_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_172_0_12": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 989883752603321143,
        "checkIn": "2023-10-25",
        "checkOut": "2023-10-26"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '989883752603321143', 'checkIn' is '2023-10-25', 'checkOut' is '2023-10-26'."
      }
    ]
  },
  "query_372_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_51_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_166_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "climate change"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'climate change'."
      }
    ]
  },
  "query_18_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "31.206075,121.425413",
        "keywords": "coffee shop"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '31.206075,121.425413', 'keywords' is 'coffee shop'."
      }
    ]
  },
  "query_448_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "红猪"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '红猪'."
      }
    ]
  },
  "query_210_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "13:00",
        "end_time": "17:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '13:00', 'end_time' is '17:00'."
      }
    ]
  },
  "query_221_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Introduction",
        "bullet_items": "Recent Machine Learning Research Papers"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Introduction', 'bullet_items' is 'Recent Machine Learning Research Papers'."
      }
    ]
  },
  "query_358_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "john.doe@example.com",
        "title": "Package Delivery Notification",
        "body": "The tracking number for your package is AB1234CD."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'john.doe@example.com', 'title' is 'Package Delivery Notification', 'body' is 'The tracking number for your package is AB1234CD.'."
      }
    ]
  },
  "query_111_1_12": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "New Brunswick, NJ, United States",
        "latitude": 40.49594879,
        "longitude": -74.44412231,
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'New Brunswick, NJ, United States', 'latitude' is '40.49594879', 'longitude' is '-74.44412231', 'radius' is '500'."
      }
    ]
  },
  "query_30_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "research facilities",
        "latitude": -3.13163328,
        "longitude": -59.9825058,
        "radius": 100000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'research facilities', 'latitude' is '-3.13163328', 'longitude' is '-59.9825058', 'radius' is '100000'."
      }
    ]
  },
  "query_104_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 714328565788379770
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '714328565788379770'."
      }
    ]
  },
  "query_165_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_181_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 50971005,
        "date": "2023-10-20"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '50971005', 'date' is '2023-10-20'."
      }
    ]
  },
  "query_457_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "Shanghai",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'Shanghai', 'days' is '3'."
      }
    ]
  },
  "query_104_2_9": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Los Angeles, CA, United States"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Los Angeles, CA, United States'."
      }
    ]
  },
  "query_114_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_247_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Mathematics Education",
        "abs_location": "outputs/Math_Education_Trends.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Mathematics Education', 'abs_location' is 'outputs/Math_Education_Trends.ppt'."
      }
    ]
  },
  "query_26_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "latitude": 38.897671,
        "longitude": -77.036557,
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'latitude' is '38.897671', 'longitude' is '-77.036557', 'radius' is '500'."
      }
    ]
  },
  "query_174_1_15": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 51541759,
        "date": "2023-10-18"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '51541759', 'date' is '2023-10-18'."
      }
    ]
  },
  "query_140_1_10": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "金手指 电影 预告片"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is '金手指 电影 预告片'."
      }
    ]
  },
  "query_483_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 278
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '278'."
      }
    ]
  },
  "query_85_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_169_2_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_80_1_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "current",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'current', 'days' is '3'."
      }
    ]
  },
  "query_408_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/Climate_Change.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/Climate_Change.ppt'."
      }
    ]
  },
  "query_406_1_8": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Richard G. Taylor"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Richard G. Taylor'."
      }
    ]
  },
  "query_164_2_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "luTaq8PfhYcJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'luTaq8PfhYcJ'."
      }
    ]
  },
  "query_230_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_111_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 51403713
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '51403713'."
      }
    ]
  },
  "query_310_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Times Square, New York, NY",
        "end": "Statue of Liberty, New York, NY"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Times Square, New York, NY', 'end' is 'Statue of Liberty, New York, NY'."
      }
    ]
  },
  "query_244_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning interpretability"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning interpretability'."
      }
    ]
  },
  "query_134_2_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 834833864568549748,
        "checkIn": "2023-10-20",
        "checkOut": "2023-10-25"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '834833864568549748', 'checkIn' is '2023-10-20', 'checkOut' is '2023-10-25'."
      }
    ]
  },
  "query_1_1_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 49634091
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '49634091'."
      }
    ]
  },
  "query_221_1_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "奥本海默"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '奥本海默'."
      }
    ]
  },
  "query_59_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "刺杀小说家"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '刺杀小说家'."
      }
    ]
  },
  "query_295_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Central Park",
        "end": "AMC Empire 25 cinema"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Central Park', 'end' is 'AMC Empire 25 cinema'."
      }
    ]
  },
  "query_194_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/status.txt",
        "text": "Email sent successfully."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/status.txt', 'text' is 'Email sent successfully.'."
      }
    ]
  },
  "query_231_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_136_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Los Angeles'."
      }
    ]
  },
  "query_283_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Times Square, New York City",
        "end": "Central Park, New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Times Square, New York City', 'end' is 'Central Park, New York City'."
      }
    ]
  },
  "query_455_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "AAPL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'AAPL'."
      }
    ]
  },
  "query_66_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_453_1_13": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "侏罗纪公园",
        "bullet_items": "侏罗纪公园是一部美国的科幻、惊悚、冒险电影，由史蒂文·斯皮尔伯格导演，山姆·尼尔、劳拉·邓恩、杰夫·高布伦等人主演。\n\n剧情简介：哈蒙德（理查德•阿滕伯勒 Richard Attenborough  饰）立志要建立一个非同寻常的公园：恐龙将是这个公园的主角。他把众多科学家收归旗下，利用琥珀里面困住的远古蚊子体内的血液，提取出恐龙的基因信息，利用这些信息培育繁殖恐龙。结果如愿以偿，他把怒布拉岛建立成了一个恐龙公园，坚信可以从中赚取大钱。然而，科学家们则忧心忡忡。"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is '侏罗纪公园', 'bullet_items' is '侏罗纪公园是一部美国的科幻、惊悚、冒险电影，由史蒂文·斯皮尔伯格导演，山姆·尼尔、劳拉·邓恩、杰夫·高布伦等人主演。\n\n剧情简介：哈蒙德（理查德•阿滕伯勒 Richard Attenborough  饰）立志要建立一个非同寻常的公园：恐龙将是这个公园的主角。他把众多科学家收归旗下，利用琥珀里面困住的远古蚊子体内的血液，提取出恐龙的基因信息，利用这些信息培育繁殖恐龙。结果如愿以偿，他把怒布拉岛建立成了一个恐龙公园，坚信可以从中赚取大钱。然而，科学家们则忧心忡忡。'."
      }
    ]
  },
  "query_156_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 49470166
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '49470166'."
      }
    ]
  },
  "query_224_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_164_1_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Top Airbnb Properties in New York City",
        "bullet_items": "[SPAN]Property 1: Loft in New York, Entire loft, Capacity: 2, Rating: 4.61[SPAN]Property 2: Rental unit in Brooklyn, Entire rental unit, Capacity: 2, Rating: 4.72[SPAN]Property 3: Loft in New York, Private room in loft, Capacity: 3, Rating: 4.53"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Top Airbnb Properties in New York City', 'bullet_items' is '[SPAN]Property 1: Loft in New York, Entire loft, Capacity: 2, Rating: 4.61[SPAN]Property 2: Rental unit in Brooklyn, Entire rental unit, Capacity: 2, Rating: 4.72[SPAN]Property 3: Loft in New York, Private room in loft, Capacity: 3, Rating: 4.53'."
      }
    ]
  },
  "query_4_1_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 941597372112246343
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '941597372112246343'."
      }
    ]
  },
  "query_114_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 700888293266225258
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '700888293266225258'."
      }
    ]
  },
  "query_17_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_451_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "阿凡达"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '阿凡达'."
      }
    ]
  },
  "query_133_0_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 984458557997768943,
        "date": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '984458557997768943', 'date' is '2023-10-19'."
      }
    ]
  },
  "query_274_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Times Square, New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Times Square, New York City'."
      }
    ]
  },
  "query_185_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "action"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'action'."
      }
    ]
  },
  "query_231_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "WB"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'WB'."
      }
    ]
  },
  "query_79_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Author Profile",
        "abs_location": "outputs/Author_Profile_John_Smith.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Author Profile', 'abs_location' is 'outputs/Author_Profile_John_Smith.ppt'."
      }
    ]
  },
  "query_52_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_155_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "(2.29519, 48.85354)",
        "keywords": "restaurant"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '(2.29519, 48.85354)', 'keywords' is 'restaurant'."
      }
    ]
  },
  "query_208_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "ZbdN-0AAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'ZbdN-0AAAAAJ'."
      }
    ]
  },
  "query_172_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Tokyo"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Tokyo'."
      }
    ]
  },
  "query_484_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "User Review",
        "bullet_items": "User: futuretv\nRating: 10.0\nReview: The Godfather is a film considered by most to be one of the greatest ever made. From The American Film Institute to as voted by users on the Internet Movie Database (IMDB) it is consider to be one of the best. As a film that ranks as high as other masterpieces including Citizen Kane, Pulp Fiction and 12 Angry Men, The Godfather is an exceptional piece of cinema excellence that is flawless and is simply the pinnacle crime drama."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'User Review', 'bullet_items' is 'User: futuretv\nRating: 10.0\nReview: The Godfather is a film considered by most to be one of the greatest ever made. From The American Film Institute to as voted by users on the Internet Movie Database (IMDB) it is consider to be one of the best. As a film that ranks as high as other masterpieces including Citizen Kane, Pulp Fiction and 12 Angry Men, The Godfather is an exceptional piece of cinema excellence that is flawless and is simply the pinnacle crime drama.'."
      }
    ]
  },
  "query_21_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_53_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/movies.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/movies.txt'."
      }
    ]
  },
  "query_449_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "珍·古道尔的传奇一生"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '珍·古道尔的传奇一生'."
      }
    ]
  },
  "query_314_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Kuta Beach"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Kuta Beach'."
      }
    ]
  },
  "query_419_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_463_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Chef"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Chef'."
      }
    ]
  },
  "query_143_2_17": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_339_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_285_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "school",
        "latitude": 40.703573,
        "longitude": -74.080326,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'school', 'latitude' is '40.703573', 'longitude' is '-74.080326', 'radius' is '1000'."
      }
    ]
  },
  "query_105_0_9": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Tokyo Tower",
        "end": "35.6709,139.81034"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Tokyo Tower', 'end' is '35.6709,139.81034'."
      }
    ]
  },
  "query_76_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "ZU068u3hYnIJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'ZU068u3hYnIJ'."
      }
    ]
  },
  "query_347_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_294_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_299_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "40.757972, -73.985536",
        "end": "2 Times Square, New York, NY, 10036"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '40.757972, -73.985536', 'end' is '2 Times Square, New York, NY, 10036'."
      }
    ]
  },
  "query_118_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Los Angeles'."
      }
    ]
  },
  "query_79_2_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_464_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.get_coordinate",
      "args": {
        "address": "北京市政府"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_coordinate', 'description': 'Get the coordinate of a location. Param must be in Chinese', 'required_parameters': [{'name': 'address', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [{'name': 'city', 'type': 'STRING', 'description': 'specify the city to search'}], 'return_data': [{'name': 'coordinate', 'description': 'coordinate of the location, format with (lon, lat)'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_coordinate with the parameter as follows: 'address' is '北京市政府'."
      }
    ]
  },
  "query_166_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "AAPL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'AAPL'."
      }
    ]
  },
  "query_53_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "About our Company",
        "bullet_items": "红猪, 惊奇队长2, 河边的错误",
        "image": "outputs/1697611023.579405.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'About our Company', 'bullet_items' is '红猪, 惊奇队长2, 河边的错误', 'image' is 'outputs/1697611023.579405.jpg'."
      }
    ]
  },
  "query_7_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Paris tourism"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Paris tourism'."
      }
    ]
  },
  "query_60_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_358_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.get_coordinate",
      "args": {
        "address": "天安门广场",
        "city": "北京"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_coordinate', 'description': 'Get the coordinate of a location. Param must be in Chinese', 'required_parameters': [{'name': 'address', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [{'name': 'city', 'type': 'STRING', 'description': 'specify the city to search'}], 'return_data': [{'name': 'coordinate', 'description': 'coordinate of the location, format with (lon, lat)'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_coordinate with the parameter as follows: 'address' is '天安门广场', 'city' is '北京'."
      }
    ]
  },
  "query_347_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_377_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "AAPL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'AAPL'."
      }
    ]
  },
  "query_292_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "hospitality establishments",
        "places": "Las Vegas",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'hospitality establishments', 'places' is 'Las Vegas', 'radius' is '5000'."
      }
    ]
  },
  "query_133_0_9": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 984458557997768943,
        "date": "2023-10-20"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '984458557997768943', 'date' is '2023-10-20'."
      }
    ]
  },
  "query_41_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_57_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "EQ8shYj8Ai8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'EQ8shYj8Ai8J'."
      }
    ]
  },
  "query_420_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/journal.txt",
        "text": "2023-10-21 11:14\n"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/journal.txt', 'text' is '2023-10-21 11:14\n'."
      }
    ]
  },
  "query_336_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Dune"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Dune'."
      }
    ]
  },
  "query_420_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_333_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/employee_benefits_overview.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/employee_benefits_overview.pptx'."
      }
    ]
  },
  "query_314_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'New York City'."
      }
    ]
  },
  "query_274_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Statue of Liberty, New York City",
        "end": "Times Square, New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Statue of Liberty, New York City', 'end' is 'Times Square, New York City'."
      }
    ]
  },
  "query_10_1_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_395_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Joker"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Joker'."
      }
    ]
  },
  "query_148_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 299054
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '299054'."
      }
    ]
  },
  "query_237_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "116.397428,39.90923",
        "keywords": "restaurant"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '116.397428,39.90923', 'keywords' is 'restaurant'."
      }
    ]
  },
  "query_7_2_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Best Travel Destinations"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Best Travel Destinations'."
      }
    ]
  },
  "query_453_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "19:00",
        "end_time": "22:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '19:00', 'end_time' is '22:00'."
      }
    ]
  },
  "query_164_1_10": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Author Information",
        "bullet_items": "Author: Sabine Muschter[SPAN]Affiliation: N/A[SPAN]Website: N/A"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Author Information', 'bullet_items' is 'Author: Sabine Muschter[SPAN]Affiliation: N/A[SPAN]Website: N/A'."
      }
    ]
  },
  "query_315_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_18_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_434_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_116_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_88_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/ConferenceAgenda.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/ConferenceAgenda.pptx'."
      }
    ]
  },
  "query_31_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Seattle"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Seattle'."
      }
    ]
  },
  "query_96_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'San Francisco'."
      }
    ]
  },
  "query_104_0_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "attractions",
        "places": "Union City",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'attractions', 'places' is 'Union City', 'radius' is '1000'."
      }
    ]
  },
  "query_408_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "6HqcEiwmoJIJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is '6HqcEiwmoJIJ'."
      }
    ]
  },
  "query_143_2_14": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Property 1",
        "bullet_items": "Property Type: Private room in home[SPAN]Rating: 4.71[SPAN]Location: Bayonne, NJ, United States",
        "image": "outputs/1697745182.1838884.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Property 1', 'bullet_items' is 'Property Type: Private room in home[SPAN]Rating: 4.71[SPAN]Location: Bayonne, NJ, United States', 'image' is 'outputs/1697745182.1838884.jpg'."
      }
    ]
  },
  "query_478_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 299054
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '299054'."
      }
    ]
  },
  "query_312_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Los Angeles",
        "end": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Los Angeles', 'end' is 'San Francisco'."
      }
    ]
  },
  "query_34_0_8": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Restaurants Along the Route",
        "bullet_items": "- Benares\n- The Odeon\n- The Capital Grille\n- Tamarind Tribeca\n- Bubby's"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Restaurants Along the Route', 'bullet_items' is '- Benares\n- The Odeon\n- The Capital Grille\n- Tamarind Tribeca\n- Bubby's'."
      }
    ]
  },
  "query_44_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_67_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_34_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "New York",
        "end": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'New York', 'end' is 'Los Angeles'."
      }
    ]
  },
  "query_211_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_140_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "惊奇队长2"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '惊奇队长2'."
      }
    ]
  },
  "query_372_2_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_33_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_242_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "AjZwhtwAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'AjZwhtwAAAAJ'."
      }
    ]
  },
  "query_206_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_456_1_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_92_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "colleague@example.com",
        "title": "Conference Schedule",
        "body": "Dear colleague,\n\nI hope this email finds you well. I wanted to share the schedule for the conference in San Francisco next week:\n\n- Date: October 25-28, 2023\n- Location: San Francisco, CA\n\nPlease let me know if you have any questions or need further information.\n\nBest regards,\n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'colleague@example.com', 'title' is 'Conference Schedule', 'body' is 'Dear colleague,\n\nI hope this email finds you well. I wanted to share the schedule for the conference in San Francisco next week:\n\n- Date: October 25-28, 2023\n- Location: San Francisco, CA\n\nPlease let me know if you have any questions or need further information.\n\nBest regards,\n[Your Name]'."
      }
    ]
  },
  "query_368_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/Product_Presentation.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/Product_Presentation.pptx'."
      }
    ]
  },
  "query_322_1_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_321_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_479_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_305_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "popular California roll sushi recipes"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'popular California roll sushi recipes'."
      }
    ]
  },
  "query_175_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 855819398716503903
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '855819398716503903'."
      }
    ]
  },
  "query_427_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "The Shawshank Redemption"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'The Shawshank Redemption'."
      }
    ]
  },
  "query_313_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Lassen & Hennigs",
        "bullet_items": "Specializing in gourmet cuisine.[SPAN]Provide catering services for all occasions.",
        "image": "outputs/1697708786.358999.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Lassen & Hennigs', 'bullet_items' is 'Specializing in gourmet cuisine.[SPAN]Provide catering services for all occasions.', 'image' is 'outputs/1697708786.358999.jpg'."
      }
    ]
  },
  "query_247_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_71_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "121.490872,31.241364",
        "keywords": "restaurant"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '121.490872,31.241364', 'keywords' is 'restaurant'."
      }
    ]
  },
  "query_42_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "102",
        "start_time": "09:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '09:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_117_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 49378969
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '49378969'."
      }
    ]
  },
  "query_91_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Moon - Price Villa in home Six Bali",
        "end": "Komaneka at Keramas Beach"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Moon - Price Villa in home Six Bali', 'end' is 'Komaneka at Keramas Beach'."
      }
    ]
  },
  "query_1_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 51746773
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '51746773'."
      }
    ]
  },
  "query_30_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Manaus, Brazil"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Manaus, Brazil'."
      }
    ]
  },
  "query_1_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 50426764
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '50426764'."
      }
    ]
  },
  "query_314_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "Le Bernardin",
        "latitude": 40.71304703,
        "longitude": -74.00723267,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'Le Bernardin', 'latitude' is '40.71304703', 'longitude' is '-74.00723267', 'radius' is '1000'."
      }
    ]
  },
  "query_314_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "Eleven Madison Park",
        "latitude": 40.71304703,
        "longitude": -74.00723267,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'Eleven Madison Park', 'latitude' is '40.71304703', 'longitude' is '-74.00723267', 'radius' is '1000'."
      }
    ]
  },
  "query_246_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "methods of data analysis"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'methods of data analysis'."
      }
    ]
  },
  "query_219_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_402_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Box Office Performance",
        "bullet_items": "1. Highest-grossing movies\n2. Seasonal box office trends\n3. International box office"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Box Office Performance', 'bullet_items' is '1. Highest-grossing movies\n2. Seasonal box office trends\n3. International box office'."
      }
    ]
  },
  "query_406_1_10": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "James D. Ford"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'James D. Ford'."
      }
    ]
  },
  "query_34_1_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Chicago",
        "end": "Millennium Park"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Chicago', 'end' is 'Millennium Park'."
      }
    ]
  },
  "query_2_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 20654271
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '20654271'."
      }
    ]
  },
  "query_114_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'San Francisco'."
      }
    ]
  },
  "query_428_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Shang-Chi and the Legend of the Ten Rings"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Shang-Chi and the Legend of the Ten Rings'."
      }
    ]
  },
  "query_187_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "aRCT0jKYjgIJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'aRCT0jKYjgIJ'."
      }
    ]
  },
  "query_107_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Hollywood Walk of Fame"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Hollywood Walk of Fame'."
      }
    ]
  },
  "query_395_2_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_34_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "grocery store",
        "latitude": 41.8832283,
        "longitude": -87.63240051,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'grocery store', 'latitude' is '41.8832283', 'longitude' is '-87.63240051', 'radius' is '1000'."
      }
    ]
  },
  "query_31_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Portland"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Portland'."
      }
    ]
  },
  "query_67_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_215_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_220_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_369_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "technology article about a product"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'technology article about a product'."
      }
    ]
  },
  "query_1_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Tokyo"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Tokyo'."
      }
    ]
  },
  "query_164_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 691676460109271194
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '691676460109271194'."
      }
    ]
  },
  "query_76_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "selJwfIN0t8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'selJwfIN0t8J'."
      }
    ]
  },
  "query_148_1_10": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'New York City'."
      }
    ]
  },
  "query_305_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "Central Park",
        "latitude": 40.78247833,
        "longitude": -73.96555328,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'Central Park', 'latitude' is '40.78247833', 'longitude' is '-73.96555328', 'radius' is '1000'."
      }
    ]
  },
  "query_111_2_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "San Bruno, CA, United States"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'San Bruno, CA, United States'."
      }
    ]
  },
  "query_70_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "Tr1ocpcAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'Tr1ocpcAAAAJ'."
      }
    ]
  },
  "query_4_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 887888251157143883
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '887888251157143883'."
      }
    ]
  },
  "query_484_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_483_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_175_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 855819398716503903,
        "checkIn": "2023-10-22",
        "checkOut": "2023-10-25"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '855819398716503903', 'checkIn' is '2023-10-22', 'checkOut' is '2023-10-25'."
      }
    ]
  },
  "query_268_0_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "New York City",
        "bullet_items": "Times Square is a major tourist attraction in New York City.",
        "image": "outputs/1697708460.765058.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'New York City', 'bullet_items' is 'Times Square is a major tourist attraction in New York City.', 'image' is 'outputs/1697708460.765058.jpg'."
      }
    ]
  },
  "query_456_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Movie Extravaganza",
        "bullet_items": "Date and Time: [SPAN]2023-10-22 22:53"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Movie Extravaganza', 'bullet_items' is 'Date and Time: [SPAN]2023-10-22 22:53'."
      }
    ]
  },
  "query_342_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Dark",
        "abs_location": "outputs/dark_knight.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Dark', 'abs_location' is 'outputs/dark_knight.ppt'."
      }
    ]
  },
  "query_361_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "artificial intelligence and climate change"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'artificial intelligence and climate change'."
      }
    ]
  },
  "query_215_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 858711
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '858711'."
      }
    ]
  },
  "query_335_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_133_0_16": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_70_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.get_distance",
      "args": {
        "origins": "116.407526,39.904030",
        "destination": "121.473701,31.230416"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'origins', 'type': 'STRING', 'description': \"coordinate of the start location, format with 'lon,lat'\"}, {'name': 'destination', 'type': 'STRING', 'description': \"coordinate of the end location, format with 'lon,lat'\"}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in KM'}, {'name': 'duration', 'description': 'expected time in minutes'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_distance with the parameter as follows: 'origins' is '116.407526,39.904030', 'destination' is '121.473701,31.230416'."
      }
    ]
  },
  "query_483_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_2_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_111_2_11": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "37.62727737, -122.41614532",
        "end": "37.7749, -122.4194"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '37.62727737, -122.41614532', 'end' is '37.7749, -122.4194'."
      }
    ]
  },
  "query_363_2_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "sales"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'sales'."
      }
    ]
  },
  "query_434_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.get_coordinate",
      "args": {
        "address": "长城"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_coordinate', 'description': 'Get the coordinate of a location. Param must be in Chinese', 'required_parameters': [{'name': 'address', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [{'name': 'city', 'type': 'STRING', 'description': 'specify the city to search'}], 'return_data': [{'name': 'coordinate', 'description': 'coordinate of the location, format with (lon, lat)'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_coordinate with the parameter as follows: 'address' is '长城'."
      }
    ]
  },
  "query_306_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "New York City",
        "end": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'New York City', 'end' is 'Los Angeles'."
      }
    ]
  },
  "query_477_0_8": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_27_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "pizza",
        "places": "Central Park",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'pizza', 'places' is 'Central Park', 'radius' is '5000'."
      }
    ]
  },
  "query_350_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_28_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Renaissance New York Times Square Hotel",
        "end": "Central Park"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Renaissance New York Times Square Hotel', 'end' is 'Central Park'."
      }
    ]
  },
  "query_13_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Stanford University",
        "end": "Stanford Institute For Economic Policy Research"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Stanford University', 'end' is 'Stanford Institute For Economic Policy Research'."
      }
    ]
  },
  "query_430_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_36_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "professor@example.com",
        "title": "Regarding Assignment Submission",
        "body": "Dear Professor, I would like to discuss the deadline extension for the assignment. Best regards, John"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'professor@example.com', 'title' is 'Regarding Assignment Submission', 'body' is 'Dear Professor, I would like to discuss the deadline extension for the assignment. Best regards, John'."
      }
    ]
  },
  "query_225_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 299054
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '299054'."
      }
    ]
  },
  "query_26_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "1600 Pennsylvania Avenue NW, Washington, DC 20500",
        "end": "600 14th St NW, Washington, DC, 20005"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '1600 Pennsylvania Avenue NW, Washington, DC 20500', 'end' is '600 14th St NW, Washington, DC, 20005'."
      }
    ]
  },
  "query_153_2_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 51113056
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '51113056'."
      }
    ]
  },
  "query_5_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_47_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_152_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "London",
        "days": 0
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'London', 'days' is '0'."
      }
    ]
  },
  "query_93_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/hotel.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/hotel.txt'."
      }
    ]
  },
  "query_375_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "email@msr-cmt.org",
        "title": "Re: Marketing Campaign Proposal",
        "body": "Dear sender, thank you for your proposal. We are interested in collaborating with your company. Could you please provide us with more details about the campaign? Looking forward to hearing from you soon."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'email@msr-cmt.org', 'title' is 'Re: Marketing Campaign Proposal', 'body' is 'Dear sender, thank you for your proposal. We are interested in collaborating with your company. Could you please provide us with more details about the campaign? Looking forward to hearing from you soon.'."
      }
    ]
  },
  "query_174_1_18": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "San Francisco, CA",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'San Francisco, CA', 'days' is '3'."
      }
    ]
  },
  "query_223_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "AAPL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'AAPL'."
      }
    ]
  },
  "query_172_2_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 44783505
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '44783505'."
      }
    ]
  },
  "query_471_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 155
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '155'."
      }
    ]
  },
  "query_292_0_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "eateries",
        "places": "Las Vegas",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'eateries', 'places' is 'Las Vegas', 'radius' is '5000'."
      }
    ]
  },
  "query_169_2_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Client Testimonials",
        "bullet_items": "Review 1: Great place\nRating: 5\n\nReview 2: The place is so clean and well managed, it’s impressive. All staff were amazing but big thanks to Ravi who was such a warm, friendly spirit. Location v central. My only critique is the noise, something they can’t easily change. If you’re spending very late nights out and aren’t a heavy sleeper, this place may not be ideal. It is really hard even w/earplugs to sleep uninterrupted during the day because the place has so many people walking around and talking and the walls are thin. \nI was near the front desk which was especially noisy but they did move me to a quieter spot when available, which was sweet of them. I didn’t spend my last nights there to know if the new spot helped but the staff really go above and beyond to make your stay as best as it can be and I would stay here again for that alone.\nRating: 5\n\nReview 3: Great place to stay\nRating: 5"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Client Testimonials', 'bullet_items' is 'Review 1: Great place\nRating: 5\n\nReview 2: The place is so clean and well managed, it’s impressive. All staff were amazing but big thanks to Ravi who was such a warm, friendly spirit. Location v central. My only critique is the noise, something they can’t easily change. If you’re spending very late nights out and aren’t a heavy sleeper, this place may not be ideal. It is really hard even w/earplugs to sleep uninterrupted during the day because the place has so many people walking around and talking and the walls are thin. \nI was near the front desk which was especially noisy but they did move me to a quieter spot when available, which was sweet of them. I didn’t spend my last nights there to know if the new spot helped but the staff really go above and beyond to make your stay as best as it can be and I would stay here again for that alone.\nRating: 5\n\nReview 3: Great place to stay\nRating: 5'."
      }
    ]
  },
  "query_172_2_12": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "101",
        "start_time": "18:00",
        "end_time": "19:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '101', 'start_time' is '18:00', 'end_time' is '19:00'."
      }
    ]
  },
  "query_266_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "attendees",
        "title": "Restaurant Options and Directions",
        "body": "Here are some restaurant options within a 1-mile radius of the conference venue in Chicago:\n\n1. 312 Chicago - 136 N La Salle St, Chicago, IL, 60602\n2. Petterino's - 150 N Dearborn St, Chicago, IL, 60601\n3. Italian Village Restaurants - 71 W Monroe St, Chicago, IL, 60603\n4. House of Blues Restaurant & Bar - 329 N Dearborn St., Chicago, IL, 60654\n5. Roti Mediterranean Bowls. Salads. Pitas. - 33 N Dearborn St, Chicago, IL, 60602\n\nDirections from the venue to the closest train station:\n\n- Head north on N La Salle St toward W Randolph St\n- Turn left onto W Randolph St\n- Take the ramp on the left for I-90 E / I-94 E\n- At Exit 59A, head right on the ramp for I-90 East toward Indiana Toll Rd / Skyway\n- Keep straight to stay on I-90 E\n- Keep straight to stay on I-80 E / I-90 E\n- Keep left to get onto I-80 East\n- Keep straight, heading toward Pa Turnpike / Pittsburgh\n- Keep straight to get onto I-76 E\n- Keep straight to stay on I-76 E\n- Keep right to stay on I-76 E\n- Keep straight to get onto I-276 East\n- At Exit 351, head right on the ramp for US-1 / I-95 South toward Philadelphia / Trenton\n- Keep left, heading toward Princeton / Trenton\n- Keep straight to stay on US-1 N\n- Take the ramp on the right for NJ-33 East and head toward NJ Transit / S Clinton Ave / Train Station\n- Keep straight, heading toward S Clinton Ave N / Trenton Train Station\n- Arrive at Train Station, NJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'attendees', 'title' is 'Restaurant Options and Directions', 'body' is 'Here are some restaurant options within a 1-mile radius of the conference venue in Chicago:\n\n1. 312 Chicago - 136 N La Salle St, Chicago, IL, 60602\n2. Petterino's - 150 N Dearborn St, Chicago, IL, 60601\n3. Italian Village Restaurants - 71 W Monroe St, Chicago, IL, 60603\n4. House of Blues Restaurant & Bar - 329 N Dearborn St., Chicago, IL, 60654\n5. Roti Mediterranean Bowls. Salads. Pitas. - 33 N Dearborn St, Chicago, IL, 60602\n\nDirections from the venue to the closest train station:\n\n- Head north on N La Salle St toward W Randolph St\n- Turn left onto W Randolph St\n- Take the ramp on the left for I-90 E / I-94 E\n- At Exit 59A, head right on the ramp for I-90 East toward Indiana Toll Rd / Skyway\n- Keep straight to stay on I-90 E\n- Keep straight to stay on I-80 E / I-90 E\n- Keep left to get onto I-80 East\n- Keep straight, heading toward Pa Turnpike / Pittsburgh\n- Keep straight to get onto I-76 E\n- Keep straight to stay on I-76 E\n- Keep right to stay on I-76 E\n- Keep straight to get onto I-276 East\n- At Exit 351, head right on the ramp for US-1 / I-95 South toward Philadelphia / Trenton\n- Keep left, heading toward Princeton / Trenton\n- Keep straight to stay on US-1 N\n- Take the ramp on the right for NJ-33 East and head toward NJ Transit / S Clinton Ave / Train Station\n- Keep straight, heading toward S Clinton Ave N / Trenton Train Station\n- Arrive at Train Station, NJ'."
      }
    ]
  },
  "query_486_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_136_2_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 1004413709358464188,
        "checkIn": "2023-11-20",
        "checkOut": "2023-11-27"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '1004413709358464188', 'checkIn' is '2023-11-20', 'checkOut' is '2023-11-27'."
      }
    ]
  },
  "query_64_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_484_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_105_0_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Tokyo Tower",
        "end": "35.7049,139.81403"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Tokyo Tower', 'end' is '35.7049,139.81403'."
      }
    ]
  },
  "query_194_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_114_0_9": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurants",
        "places": "40.71994,-74.00098",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurants', 'places' is '40.71994,-74.00098', 'radius' is '1000'."
      }
    ]
  },
  "query_54_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "future_weather.txt",
        "text": "Forecast for the next two days:\n\nDate: 2023-10-18\nOverall conditions: Overcast\nAverage temperature: 14.8°C\n\nDate: 2023-10-19\nOverall conditions: Partly cloudy\nAverage temperature: 15.1°C"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'future_weather.txt', 'text' is 'Forecast for the next two days:\n\nDate: 2023-10-18\nOverall conditions: Overcast\nAverage temperature: 14.8°C\n\nDate: 2023-10-19\nOverall conditions: Partly cloudy\nAverage temperature: 15.1°C'."
      }
    ]
  },
  "query_365_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_14_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: ."
      }
    ]
  },
  "query_231_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_107_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_107_1_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 240
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '240'."
      }
    ]
  },
  "query_225_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_30_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Amazon rainforest biodiversity"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Amazon rainforest biodiversity'."
      }
    ]
  },
  "query_164_2_8": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Conference",
        "abs_location": "outputs/conference_plan.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Conference', 'abs_location' is 'outputs/conference_plan.ppt'."
      }
    ]
  },
  "query_255_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "Artificial Intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'Artificial Intelligence'."
      }
    ]
  },
  "query_168_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 989020487048284489
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '989020487048284489'."
      }
    ]
  },
  "query_274_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Statue of Liberty, New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Statue of Liberty, New York City'."
      }
    ]
  },
  "query_100_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning",
        "sort_by": "date",
        "limit": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning', 'sort_by' is 'date', 'limit' is '3'."
      }
    ]
  },
  "query_305_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning in healthcare"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning in healthcare'."
      }
    ]
  },
  "query_7_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 25547075
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '25547075'."
      }
    ]
  },
  "query_164_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "aa0yAA7T27oJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'aa0yAA7T27oJ'."
      }
    ]
  },
  "query_285_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurants",
        "places": "San Francisco",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurants', 'places' is 'San Francisco', 'radius' is '5000'."
      }
    ]
  },
  "query_471_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "12345"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '12345'."
      }
    ]
  },
  "query_290_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_20_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_402_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Audience Ratings",
        "bullet_items": "1. Average ratings\n2. Ratings by demographic\n3. Ratings by genre"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Audience Ratings', 'bullet_items' is '1. Average ratings\n2. Ratings by demographic\n3. Ratings by genre'."
      }
    ]
  },
  "query_251_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'quantum computing'."
      }
    ]
  },
  "query_67_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_33_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "New York City",
        "end": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'New York City', 'end' is 'Los Angeles'."
      }
    ]
  },
  "query_462_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_245_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": 101,
        "start_time": "18:00",
        "end_time": "20:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '101', 'start_time' is '18:00', 'end_time' is '20:00'."
      }
    ]
  },
  "query_172_0_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 989883752603321143
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '989883752603321143'."
      }
    ]
  },
  "query_133_0_11": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 44783505,
        "date": "2023-10-21"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '44783505', 'date' is '2023-10-21'."
      }
    ]
  },
  "query_15_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/paper_readme.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/paper_readme.txt'."
      }
    ]
  },
  "query_249_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning",
        "limit": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning', 'limit' is '3'."
      }
    ]
  },
  "query_274_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Doe"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Doe'."
      }
    ]
  },
  "query_375_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_185_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing",
        "num_articles": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing', 'num_articles' is '3'."
      }
    ]
  },
  "query_43_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_53_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/paper_readme.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/paper_readme.txt'."
      }
    ]
  },
  "query_57_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "驯龙高手"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '驯龙高手'."
      }
    ]
  },
  "query_25_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "hotel",
        "places": "789 Park Ave, New York",
        "latitude": 40.7715133,
        "longitude": -73.9632433,
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'hotel', 'places' is '789 Park Ave, New York', 'latitude' is '40.7715133', 'longitude' is '-73.9632433', 'radius' is '5000'."
      }
    ]
  },
  "query_471_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Doe"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Doe'."
      }
    ]
  },
  "query_452_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "20:23",
        "end_time": "23:23"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '20:23', 'end_time' is '23:23'."
      }
    ]
  },
  "query_10_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 763553497595081889
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '763553497595081889'."
      }
    ]
  },
  "query_451_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "20th Century Fox"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is '20th Century Fox'."
      }
    ]
  },
  "query_136_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 10803849
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '10803849'."
      }
    ]
  },
  "query_449_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Upcoming Movies",
        "bullet_items": "1. 红猪\n2. 涉过愤怒的海\n3. 惊奇队长2\n4. 金手指\n5. 一闪一闪亮星星"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Upcoming Movies', 'bullet_items' is '1. 红猪\n2. 涉过愤怒的海\n3. 惊奇队长2\n4. 金手指\n5. 一闪一闪亮星星'."
      }
    ]
  },
  "query_310_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Times Square, New York, NY",
        "end": "Empire State Building, New York, NY"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Times Square, New York, NY', 'end' is 'Empire State Building, New York, NY'."
      }
    ]
  },
  "query_5_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_208_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "oSwmxabWRNwJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'oSwmxabWRNwJ'."
      }
    ]
  },
  "query_95_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_34_1_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "property_details",
        "abs_location": "outputs/PropertyDetails.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'property_details', 'abs_location' is 'outputs/PropertyDetails.ppt'."
      }
    ]
  },
  "query_300_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": 103,
        "start_time": "15:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '15:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_289_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "tech company that manufactures smartphones and computers"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'tech company that manufactures smartphones and computers'."
      }
    ]
  },
  "query_477_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_114_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 691676460109271194
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '691676460109271194'."
      }
    ]
  },
  "query_359_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "advisor@example.com",
        "title": "Investment Portfolio",
        "body": "Please review my investment portfolio and provide recommendations for diversification"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'advisor@example.com', 'title' is 'Investment Portfolio', 'body' is 'Please review my investment portfolio and provide recommendations for diversification'."
      }
    ]
  },
  "query_2_2_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "partneremail@example.com",
        "title": "Selected Properties",
        "body": "Here are the details of the selected properties:\n\nProperty 1:\nTitle: Home in Huntington Beach\nType: Private room in home\nCapacity: 1 person\nRating: 4.9\nCoordinates: Latitude 33.72925, Longitude -118.04885\n\nProperty 2:\nTitle: Guesthouse in Culver City\nType: Private room in guesthouse\nCapacity: 2 people\nRating: 4.94\nCoordinates: Latitude 34.0243, Longitude -118.38209\n\nProperty 3:\nTitle: Home in Los Angeles\nType: Private room in home\nCapacity: 2 people\nRating: 4.9\nCoordinates: Latitude 34.22908, Longitude -118.5686\n\nPlease let me know if you have any questions.\n\nBest regards,\n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'partneremail@example.com', 'title' is 'Selected Properties', 'body' is 'Here are the details of the selected properties:\n\nProperty 1:\nTitle: Home in Huntington Beach\nType: Private room in home\nCapacity: 1 person\nRating: 4.9\nCoordinates: Latitude 33.72925, Longitude -118.04885\n\nProperty 2:\nTitle: Guesthouse in Culver City\nType: Private room in guesthouse\nCapacity: 2 people\nRating: 4.94\nCoordinates: Latitude 34.0243, Longitude -118.38209\n\nProperty 3:\nTitle: Home in Los Angeles\nType: Private room in home\nCapacity: 2 people\nRating: 4.9\nCoordinates: Latitude 34.22908, Longitude -118.5686\n\nPlease let me know if you have any questions.\n\nBest regards,\n[Your Name]'."
      }
    ]
  },
  "query_1_2_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 33884250
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '33884250'."
      }
    ]
  },
  "query_420_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_104_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 22788198
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '22788198'."
      }
    ]
  },
  "query_309_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "123 Main Street, Anytown",
        "end": "John Doe University library"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '123 Main Street, Anytown', 'end' is 'John Doe University library'."
      }
    ]
  },
  "query_248_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_208_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_249_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "machine learning algorithms"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'machine learning algorithms'."
      }
    ]
  },
  "query_363_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "fCb2Qh0657MJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'fCb2Qh0657MJ'."
      }
    ]
  },
  "query_35_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Central Park, New York City",
        "end": "Battery Park, New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Central Park, New York City', 'end' is 'Battery Park, New York City'."
      }
    ]
  },
  "query_300_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "123 Main Street",
        "end": "456 Elm Street"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '123 Main Street', 'end' is '456 Elm Street'."
      }
    ]
  },
  "query_221_1_13": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_229_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "programming"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'programming'."
      }
    ]
  },
  "query_199_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "smith@example.com",
        "title": "Academic Papers on Machine Learning Algorithms",
        "body": "Published: 2023-04-13\nTitle: Parallelization of Machine Learning Algorithms Respectively on Single Machine and Spark\nAuthors: Jiajun Shen\nSummary: With the rapid development of big data technologies, how to dig out useful information from massive data becomes an essential problem. However, using machine learning algorithms to analyze large data may be time-consuming and inefficient on the traditional single machine. To solve these problems, this paper has made some research on the parallelization of several classic machine learning algorithms respectively on the single machine and the big data platform Spark. We compare the runtime and efficiency of traditional machine learning algorithms with parallelized machine learning algorithms respectively on the single machine and Spark platform. The research results have shown significant improvement in runtime and efficiency of parallelized machine learning algorithms.\n\nPublished: 2016-11-12\nTitle: An Introduction to MM Algorithms for Machine Learning and Statistical\nAuthors: Hien D. Nguyen\nSummary: MM (majorization--minimization) algorithms are an increasingly popular tool for solving optimization problems in machine learning and statistical estimation. This article introduces the MM algorithm framework in general and via three popular example applications: Gaussian mixture regressions, multinomial logistic regressions, and support vector machines. Specific algorithms for the three examples are derived and numerical demonstrations are presented. Theoretical and practical aspects of MM algorithm design are discussed.\n\nPublished: 2019-09-19\nTitle: Machine Learning for Clinical Predictive Analytics\nAuthors: Wei-Hung Weng\nSummary: In this chapter, we provide a brief overview of applying machine learning techniques for clinical prediction tasks. We begin with a quick introduction to the concepts of machine learning and outline some of the most common machine learning algorithms. Next, we demonstrate how to apply the algorithms with appropriate toolkits to conduct machine learning experiments for clinical prediction tasks. The objectives of this chapter are to (1) understand the basics of machine learning techniques and the reasons behind why they are useful for solving clinical prediction problems, (2) understand the intuition behind some machine learning models, including regression, decision trees, and support vector machines, and (3) understand how to apply these models to clinical prediction problems using publicly available datasets via case studies."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'smith@example.com', 'title' is 'Academic Papers on Machine Learning Algorithms', 'body' is 'Published: 2023-04-13\nTitle: Parallelization of Machine Learning Algorithms Respectively on Single Machine and Spark\nAuthors: Jiajun Shen\nSummary: With the rapid development of big data technologies, how to dig out useful information from massive data becomes an essential problem. However, using machine learning algorithms to analyze large data may be time-consuming and inefficient on the traditional single machine. To solve these problems, this paper has made some research on the parallelization of several classic machine learning algorithms respectively on the single machine and the big data platform Spark. We compare the runtime and efficiency of traditional machine learning algorithms with parallelized machine learning algorithms respectively on the single machine and Spark platform. The research results have shown significant improvement in runtime and efficiency of parallelized machine learning algorithms.\n\nPublished: 2016-11-12\nTitle: An Introduction to MM Algorithms for Machine Learning and Statistical\nAuthors: Hien D. Nguyen\nSummary: MM (majorization--minimization) algorithms are an increasingly popular tool for solving optimization problems in machine learning and statistical estimation. This article introduces the MM algorithm framework in general and via three popular example applications: Gaussian mixture regressions, multinomial logistic regressions, and support vector machines. Specific algorithms for the three examples are derived and numerical demonstrations are presented. Theoretical and practical aspects of MM algorithm design are discussed.\n\nPublished: 2019-09-19\nTitle: Machine Learning for Clinical Predictive Analytics\nAuthors: Wei-Hung Weng\nSummary: In this chapter, we provide a brief overview of applying machine learning techniques for clinical prediction tasks. We begin with a quick introduction to the concepts of machine learning and outline some of the most common machine learning algorithms. Next, we demonstrate how to apply the algorithms with appropriate toolkits to conduct machine learning experiments for clinical prediction tasks. The objectives of this chapter are to (1) understand the basics of machine learning techniques and the reasons behind why they are useful for solving clinical prediction problems, (2) understand the intuition behind some machine learning models, including regression, decision trees, and support vector machines, and (3) understand how to apply these models to clinical prediction problems using publicly available datasets via case studies.'."
      }
    ]
  },
  "query_466_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_217_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_453_1_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "奥本海默",
        "bullet_items": "奥本海默是一部美国/英国的剧情、传记、历史电影，由克里斯托弗·诺兰导演，基里安·墨菲、艾米莉·布朗特、马特·达蒙等人主演。\n\n剧情简介：当我们为权力金钱焦虑、兴奋与愤怒时，却根本想象不到“他们”在谈论着怎样更重要的事情。"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is '奥本海默', 'bullet_items' is '奥本海默是一部美国/英国的剧情、传记、历史电影，由克里斯托弗·诺兰导演，基里安·墨菲、艾米莉·布朗特、马特·达蒙等人主演。\n\n剧情简介：当我们为权力金钱焦虑、兴奋与愤怒时，却根本想象不到“他们”在谈论着怎样更重要的事情。'."
      }
    ]
  },
  "query_114_2_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 51403713
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '51403713'."
      }
    ]
  },
  "query_312_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Los Angeles'."
      }
    ]
  },
  "query_351_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_307_2_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Recasting German identity: culture, politics, and literature in the Berlin Republic"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Recasting German identity: culture, politics, and literature in the Berlin Republic'."
      }
    ]
  },
  "query_68_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/Now_Playing_Movies_Presentation.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/Now_Playing_Movies_Presentation.pptx'."
      }
    ]
  },
  "query_153_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 38677942
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '38677942'."
      }
    ]
  },
  "query_305_1_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "-nPLdV9umrEJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is '-nPLdV9umrEJ'."
      }
    ]
  },
  "query_417_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "16:00",
        "end_time": "18:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '16:00', 'end_time' is '18:00'."
      }
    ]
  },
  "query_79_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Smith"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Smith'."
      }
    ]
  },
  "query_275_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "hotels",
        "places": "Times Square",
        "radius": 2000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'hotels', 'places' is 'Times Square', 'radius' is '2000'."
      }
    ]
  },
  "query_96_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 4631873
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '4631873'."
      }
    ]
  },
  "query_228_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 299534
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '299534'."
      }
    ]
  },
  "query_172_2_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 38677942
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '38677942'."
      }
    ]
  },
  "query_185_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'San Francisco'."
      }
    ]
  },
  "query_461_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_225_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Smith"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Smith'."
      }
    ]
  },
  "query_335_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_daliy_open_close",
      "args": {
        "ticker": "AAPL",
        "date": "2023-10-12"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_daliy_open_close', 'description': 'get the open, close and afterhours prices of a stock symbol on a certain date', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'date', 'type': 'STRING', 'description': 'The date of the requested open/close in the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'close', 'description': ''}, {'name': 'open', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_daliy_open_close with the parameter as follows: 'ticker' is 'AAPL', 'date' is '2023-10-12'."
      }
    ]
  },
  "query_1_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51746773
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51746773'."
      }
    ]
  },
  "query_172_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 41020735,
        "date": "2023-10-25"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '41020735', 'date' is '2023-10-25'."
      }
    ]
  },
  "query_262_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "gas station",
        "places": "456 Oak Avenue",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'gas station', 'places' is '456 Oak Avenue', 'radius' is '5000'."
      }
    ]
  },
  "query_299_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "40.757972, -73.985536",
        "end": "40.74843597, -73.98580933"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '40.757972, -73.985536', 'end' is '40.74843597, -73.98580933'."
      }
    ]
  },
  "query_134_2_12": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "Miami property"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'Miami property'."
      }
    ]
  },
  "query_477_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "The Lord of the Rings: The Fellowship of the Ring",
        "bullet_items": "[SPAN]Release Date: 2001-12-18[SPAN]Genres: Fantasy, Adventure, Action[SPAN]Vote Average: 8.4[SPAN]Popularity: 100.7",
        "image": "outputs/1697980460.458905.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'The Lord of the Rings: The Fellowship of the Ring', 'bullet_items' is '[SPAN]Release Date: 2001-12-18[SPAN]Genres: Fantasy, Adventure, Action[SPAN]Vote Average: 8.4[SPAN]Popularity: 100.7', 'image' is 'outputs/1697980460.458905.jpg'."
      }
    ]
  },
  "query_114_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 691676460109271194
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '691676460109271194'."
      }
    ]
  },
  "query_1_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 49634091
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '49634091'."
      }
    ]
  },
  "query_221_1_10": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "驯龙高手"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '驯龙高手'."
      }
    ]
  },
  "query_148_1_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 691676460109271194
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '691676460109271194'."
      }
    ]
  },
  "query_78_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "TXdHj3MAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'TXdHj3MAAAAJ'."
      }
    ]
  },
  "query_314_2_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "Kuta Beach",
        "days": 1
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'Kuta Beach', 'days' is '1'."
      }
    ]
  },
  "query_212_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/quantum_computing_articles.txt",
        "text": "Published: 2022-08-01\nTitle: The Rise of Quantum Internet Computing\nAuthors: Seng W. Loke\nSummary: This article highlights quantum Internet computing as referring to\ndistributed quantum computing over the quantum Internet, analogous to\n(classical) Internet computing involving (classical) distributed computing over\nthe (classical) Internet. Relevant to quantum Internet computing would be areas\nof study such as quantum protocols for distributed nodes using quantum\ninformation for computations, quantum cloud computing, delegated verifiable\nblind or private computing, non-local gates, and distributed quantum\napplications, over Internet-scale distances.\n\nPublished: 2000-03-31\nTitle: Unconventional Quantum Computing Devices\nAuthors: Seth Lloyd\nSummary: This paper investigates a variety of unconventional quantum computation\ndevices, including fermionic quantum computers and computers that exploit\nnonlinear quantum mechanics. It is shown that unconventional quantum computing\ndevices can in principle compute some quantities more rapidly than\n`conventional' quantum computers.\n\nPublished: 2013-11-20\nTitle: Geometrical perspective on quantum states and quantum computation\nAuthors: Zeqian Chen\nSummary: We interpret quantum computing as a geometric evolution process by\nreformulating finite quantum systems via Connes' noncommutative geometry. In\nthis formulation, quantum states are represented as noncommutative connections,\nwhile gauge transformations on the connections play a role of unitary quantum\noperations. Thereby, a geometrical model for quantum computation is presented,\nwhich is equivalent to the quantum circuit model. This result shows a geometric\nway of realizing quantum computing and as such, provides an alternative\nproposal of building a quantum computer."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/quantum_computing_articles.txt', 'text' is 'Published: 2022-08-01\nTitle: The Rise of Quantum Internet Computing\nAuthors: Seng W. Loke\nSummary: This article highlights quantum Internet computing as referring to\ndistributed quantum computing over the quantum Internet, analogous to\n(classical) Internet computing involving (classical) distributed computing over\nthe (classical) Internet. Relevant to quantum Internet computing would be areas\nof study such as quantum protocols for distributed nodes using quantum\ninformation for computations, quantum cloud computing, delegated verifiable\nblind or private computing, non-local gates, and distributed quantum\napplications, over Internet-scale distances.\n\nPublished: 2000-03-31\nTitle: Unconventional Quantum Computing Devices\nAuthors: Seth Lloyd\nSummary: This paper investigates a variety of unconventional quantum computation\ndevices, including fermionic quantum computers and computers that exploit\nnonlinear quantum mechanics. It is shown that unconventional quantum computing\ndevices can in principle compute some quantities more rapidly than\n`conventional' quantum computers.\n\nPublished: 2013-11-20\nTitle: Geometrical perspective on quantum states and quantum computation\nAuthors: Zeqian Chen\nSummary: We interpret quantum computing as a geometric evolution process by\nreformulating finite quantum systems via Connes' noncommutative geometry. In\nthis formulation, quantum states are represented as noncommutative connections,\nwhile gauge transformations on the connections play a role of unitary quantum\noperations. Thereby, a geometrical model for quantum computation is presented,\nwhich is equivalent to the quantum circuit model. This result shows a geometric\nway of realizing quantum computing and as such, provides an alternative\nproposal of building a quantum computer.'."
      }
    ]
  },
  "query_192_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "number theory"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'number theory'."
      }
    ]
  },
  "query_456_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "movies"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'movies'."
      }
    ]
  },
  "query_1_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 48596594
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '48596594'."
      }
    ]
  },
  "query_14_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "prof.johnson@example.com",
        "title": "Lecture Notes: Neural Network Architectures",
        "body": "These lecture notes provide an overview of Neural Network architectures from a mathematical point of view. Especially, Machine Learning with Neural Networks is seen as an optimization problem. Covered are an introduction to Neural Networks and the following architectures: Feedforward Neural Network, Convolutional Neural Network, ResNet, and Recurrent Neural Network."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'prof.johnson@example.com', 'title' is 'Lecture Notes: Neural Network Architectures', 'body' is 'These lecture notes provide an overview of Neural Network architectures from a mathematical point of view. Especially, Machine Learning with Neural Networks is seen as an optimization problem. Covered are an introduction to Neural Networks and the following architectures: Feedforward Neural Network, Convolutional Neural Network, ResNet, and Recurrent Neural Network.'."
      }
    ]
  },
  "query_306_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "New York City",
        "end": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'New York City', 'end' is 'Los Angeles'."
      }
    ]
  },
  "query_0_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 47215807,
        "checkIn": "2023-10-20",
        "checkOut": "2023-10-23"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '47215807', 'checkIn' is '2023-10-20', 'checkOut' is '2023-10-23'."
      }
    ]
  },
  "query_477_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 299054
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '299054'."
      }
    ]
  },
  "query_11_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 52047578,
        "date": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '52047578', 'date' is '2023-10-19'."
      }
    ]
  },
  "query_449_1_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "涉过愤怒的海"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '涉过愤怒的海'."
      }
    ]
  },
  "query_231_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "stock market analysis"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'stock market analysis'."
      }
    ]
  },
  "query_104_2_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 22788198
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '22788198'."
      }
    ]
  },
  "query_60_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "珍·古道尔的传奇一生"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '珍·古道尔的传奇一生'."
      }
    ]
  },
  "query_246_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "recent breakthroughs in artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'recent breakthroughs in artificial intelligence'."
      }
    ]
  },
  "query_310_1_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "LEN.B"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'LEN.B'."
      }
    ]
  },
  "query_34_1_10": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Nearby Parks",
        "bullet_items": "- Millennium Park\n- Grant Park\n- D'Angelo Park\n- Heritage Green Park\n- Lakeshore East Park"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Nearby Parks', 'bullet_items' is '- Millennium Park\n- Grant Park\n- D'Angelo Park\n- Heritage Green Park\n- Lakeshore East Park'."
      }
    ]
  },
  "query_348_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "10:00",
        "end_time": "13:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '10:00', 'end_time' is '13:00'."
      }
    ]
  },
  "query_333_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_79_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "applications of artificial intelligence in healthcare"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'applications of artificial intelligence in healthcare'."
      }
    ]
  },
  "query_19_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "ZbdN-0AAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'ZbdN-0AAAAAJ'."
      }
    ]
  },
  "query_192_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "London",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'London', 'days' is '3'."
      }
    ]
  },
  "query_8_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 909363587647904523
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '909363587647904523'."
      }
    ]
  },
  "query_369_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "janesmith@example.com",
        "title": "Travel Itinerary",
        "body": "Dear Jane,\n\nI hope this email finds you well. I wanted to share with you the details of our upcoming trip.\n\nFlight Details:\nFlight Number: XYZ123\n\nHotel Booking Details:\nHotel Name: ABC Hotel\nBooking Reference: 123456\n\nPlease let me know if you need any further information.\n\nBest regards,\n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'janesmith@example.com', 'title' is 'Travel Itinerary', 'body' is 'Dear Jane,\n\nI hope this email finds you well. I wanted to share with you the details of our upcoming trip.\n\nFlight Details:\nFlight Number: XYZ123\n\nHotel Booking Details:\nHotel Name: ABC Hotel\nBooking Reference: 123456\n\nPlease let me know if you need any further information.\n\nBest regards,\n[Your Name]'."
      }
    ]
  },
  "query_331_2_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_188_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Eiffel Tower",
        "end": "Louvre Museum"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Eiffel Tower', 'end' is 'Louvre Museum'."
      }
    ]
  },
  "query_134_2_10": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Miami",
        "abs_location": "outputs/MiamiProperties.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Miami', 'abs_location' is 'outputs/MiamiProperties.ppt'."
      }
    ]
  },
  "query_362_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_15_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/paper_readme.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/paper_readme.txt'."
      }
    ]
  },
  "query_199_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "john.doe@example.com",
        "title": "Latest Quantum Computing Articles",
        "body": "Published: 2022-08-01\nTitle: The Rise of Quantum Internet Computing\nAuthors: Seng W. Loke\nSummary: This article highlights quantum Internet computing as referring to\ndistributed quantum computing over the quantum Internet, analogous to\n(classical) Internet computing involving (classical) distributed computing over\nthe (classical) Internet. Relevant to quantum Internet computing would be areas\nof study such as quantum protocols for distributed nodes using quantum\ninformation for computations, quantum cloud computing, delegated verifiable\nblind or private computing, non-local gates, and distributed quantum\napplications, over Internet-scale distances.\n\nPublished: 2000-03-31\nTitle: Unconventional Quantum Computing Devices\nAuthors: Seth Lloyd\nSummary: This paper investigates a variety of unconventional quantum computation\ndevices, including fermionic quantum computers and computers that exploit\nnonlinear quantum mechanics. It is shown that unconventional quantum computing\ndevices can in principle compute some quantities more rapidly than\n`conventional' quantum computers.\n\nPublished: 2013-11-20\nTitle: Geometrical perspective on quantum states and quantum computation\nAuthors: Zeqian Chen\nSummary: We interpret quantum computing as a geometric evolution process by\nreformulating finite quantum systems via Connes' noncommutative geometry. In\nthis formulation, quantum states are represented as noncommutative connections,\nwhile gauge transformations on the connections play a role of unitary quantum\noperations. Thereby, a geometrical model for quantum computation is presented,\nwhich is equivalent to the quantum circuit model. This result shows a geometric\nway of realizing quantum computing and as such, provides an alternative\nproposal of building a quantum computer."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'john.doe@example.com', 'title' is 'Latest Quantum Computing Articles', 'body' is 'Published: 2022-08-01\nTitle: The Rise of Quantum Internet Computing\nAuthors: Seng W. Loke\nSummary: This article highlights quantum Internet computing as referring to\ndistributed quantum computing over the quantum Internet, analogous to\n(classical) Internet computing involving (classical) distributed computing over\nthe (classical) Internet. Relevant to quantum Internet computing would be areas\nof study such as quantum protocols for distributed nodes using quantum\ninformation for computations, quantum cloud computing, delegated verifiable\nblind or private computing, non-local gates, and distributed quantum\napplications, over Internet-scale distances.\n\nPublished: 2000-03-31\nTitle: Unconventional Quantum Computing Devices\nAuthors: Seth Lloyd\nSummary: This paper investigates a variety of unconventional quantum computation\ndevices, including fermionic quantum computers and computers that exploit\nnonlinear quantum mechanics. It is shown that unconventional quantum computing\ndevices can in principle compute some quantities more rapidly than\n`conventional' quantum computers.\n\nPublished: 2013-11-20\nTitle: Geometrical perspective on quantum states and quantum computation\nAuthors: Zeqian Chen\nSummary: We interpret quantum computing as a geometric evolution process by\nreformulating finite quantum systems via Connes' noncommutative geometry. In\nthis formulation, quantum states are represented as noncommutative connections,\nwhile gauge transformations on the connections play a role of unitary quantum\noperations. Thereby, a geometrical model for quantum computation is presented,\nwhich is equivalent to the quantum circuit model. This result shows a geometric\nway of realizing quantum computing and as such, provides an alternative\nproposal of building a quantum computer.'."
      }
    ]
  },
  "query_17_2_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 2503
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '2503'."
      }
    ]
  },
  "query_22_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_34_0_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Road Trip Itinerary",
        "bullet_items": "1. Start: New York\n2. End: Los Angeles\n3. Total Distance: 4488.454 miles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Road Trip Itinerary', 'bullet_items' is '1. Start: New York\n2. End: Los Angeles\n3. Total Distance: 4488.454 miles'."
      }
    ]
  },
  "query_143_2_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 4195503
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '4195503'."
      }
    ]
  },
  "query_54_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "current_weather.txt",
        "text": "Overall conditions: Clear\nAverage temperature: 11.7°C"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'current_weather.txt', 'text' is 'Overall conditions: Clear\nAverage temperature: 11.7°C'."
      }
    ]
  },
  "query_247_1_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Key Concepts",
        "bullet_items": "1. Data collection methods[SPAN]2. Data cleaning and preprocessing[SPAN]3. Exploratory data analysis[SPAN]4. Statistical analysis[SPAN]5. Data visualization"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Key Concepts', 'bullet_items' is '1. Data collection methods[SPAN]2. Data cleaning and preprocessing[SPAN]3. Exploratory data analysis[SPAN]4. Statistical analysis[SPAN]5. Data visualization'."
      }
    ]
  },
  "query_247_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "recent research papers on deep learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'recent research papers on deep learning'."
      }
    ]
  },
  "query_117_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Bali"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Bali'."
      }
    ]
  },
  "query_464_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_331_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "department_head_3@example.com",
        "title": "Department Meeting",
        "body": "Dear Department Head 3,\n\nI would like to invite you to a department meeting to discuss important matters. The meeting will be held on [DATE] from 2:00 PM to 4:00 PM in meeting room B101. The agenda of the meeting will include:\n\n1. Review of recent department progress\n2. Discussion of upcoming projects\n3. Any other business\n\nPlease make sure to mark your calendars and come prepared.\n\nBest regards,\n[Your Name]",
        "attachment": ""
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'department_head_3@example.com', 'title' is 'Department Meeting', 'body' is 'Dear Department Head 3,\n\nI would like to invite you to a department meeting to discuss important matters. The meeting will be held on [DATE] from 2:00 PM to 4:00 PM in meeting room B101. The agenda of the meeting will include:\n\n1. Review of recent department progress\n2. Discussion of upcoming projects\n3. Any other business\n\nPlease make sure to mark your calendars and come prepared.\n\nBest regards,\n[Your Name]', 'attachment' is ''."
      }
    ]
  },
  "query_219_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_215_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_408_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Causes of Climate Change",
        "bullet_items": "1. Greenhouse gas emissions\n2. Deforestation\n3. Industrial activities\n4. Agriculture"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Causes of Climate Change', 'bullet_items' is '1. Greenhouse gas emissions\n2. Deforestation\n3. Industrial activities\n4. Agriculture'."
      }
    ]
  },
  "query_59_2_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "驯龙高手"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '驯龙高手'."
      }
    ]
  },
  "query_185_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'New York City'."
      }
    ]
  },
  "query_449_1_10": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "惊奇队长2"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is '惊奇队长2'."
      }
    ]
  },
  "query_127_1_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 593322347340602809,
        "date": "2023-10-25"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '593322347340602809', 'date' is '2023-10-25'."
      }
    ]
  },
  "query_149_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_67_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_96_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 11437509
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '11437509'."
      }
    ]
  },
  "query_218_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_262_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 968051
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '968051'."
      }
    ]
  },
  "query_266_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_456_0_11": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_206_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_7_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 631154213461762756
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '631154213461762756'."
      }
    ]
  },
  "query_313_2_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Heavenly Events & Catering",
        "bullet_items": "Specialize in elegant and upscale events.[SPAN]Provide personalized menu options.",
        "image": "outputs/1697708836.3549314.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Heavenly Events & Catering', 'bullet_items' is 'Specialize in elegant and upscale events.[SPAN]Provide personalized menu options.', 'image' is 'outputs/1697708836.3549314.jpg'."
      }
    ]
  },
  "query_266_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "conference venue in Chicago",
        "radius": 1609
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'conference venue in Chicago', 'radius' is '1609'."
      }
    ]
  },
  "query_79_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "Muw4AvsAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'Muw4AvsAAAAJ'."
      }
    ]
  },
  "query_198_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_420_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_377_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_107_1_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 424
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '424'."
      }
    ]
  },
  "query_181_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 50971005,
        "date": "2023-10-18"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '50971005', 'date' is '2023-10-18'."
      }
    ]
  },
  "query_450_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "Guangzhou",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'Guangzhou', 'days' is '3'."
      }
    ]
  },
  "query_441_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_168_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 802573060713138056
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '802573060713138056'."
      }
    ]
  },
  "query_269_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "Central Park, New York",
        "latitude": 40.78247833,
        "longitude": -73.96555328,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'Central Park, New York', 'latitude' is '40.78247833', 'longitude' is '-73.96555328', 'radius' is '1000'."
      }
    ]
  },
  "query_133_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 44783505,
        "date": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '44783505', 'date' is '2023-10-19'."
      }
    ]
  },
  "query_471_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_322_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'New York'."
      }
    ]
  },
  "query_134_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 834833864568549748
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '834833864568549748'."
      }
    ]
  },
  "query_41_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "latest marketing trends"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'latest marketing trends'."
      }
    ]
  },
  "query_453_2_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_81_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_481_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_188_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "top tourist attractions in Paris"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'top tourist attractions in Paris'."
      }
    ]
  },
  "query_162_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "101",
        "start_time": "14:30",
        "end_time": "16:30"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '101', 'start_time' is '14:30', 'end_time' is '16:30'."
      }
    ]
  },
  "query_448_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "红猪"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '红猪'."
      }
    ]
  },
  "query_247_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "DeepLearning_Advances",
        "abs_location": "outputs/DeepLearning_Advances.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'DeepLearning_Advances', 'abs_location' is 'outputs/DeepLearning_Advances.ppt'."
      }
    ]
  },
  "query_200_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "102",
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_169_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_10_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 51619634
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '51619634'."
      }
    ]
  },
  "query_52_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "/home/user/documents/data.csv"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is '/home/user/documents/data.csv'."
      }
    ]
  },
  "query_18_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.get_distance",
      "args": {
        "origins": "31.2345,121.4321",
        "destination": "31.1956,121.4413"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'origins', 'type': 'STRING', 'description': \"coordinate of the start location, format with 'lon,lat'\"}, {'name': 'destination', 'type': 'STRING', 'description': \"coordinate of the end location, format with 'lon,lat'\"}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in KM'}, {'name': 'duration', 'description': 'expected time in minutes'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_distance with the parameter as follows: 'origins' is '31.2345,121.4321', 'destination' is '31.1956,121.4413'."
      }
    ]
  },
  "query_484_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/top_rated_movies.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/top_rated_movies.ppt'."
      }
    ]
  },
  "query_312_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "New York City",
        "end": "Statue of Liberty"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'New York City', 'end' is 'Statue of Liberty'."
      }
    ]
  },
  "query_216_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "31.23967,121.49977",
        "keywords": "restaurant"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '31.23967,121.49977', 'keywords' is 'restaurant'."
      }
    ]
  },
  "query_79_0_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_1_1_9": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 997382
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '997382'."
      }
    ]
  },
  "query_365_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "climate change"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'climate change'."
      }
    ]
  },
  "query_0_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 36339325
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '36339325'."
      }
    ]
  },
  "query_5_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_19_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Seng W. Loke"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Seng W. Loke'."
      }
    ]
  },
  "query_61_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Current Cinema Releases",
        "bullet_items": "1. 珍·古道尔的传奇一生\n2. 奥本海默\n3. 驯龙高手"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Current Cinema Releases', 'bullet_items' is '1. 珍·古道尔的传奇一生\n2. 奥本海默\n3. 驯龙高手'."
      }
    ]
  },
  "query_11_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Barcelona"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Barcelona'."
      }
    ]
  },
  "query_443_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_98_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "applications of quantum mechanics"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'applications of quantum mechanics'."
      }
    ]
  },
  "query_309_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Doe"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Doe'."
      }
    ]
  },
  "query_322_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "hotel",
        "places": "New York",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'hotel', 'places' is 'New York', 'radius' is '5000'."
      }
    ]
  },
  "query_451_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_21_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "Artificial Intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'Artificial Intelligence'."
      }
    ]
  },
  "query_104_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 941597372112246343
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '941597372112246343'."
      }
    ]
  },
  "query_206_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_314_2_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Nusa Dua Beach"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Nusa Dua Beach'."
      }
    ]
  },
  "query_456_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "珍·古道尔的传奇一生"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '珍·古道尔的传奇一生'."
      }
    ]
  },
  "query_17_2_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 2493
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '2493'."
      }
    ]
  },
  "query_25_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "789 Park Ave, New York",
        "latitude": 40.7715133,
        "longitude": -73.9632433,
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is '789 Park Ave, New York', 'latitude' is '40.7715133', 'longitude' is '-73.9632433', 'radius' is '5000'."
      }
    ]
  },
  "query_194_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_230_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "neuroscience"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'neuroscience'."
      }
    ]
  },
  "query_81_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_77_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "deep learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'deep learning'."
      }
    ]
  },
  "query_247_0_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_172_2_10": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_262_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_347_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 299054
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '299054'."
      }
    ]
  },
  "query_342_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Movie Details",
        "bullet_items": "Name: The Dark Knight"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Movie Details', 'bullet_items' is 'Name: The Dark Knight'."
      }
    ]
  },
  "query_16_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "movies currently playing in China"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'movies currently playing in China'."
      }
    ]
  },
  "query_143_2_11": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "marketing",
        "abs_location": "outputs/marketing_presentation.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'marketing', 'abs_location' is 'outputs/marketing_presentation.ppt'."
      }
    ]
  },
  "query_447_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "upcoming sci-fi movies"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'upcoming sci-fi movies'."
      }
    ]
  },
  "query_7_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Miami"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Miami'."
      }
    ]
  },
  "query_470_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_377_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "AMZN"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'AMZN'."
      }
    ]
  },
  "query_221_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "science experiment"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'science experiment'."
      }
    ]
  },
  "query_471_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "efZZXguoqq8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'efZZXguoqq8J'."
      }
    ]
  },
  "query_17_2_9": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 2493
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '2493'."
      }
    ]
  },
  "query_127_1_11": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_241_2_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_41_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "current political situation in the country"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'current political situation in the country'."
      }
    ]
  },
  "query_358_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Beijing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Beijing'."
      }
    ]
  },
  "query_443_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Chinese cinema"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Chinese cinema'."
      }
    ]
  },
  "query_54_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "event_weather.txt",
        "text": ""
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'event_weather.txt', 'text' is ''."
      }
    ]
  },
  "query_477_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_314_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Griffith Park",
        "end": "Santa Monica Pier"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Griffith Park', 'end' is 'Santa Monica Pier'."
      }
    ]
  },
  "query_352_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "The Matrix"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'The Matrix'."
      }
    ]
  },
  "query_127_1_9": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 51619634,
        "checkIn": "2023-10-25",
        "checkOut": "2023-10-27"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '51619634', 'checkIn' is '2023-10-25', 'checkOut' is '2023-10-27'."
      }
    ]
  },
  "query_169_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Property Details",
        "bullet_items": "Property Type: Private room in bed and breakfast\nCapacity: 1 person\nRating: 4.71\nLatitude: 40.74972075408687\nLongitude: -73.99472394752505"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Property Details', 'bullet_items' is 'Property Type: Private room in bed and breakfast\nCapacity: 1 person\nRating: 4.71\nLatitude: 40.74972075408687\nLongitude: -73.99472394752505'."
      }
    ]
  },
  "query_162_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "efZZXguoqq8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'efZZXguoqq8J'."
      }
    ]
  },
  "query_221_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Introduction to Science",
        "bullet_items": "Science is the systematic study of the natural world through observation and experimentation."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Introduction to Science', 'bullet_items' is 'Science is the systematic study of the natural world through observation and experimentation.'."
      }
    ]
  },
  "query_2_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 941597372112246343
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '941597372112246343'."
      }
    ]
  },
  "query_248_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "current location"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'current location'."
      }
    ]
  },
  "query_8_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 20654271
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '20654271'."
      }
    ]
  },
  "query_76_1_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "What are the causes of climate change?"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'What are the causes of climate change?'."
      }
    ]
  },
  "query_365_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "-jKcSxGaARwJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is '-jKcSxGaARwJ'."
      }
    ]
  },
  "query_290_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_363_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "thompson@example.com",
        "title": "Request for Meeting",
        "body": "Dear Mr. Thompson,\n\nI hope this email finds you well. I am writing on behalf of our company to request a meeting with you to discuss potential collaborations.\n\nOur company specializes in providing innovative sales solutions to businesses. We have successfully assisted numerous companies in achieving their sales goals through our effective strategies and techniques.\n\nThe purpose of this meeting is to explore how we can collaborate and leverage our expertise to drive sales growth for both our organizations. We believe that a partnership between our companies would be mutually beneficial and lead to significant business opportunities.\n\nWe would appreciate the opportunity to meet with you at your convenience. Please let us know a suitable date and time for the meeting, and we will gladly accommodate your schedule.\n\nThank you for considering our request. We look forward to the possibility of working together.\n\nBest regards,\n[Your Name]\n[Your Company]\n",
        "attachment": null
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'thompson@example.com', 'title' is 'Request for Meeting', 'body' is 'Dear Mr. Thompson,\n\nI hope this email finds you well. I am writing on behalf of our company to request a meeting with you to discuss potential collaborations.\n\nOur company specializes in providing innovative sales solutions to businesses. We have successfully assisted numerous companies in achieving their sales goals through our effective strategies and techniques.\n\nThe purpose of this meeting is to explore how we can collaborate and leverage our expertise to drive sales growth for both our organizations. We believe that a partnership between our companies would be mutually beneficial and lead to significant business opportunities.\n\nWe would appreciate the opportunity to meet with you at your convenience. Please let us know a suitable date and time for the meeting, and we will gladly accommodate your schedule.\n\nThank you for considering our request. We look forward to the possibility of working together.\n\nBest regards,\n[Your Name]\n[Your Company]\n', 'attachment' is 'None'."
      }
    ]
  },
  "query_285_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "500 Ocean Avenue"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is '500 Ocean Avenue'."
      }
    ]
  },
  "query_247_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "data analysis images"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'data analysis images'."
      }
    ]
  },
  "query_191_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "1600 Pennsylvania Avenue NW, Washington, DC 20500",
        "end": "1747 Pennsylvania Ave NW Ste 400, Washington, D.C., 20006"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '1600 Pennsylvania Avenue NW, Washington, DC 20500', 'end' is '1747 Pennsylvania Ave NW Ste 400, Washington, D.C., 20006'."
      }
    ]
  },
  "query_262_2_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_443_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_66_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_79_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "AI in Healthcare",
        "abs_location": "outputs/AI_in_Healthcare.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'AI in Healthcare', 'abs_location' is 'outputs/AI_in_Healthcare.ppt'."
      }
    ]
  },
  "query_19_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_462_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 299054
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '299054'."
      }
    ]
  },
  "query_203_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "sustainable tourism"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'sustainable tourism'."
      }
    ]
  },
  "query_148_1_11": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "popular tourist attractions in New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'popular tourist attractions in New York City'."
      }
    ]
  },
  "query_314_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "Seminyak Beach information"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'Seminyak Beach information'."
      }
    ]
  },
  "query_137_1_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_10_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 54239108
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '54239108'."
      }
    ]
  },
  "query_162_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_453_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "18:00",
        "end_time": "22:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '18:00', 'end_time' is '22:00'."
      }
    ]
  },
  "query_352_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 272
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '272'."
      }
    ]
  },
  "query_10_0_8": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 763553497595081889,
        "date": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '763553497595081889', 'date' is '2023-10-19'."
      }
    ]
  },
  "query_446_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "你好，李焕英"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is '你好，李焕英'."
      }
    ]
  },
  "query_248_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "current",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'current', 'days' is '3'."
      }
    ]
  },
  "query_191_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_477_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_133_0_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 51113056,
        "date": "2023-10-20"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '51113056', 'date' is '2023-10-20'."
      }
    ]
  },
  "query_240_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_470_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_35_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "10 Downing Street, London"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is '10 Downing Street, London'."
      }
    ]
  },
  "query_133_0_10": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 51113056,
        "date": "2023-10-21"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '51113056', 'date' is '2023-10-21'."
      }
    ]
  },
  "query_53_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "About our Company",
        "bullet_items": "红猪, 惊奇队长2, 河边的错误"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'About our Company', 'bullet_items' is '红猪, 惊奇队长2, 河边的错误'."
      }
    ]
  },
  "query_10_1_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 585382126083893704
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '585382126083893704'."
      }
    ]
  },
  "query_237_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Tiananmen Square, Beijing, China"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Tiananmen Square, Beijing, China'."
      }
    ]
  },
  "query_139_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_419_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "102",
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_104_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 10803849
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '10803849'."
      }
    ]
  },
  "query_17_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_10_1_11": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 585382126083893704,
        "checkIn": "2023-10-18",
        "checkOut": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '585382126083893704', 'checkIn' is '2023-10-18', 'checkOut' is '2023-10-19'."
      }
    ]
  },
  "query_215_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 858711
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '858711'."
      }
    ]
  },
  "query_27_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "疯狂元素城"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '疯狂元素城'."
      }
    ]
  },
  "query_98_1_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 38533722
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '38533722'."
      }
    ]
  },
  "query_187_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_231_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "film analysis"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'film analysis'."
      }
    ]
  },
  "query_395_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_88_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "World War II"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'World War II'."
      }
    ]
  },
  "query_212_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_85_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "20:53",
        "end_time": "22:53"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '20:53', 'end_time' is '22:53'."
      }
    ]
  },
  "query_107_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 278
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '278'."
      }
    ]
  },
  "query_453_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "寄生虫"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '寄生虫'."
      }
    ]
  },
  "query_456_1_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Movie Extravaganza",
        "bullet_items": "Image: [SPAN]outputs/1697986446.9011912.jpg",
        "image": "outputs/1697986446.9011912.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Movie Extravaganza', 'bullet_items' is 'Image: [SPAN]outputs/1697986446.9011912.jpg', 'image' is 'outputs/1697986446.9011912.jpg'."
      }
    ]
  },
  "query_64_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_54_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'New York City'."
      }
    ]
  },
  "query_68_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Marvel",
        "abs_location": "outputs/Avengers_Presentation.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Marvel', 'abs_location' is 'outputs/Avengers_Presentation.pptx'."
      }
    ]
  },
  "query_270_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "school",
        "latitude": 43.3945347,
        "longitude": -87.89811154,
        "radius": 2000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'school', 'latitude' is '43.3945347', 'longitude' is '-87.89811154', 'radius' is '2000'."
      }
    ]
  },
  "query_402_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Introduction",
        "bullet_items": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.[SPAN]Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Introduction', 'bullet_items' is 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.[SPAN]Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'."
      }
    ]
  },
  "query_431_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "Dune"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is 'Dune'."
      }
    ]
  },
  "query_266_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "conference venue in Chicago",
        "end": "closest train station"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'conference venue in Chicago', 'end' is 'closest train station'."
      }
    ]
  },
  "query_453_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": 102,
        "start_time": "18:00",
        "end_time": "22:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '18:00', 'end_time' is '22:00'."
      }
    ]
  },
  "query_41_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "editor@example.com",
        "title": "Breaking News Story",
        "body": "Dear Editor, I have come across a breaking news story that I believe would be of great interest to our readers. Please let me know if you would like more information. Thank you, Jane Doe."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'editor@example.com', 'title' is 'Breaking News Story', 'body' is 'Dear Editor, I have come across a breaking news story that I believe would be of great interest to our readers. Please let me know if you would like more information. Thank you, Jane Doe.'."
      }
    ]
  },
  "query_313_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "catering food"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'catering food'."
      }
    ]
  },
  "query_97_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York'."
      }
    ]
  },
  "query_64_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Artificial Intelligence in Robotics"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Artificial Intelligence in Robotics'."
      }
    ]
  },
  "query_163_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Copenhagen"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Copenhagen'."
      }
    ]
  },
  "query_453_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": 101,
        "start_time": "19:00",
        "end_time": "22:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '101', 'start_time' is '19:00', 'end_time' is '22:00'."
      }
    ]
  },
  "query_443_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_217_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_306_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "gas station",
        "places": "New York City",
        "latitude": 40.71304703,
        "longitude": -74.00723267,
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'gas station', 'places' is 'New York City', 'latitude' is '40.71304703', 'longitude' is '-74.00723267', 'radius' is '5000'."
      }
    ]
  },
  "query_77_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "JaFl1IoAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'JaFl1IoAAAAJ'."
      }
    ]
  },
  "query_98_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning algorithms"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning algorithms'."
      }
    ]
  },
  "query_91_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "tourist attractions New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'tourist attractions New York City'."
      }
    ]
  },
  "query_8_1_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 909363587647904523
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '909363587647904523'."
      }
    ]
  },
  "query_34_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "park",
        "latitude": 41.8832283,
        "longitude": -87.63240051,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'park', 'latitude' is '41.8832283', 'longitude' is '-87.63240051', 'radius' is '1000'."
      }
    ]
  },
  "query_446_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "惊奇队长2"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '惊奇队长2'."
      }
    ]
  },
  "query_239_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning algorithms"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning algorithms'."
      }
    ]
  },
  "query_406_1_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Intergovernmental Panel on Climate Change"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Intergovernmental Panel on Climate Change'."
      }
    ]
  },
  "query_431_2_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Rating",
        "bullet_items": "8.365"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Rating', 'bullet_items' is '8.365'."
      }
    ]
  },
  "query_164_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 4464347
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '4464347'."
      }
    ]
  },
  "query_1_2_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "gym",
        "places": "Torrance, CA, United States",
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'gym', 'places' is 'Torrance, CA, United States', 'radius' is '500'."
      }
    ]
  },
  "query_231_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_256_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_447_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_191_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_182_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "customer behavior"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'customer behavior'."
      }
    ]
  },
  "query_309_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "selJwfIN0t8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'selJwfIN0t8J'."
      }
    ]
  },
  "query_312_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurants",
        "places": "New York City",
        "latitude": 40.7128,
        "longitude": -74.006,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurants', 'places' is 'New York City', 'latitude' is '40.7128', 'longitude' is '-74.006', 'radius' is '1000'."
      }
    ]
  },
  "query_53_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Introduction",
        "bullet_items": "To make a sample Conference paper,[SPAN]copy the contents of this directory,[SPAN]somewhere"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Introduction', 'bullet_items' is 'To make a sample Conference paper,[SPAN]copy the contents of this directory,[SPAN]somewhere'."
      }
    ]
  },
  "query_248_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "quantum physics details"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'quantum physics details'."
      }
    ]
  },
  "query_134_0_10": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/ParisTrip.ppt",
        "text": "To make a sample Conference paper, copy the contents of this directory\nsomewhere, and type\n latex egpaper_final\nor \n pdflatex egpaper_final\n\nTo make a copy with the review style for anonymous review, and\nincluding line numbers, replace 'egpaper_final' with\n'egpaper_for_review' in the commands above.\n\nNote that in some environments, it may be necessary to run bibtex explicitly (bibtex egpaper_final)."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/ParisTrip.ppt', 'text' is 'To make a sample Conference paper, copy the contents of this directory\nsomewhere, and type\n latex egpaper_final\nor \n pdflatex egpaper_final\n\nTo make a copy with the review style for anonymous review, and\nincluding line numbers, replace 'egpaper_final' with\n'egpaper_for_review' in the commands above.\n\nNote that in some environments, it may be necessary to run bibtex explicitly (bibtex egpaper_final).'."
      }
    ]
  },
  "query_116_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 28722771
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '28722771'."
      }
    ]
  },
  "query_310_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "article_id"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'article_id'."
      }
    ]
  },
  "query_406_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": 102,
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_9_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 941597372112246343
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '941597372112246343'."
      }
    ]
  },
  "query_242_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "hjmWmdXL6nEJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'hjmWmdXL6nEJ'."
      }
    ]
  },
  "query_21_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "09:00",
        "end_time": "17:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '09:00', 'end_time' is '17:00'."
      }
    ]
  },
  "query_335_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_10_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 1001125627615934457
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '1001125627615934457'."
      }
    ]
  },
  "query_267_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_454_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "15:00",
        "end_time": "18:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '15:00', 'end_time' is '18:00'."
      }
    ]
  },
  "query_360_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_67_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_406_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "selJwfIN0t8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'selJwfIN0t8J'."
      }
    ]
  },
  "query_103_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 24533837
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '24533837'."
      }
    ]
  },
  "query_453_0_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Movie Recommendations",
        "abs_location": "outputs/movie_recommendations.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Movie Recommendations', 'abs_location' is 'outputs/movie_recommendations.pptx'."
      }
    ]
  },
  "query_335_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "AAPL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'AAPL'."
      }
    ]
  },
  "query_285_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "supermarket",
        "latitude": 40.703573,
        "longitude": -74.080326,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'supermarket', 'latitude' is '40.703573', 'longitude' is '-74.080326', 'radius' is '1000'."
      }
    ]
  },
  "query_453_0_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Dune",
        "bullet_items": "Genre: Science Fiction\nDirector: Denis Villeneuve\nStarring: Timothée Chalamet, Rebecca Ferguson, Zendaya\n\nDescription: 'Dune' is an epic science fiction film based on the novel of the same name by Frank Herbert. Set in a distant future, the story follows Paul Atreides, a young nobleman who becomes involved in a battle for control over the desert planet Arrakis.",
        "image": "outputs/1697981900.489096.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Dune', 'bullet_items' is 'Genre: Science Fiction\nDirector: Denis Villeneuve\nStarring: Timothée Chalamet, Rebecca Ferguson, Zendaya\n\nDescription: 'Dune' is an epic science fiction film based on the novel of the same name by Frank Herbert. Set in a distant future, the story follows Paul Atreides, a young nobleman who becomes involved in a battle for control over the desert planet Arrakis.', 'image' is 'outputs/1697981900.489096.jpg'."
      }
    ]
  },
  "query_336_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 10997
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '10997'."
      }
    ]
  },
  "query_191_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "1600 Pennsylvania Avenue NW, Washington, DC 20500",
        "end": "1325 G St NW, Washington, Dc, 20005-3127"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '1600 Pennsylvania Avenue NW, Washington, DC 20500', 'end' is '1325 G St NW, Washington, Dc, 20005-3127'."
      }
    ]
  },
  "query_402_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Section 1",
        "bullet_items": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.[SPAN]Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
        "image": "outputs/1697982636.6178656.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Section 1', 'bullet_items' is 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.[SPAN]Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'image' is 'outputs/1697982636.6178656.jpg'."
      }
    ]
  },
  "query_8_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 33884250
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '33884250'."
      }
    ]
  },
  "query_448_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "红猪 电影简介"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is '红猪 电影简介'."
      }
    ]
  },
  "query_190_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "well-liked restaurants",
        "places": "Eiffel Tower",
        "latitude": 48.8584,
        "longitude": 2.2945,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'well-liked restaurants', 'places' is 'Eiffel Tower', 'latitude' is '48.8584', 'longitude' is '2.2945', 'radius' is '1000'."
      }
    ]
  },
  "query_181_1_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_daliy_open_close",
      "args": {
        "ticker": "ABNB",
        "date": "2023-10-17"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_daliy_open_close', 'description': 'get the open, close and afterhours prices of a stock symbol on a certain date', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'date', 'type': 'STRING', 'description': 'The date of the requested open/close in the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'close', 'description': ''}, {'name': 'open', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_daliy_open_close with the parameter as follows: 'ticker' is 'ABNB', 'date' is '2023-10-17'."
      }
    ]
  },
  "query_77_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": 102,
        "start_time": "13:00",
        "end_time": "14:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '13:00', 'end_time' is '14:00'."
      }
    ]
  },
  "query_181_0_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "ABNB"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'ABNB'."
      }
    ]
  },
  "query_255_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "Data Science"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'Data Science'."
      }
    ]
  },
  "query_5_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 941597372112246343,
        "checkIn": "2023-11-15",
        "checkOut": "2023-11-20"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '941597372112246343', 'checkIn' is '2023-11-15', 'checkOut' is '2023-11-20'."
      }
    ]
  },
  "query_321_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "camping",
        "latitude": 37.84857941,
        "longitude": -119.55725861,
        "radius": 10000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'camping', 'latitude' is '37.84857941', 'longitude' is '-119.55725861', 'radius' is '10000'."
      }
    ]
  },
  "query_350_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "The Matrix"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'The Matrix'."
      }
    ]
  },
  "query_191_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Marriott Marquis Washington, DC"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Marriott Marquis Washington, DC'."
      }
    ]
  },
  "query_136_2_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 10803849,
        "checkIn": "2023-11-20",
        "checkOut": "2023-11-27"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '10803849', 'checkIn' is '2023-11-20', 'checkOut' is '2023-11-27'."
      }
    ]
  },
  "query_372_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Product Features",
        "bullet_items": "Feature 1[SPAN]Feature 2[SPAN]Feature 3[SPAN]Feature 4"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Product Features', 'bullet_items' is 'Feature 1[SPAN]Feature 2[SPAN]Feature 3[SPAN]Feature 4'."
      }
    ]
  },
  "query_322_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_350_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "clients@example.com",
        "title": "New Product Launch",
        "body": "Dear clients, we are excited to announce the launch of our new product! Please check the attached presentation for more details.",
        "attachment": "outputs/new_product.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'clients@example.com', 'title' is 'New Product Launch', 'body' is 'Dear clients, we are excited to announce the launch of our new product! Please check the attached presentation for more details.', 'attachment' is 'outputs/new_product.pptx'."
      }
    ]
  },
  "query_77_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "09:00",
        "end_time": "11:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '09:00', 'end_time' is '11:00'."
      }
    ]
  },
  "query_54_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "New York City",
        "days": 2
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'New York City', 'days' is '2'."
      }
    ]
  },
  "query_220_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_428_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_406_1_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "c9VqhF0AAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'c9VqhF0AAAAJ'."
      }
    ]
  },
  "query_5_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'San Francisco'."
      }
    ]
  },
  "query_299_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "40.757972, -73.985536",
        "end": "151 W 46th St, New York, NY, 10036"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '40.757972, -73.985536', 'end' is '151 W 46th St, New York, NY, 10036'."
      }
    ]
  },
  "query_164_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "conference planning and organization"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'conference planning and organization'."
      }
    ]
  },
  "query_55_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_111_2_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "San Francisco, CA, United States"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'San Francisco, CA, United States'."
      }
    ]
  },
  "query_248_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "recent publications on quantum physics"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'recent publications on quantum physics'."
      }
    ]
  },
  "query_238_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "39.908722,116.397496",
        "keywords": "restaurant"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '39.908722,116.397496', 'keywords' is 'restaurant'."
      }
    ]
  },
  "query_225_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_428_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 566525
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '566525'."
      }
    ]
  },
  "query_1_2_9": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "gym",
        "places": "Culver City, CA, United States",
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'gym', 'places' is 'Culver City, CA, United States', 'radius' is '500'."
      }
    ]
  },
  "query_217_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Elad Hazan"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Elad Hazan'."
      }
    ]
  },
  "query_309_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "789 Oak Street, Anytown",
        "end": "456 Elm Street, Anytown"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '789 Oak Street, Anytown', 'end' is '456 Elm Street, Anytown'."
      }
    ]
  },
  "query_431_2_9": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "Inception movie review"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'Inception movie review'."
      }
    ]
  },
  "query_453_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Film Review",
        "abs_location": "outputs/film_review.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Film Review', 'abs_location' is 'outputs/film_review.pptx'."
      }
    ]
  },
  "query_402_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Section 2",
        "bullet_items": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.[SPAN]Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Section 2', 'bullet_items' is 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.[SPAN]Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'."
      }
    ]
  },
  "query_484_1_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_449_1_17": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "一闪一闪亮星星",
        "bullet_items": "爱情 / 奇幻",
        "image": "outputs/1697985306.1349483.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is '一闪一闪亮星星', 'bullet_items' is '爱情 / 奇幻', 'image' is 'outputs/1697985306.1349483.jpg'."
      }
    ]
  },
  "query_457_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Chengdu"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Chengdu'."
      }
    ]
  },
  "query_275_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "221B Baker Street, London",
        "end": "10 Downing Street, London"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '221B Baker Street, London', 'end' is '10 Downing Street, London'."
      }
    ]
  },
  "query_9_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_168_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Bali"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Bali'."
      }
    ]
  },
  "query_105_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 663272282290556235
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '663272282290556235'."
      }
    ]
  },
  "query_176_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 598488193327054398
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '598488193327054398'."
      }
    ]
  },
  "query_42_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "09:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '09:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_261_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "foodblogger@email.com",
        "title": "Upcoming Movie Details",
        "body": "Please find the details of the upcoming movie '疯狂元素城' in China attached to this email.",
        "attachment": "疯狂元素城_details.pdf"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'foodblogger@email.com', 'title' is 'Upcoming Movie Details', 'body' is 'Please find the details of the upcoming movie '疯狂元素城' in China attached to this email.', 'attachment' is '疯狂元素城_details.pdf'."
      }
    ]
  },
  "query_162_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "17:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '17:00'."
      }
    ]
  },
  "query_79_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "John Smith"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'John Smith'."
      }
    ]
  },
  "query_262_2_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 678512
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '678512'."
      }
    ]
  },
  "query_137_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 38268855
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '38268855'."
      }
    ]
  },
  "query_208_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Doe"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Doe'."
      }
    ]
  },
  "query_468_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Apple Inc."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Apple Inc.'."
      }
    ]
  },
  "query_247_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Introduction",
        "bullet_items": "Deep learning is a subfield of machine learning that focuses on learning representations of data through multiple layers of neural networks."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Introduction', 'bullet_items' is 'Deep learning is a subfield of machine learning that focuses on learning representations of data through multiple layers of neural networks.'."
      }
    ]
  },
  "query_194_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/movies.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/movies.txt'."
      }
    ]
  },
  "query_283_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "economic effects of tourism"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'economic effects of tourism'."
      }
    ]
  },
  "query_417_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Event Details",
        "bullet_items": "Event Name: Annual Conference [SPAN] Date: October 18, 2023 [SPAN] Time: 14:00 - 18:00 [SPAN] Location: Room 103"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Event Details', 'bullet_items' is 'Event Name: Annual Conference [SPAN] Date: October 18, 2023 [SPAN] Time: 14:00 - 18:00 [SPAN] Location: Room 103'."
      }
    ]
  },
  "query_452_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": 101,
        "start_time": "20:23",
        "end_time": "23:23"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '101', 'start_time' is '20:23', 'end_time' is '23:23'."
      }
    ]
  },
  "query_17_2_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 2501
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '2501'."
      }
    ]
  },
  "query_1_2_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "gym",
        "places": "Huntington Beach, CA, United States",
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'gym', 'places' is 'Huntington Beach, CA, United States', 'radius' is '500'."
      }
    ]
  },
  "query_203_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'New York City'."
      }
    ]
  },
  "query_34_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "hotel",
        "places": "New York",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'hotel', 'places' is 'New York', 'radius' is '5000'."
      }
    ]
  },
  "query_225_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 299054
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '299054'."
      }
    ]
  },
  "query_314_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'New York City'."
      }
    ]
  },
  "query_417_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Research Presentation",
        "bullet_items": "Research notes"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Research Presentation', 'bullet_items' is 'Research notes'."
      }
    ]
  },
  "query_225_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_474_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "The Godfather"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'The Godfather'."
      }
    ]
  },
  "query_289_0_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_201_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_76_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "ZT7oIWwAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'ZT7oIWwAAAAJ'."
      }
    ]
  },
  "query_164_2_10": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Logistics",
        "bullet_items": "1. Venue and Date\n2. Accommodation\n3. Transportation\n4. Registration Process\n5. AV Equipment"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Logistics', 'bullet_items' is '1. Venue and Date\n2. Accommodation\n3. Transportation\n4. Registration Process\n5. AV Equipment'."
      }
    ]
  },
  "query_35_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "10 Downing Street, London"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is '10 Downing Street, London'."
      }
    ]
  },
  "query_185_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 272
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '272'."
      }
    ]
  },
  "query_224_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.get_distance",
      "args": {
        "origins": "39.9042,116.4074",
        "destination": "31.2304,121.4737"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'origins', 'type': 'STRING', 'description': \"coordinate of the start location, format with 'lon,lat'\"}, {'name': 'destination', 'type': 'STRING', 'description': \"coordinate of the end location, format with 'lon,lat'\"}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in KM'}, {'name': 'duration', 'description': 'expected time in minutes'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_distance with the parameter as follows: 'origins' is '39.9042,116.4074', 'destination' is '31.2304,121.4737'."
      }
    ]
  },
  "query_70_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.get_coordinate",
      "args": {
        "address": "北京"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_coordinate', 'description': 'Get the coordinate of a location. Param must be in Chinese', 'required_parameters': [{'name': 'address', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [{'name': 'city', 'type': 'STRING', 'description': 'specify the city to search'}], 'return_data': [{'name': 'coordinate', 'description': 'coordinate of the location, format with (lon, lat)'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_coordinate with the parameter as follows: 'address' is '北京'."
      }
    ]
  },
  "query_67_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 155
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '155'."
      }
    ]
  },
  "query_485_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "vacation destination",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'vacation destination', 'days' is '3'."
      }
    ]
  },
  "query_368_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Key Messages",
        "bullet_items": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.[SPAN]Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.[SPAN]Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Key Messages', 'bullet_items' is 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.[SPAN]Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.[SPAN]Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'."
      }
    ]
  },
  "query_78_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Change, Intergovernmental Panel On Climate"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Change, Intergovernmental Panel On Climate'."
      }
    ]
  },
  "query_116_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/paper_readme.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/paper_readme.txt'."
      }
    ]
  },
  "query_111_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 972494279345285252
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '972494279345285252'."
      }
    ]
  },
  "query_34_1_11": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Nearby Grocery Stores",
        "bullet_items": "- Whole Foods Market\n- Trader Joe's\n- Mariano's\n- Bockwinkel's"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Nearby Grocery Stores', 'bullet_items' is '- Whole Foods Market\n- Trader Joe's\n- Mariano's\n- Bockwinkel's'."
      }
    ]
  },
  "query_85_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_162_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "9zb7YrEAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '9zb7YrEAAAAJ'."
      }
    ]
  },
  "query_475_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_11_1_11": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Property 1: Boutique hotel in Barcelona",
        "bullet_items": "Property Type: Room in boutique hotel\nCapacity: 2 persons\nRating: 4.83\nLatitude: 41.384632\nLongitude: 2.177421",
        "image": "outputs/1697601645.1157258.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Property 1: Boutique hotel in Barcelona', 'bullet_items' is 'Property Type: Room in boutique hotel\nCapacity: 2 persons\nRating: 4.83\nLatitude: 41.384632\nLongitude: 2.177421', 'image' is 'outputs/1697601645.1157258.jpg'."
      }
    ]
  },
  "query_24_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "San Francisco, CA"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'San Francisco, CA'."
      }
    ]
  },
  "query_78_0_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_267_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_82_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "breakfast recipes"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'breakfast recipes'."
      }
    ]
  },
  "query_238_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "travel destinations"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'travel destinations'."
      }
    ]
  },
  "query_44_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Product Presentation",
        "bullet_items": "Unique features and advantages of our new line of organic products",
        "image": "outputs/1697609564.6319964.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Product Presentation', 'bullet_items' is 'Unique features and advantages of our new line of organic products', 'image' is 'outputs/1697609564.6319964.jpg'."
      }
    ]
  },
  "query_13_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "research institutions",
        "places": "Stanford University",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'research institutions', 'places' is 'Stanford University', 'radius' is '5000'."
      }
    ]
  },
  "query_98_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 44400573
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '44400573'."
      }
    ]
  },
  "query_457_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_64_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Doe"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Doe'."
      }
    ]
  },
  "query_220_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "红猪"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '红猪'."
      }
    ]
  },
  "query_121_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 53132475
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '53132475'."
      }
    ]
  },
  "query_44_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_358_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "123.456,789.012",
        "keywords": "restaurant"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '123.456,789.012', 'keywords' is 'restaurant'."
      }
    ]
  },
  "query_15_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "neural networks"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'neural networks'."
      }
    ]
  },
  "query_199_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_111_2_12": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_219_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_228_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_450_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_85_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": 102,
        "start_time": "20:54",
        "end_time": "23:59"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '20:54', 'end_time' is '23:59'."
      }
    ]
  },
  "query_79_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Application of Artificial Intelligence in Healthcare",
        "bullet_items": "Manne, Ravi, and Sneha C. Kantheti. \"Application of artificial intelligence in healthcare: chances and challenges.\" Current Journal of Applied Science and Technology 40.6 (2021): 78-89."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Application of Artificial Intelligence in Healthcare', 'bullet_items' is 'Manne, Ravi, and Sneha C. Kantheti. \"Application of artificial intelligence in healthcare: chances and challenges.\" Current Journal of Applied Science and Technology 40.6 (2021): 78-89.'."
      }
    ]
  },
  "query_347_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "editor@example.com",
        "title": "Breaking News",
        "body": "I have an important news story to share"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'editor@example.com', 'title' is 'Breaking News', 'body' is 'I have an important news story to share'."
      }
    ]
  },
  "query_450_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "大明风华"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '大明风华'."
      }
    ]
  },
  "query_133_0_12": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 984458557997768943,
        "date": "2023-10-21"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '984458557997768943', 'date' is '2023-10-21'."
      }
    ]
  },
  "query_142_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_347_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_272_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_478_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_94_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_198_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_457_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_242_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "climate change"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'climate change'."
      }
    ]
  },
  "query_395_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/Inception.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/Inception.pptx'."
      }
    ]
  },
  "query_268_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "recipient@example.com",
        "title": "Package Delivery Details",
        "body": "Dear recipient,\n\nI am writing to inform you that your package will be delivered from Los Angeles to San Francisco. The estimated distance for the delivery is approximately 614.771 km. The route for the delivery is as follows:\n\n- Head northeast on N Main St toward W Temple St\n- Turn left onto W Arcadia St\n- Turn right onto N Broadway toward Harbor Fwys / Hollywood / Pasadena\n- Take the ramp on the right for US-101 North and head toward Harbor Fwys / Hollywood / Pasadena\n- Keep straight, heading toward Sacramento\n- Keep straight to get onto I-5 N\n- Keep left, heading toward San Francisco / Tracy\n- Take the ramp on the left for I-580 W\n- At Exit 19A, head left on the ramp for I-80 West toward San Francisco\n- At Exit 1B, head right on the ramp for US-101 North toward Bridge / Golden Gate\n- At Exit 434A, head right on the ramp for US-101 North toward Duboce Ave / G G Br\n- Turn right onto US-101 N / Mission St toward G G Bridge / Van Ness Ave / Mission St / US-101 North\n- Arrive at San Francisco, CA\n\nPlease feel free to contact me if you have any further questions or concerns.\n\nBest regards,\n[Your Name]",
        "attachment": ""
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'recipient@example.com', 'title' is 'Package Delivery Details', 'body' is 'Dear recipient,\n\nI am writing to inform you that your package will be delivered from Los Angeles to San Francisco. The estimated distance for the delivery is approximately 614.771 km. The route for the delivery is as follows:\n\n- Head northeast on N Main St toward W Temple St\n- Turn left onto W Arcadia St\n- Turn right onto N Broadway toward Harbor Fwys / Hollywood / Pasadena\n- Take the ramp on the right for US-101 North and head toward Harbor Fwys / Hollywood / Pasadena\n- Keep straight, heading toward Sacramento\n- Keep straight to get onto I-5 N\n- Keep left, heading toward San Francisco / Tracy\n- Take the ramp on the left for I-580 W\n- At Exit 19A, head left on the ramp for I-80 West toward San Francisco\n- At Exit 1B, head right on the ramp for US-101 North toward Bridge / Golden Gate\n- At Exit 434A, head right on the ramp for US-101 North toward Duboce Ave / G G Br\n- Turn right onto US-101 N / Mission St toward G G Bridge / Van Ness Ave / Mission St / US-101 North\n- Arrive at San Francisco, CA\n\nPlease feel free to contact me if you have any further questions or concerns.\n\nBest regards,\n[Your Name]', 'attachment' is ''."
      }
    ]
  },
  "query_484_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_57_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "寄生虫"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '寄生虫'."
      }
    ]
  },
  "query_104_2_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 48347678
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '48347678'."
      }
    ]
  },
  "query_11_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 24533837,
        "date": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '24533837', 'date' is '2023-10-19'."
      }
    ]
  },
  "query_172_2_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 44783505
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '44783505'."
      }
    ]
  },
  "query_111_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 941597372112246343
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '941597372112246343'."
      }
    ]
  },
  "query_228_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_104_2_8": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Culver City, CA, United States"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Culver City, CA, United States'."
      }
    ]
  },
  "query_114_0_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurants",
        "places": "40.71806,-74.00095",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurants', 'places' is '40.71806,-74.00095', 'radius' is '1000'."
      }
    ]
  },
  "query_417_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/event_schedule.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/event_schedule.pptx'."
      }
    ]
  },
  "query_450_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Beijing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Beijing'."
      }
    ]
  },
  "query_453_0_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_79_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "hBd9oL9b6KYJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'hBd9oL9b6KYJ'."
      }
    ]
  },
  "query_1_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 997382
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '997382'."
      }
    ]
  },
  "query_121_1_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "average rental prices in different neighborhoods of New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'average rental prices in different neighborhoods of New York City'."
      }
    ]
  },
  "query_134_2_17": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/query_summary.txt",
        "text": "The presentation for the Miami properties has been successfully created and saved as 'outputs/MiamiProperties.ppt'."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/query_summary.txt', 'text' is 'The presentation for the Miami properties has been successfully created and saved as 'outputs/MiamiProperties.ppt'.'."
      }
    ]
  },
  "query_268_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Los Angeles",
        "end": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Los Angeles', 'end' is 'San Francisco'."
      }
    ]
  },
  "query_34_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "New York",
        "end": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'New York', 'end' is 'Los Angeles'."
      }
    ]
  },
  "query_38_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "friend@example.com",
        "title": "Movie Recommendation",
        "body": "Have you seen the movie 'Inception'? I highly recommend it! 'Inception' is a mind-bending science fiction film directed by Christopher Nolan. It follows the story of a professional thief who steals information by infiltrating the subconscious of his targets. The movie is known for its stunning visual effects and complex narrative. If you enjoyed 'Inception', you might also like these similar movies:\n\n1. Interstellar\n2. The Matrix\n3. Shutter Island\n4. Source Code\n\nI have attached the movie poster of 'Inception' for your reference. Let me know what you think and if you'd like to watch it together!"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'friend@example.com', 'title' is 'Movie Recommendation', 'body' is 'Have you seen the movie 'Inception'? I highly recommend it! 'Inception' is a mind-bending science fiction film directed by Christopher Nolan. It follows the story of a professional thief who steals information by infiltrating the subconscious of his targets. The movie is known for its stunning visual effects and complex narrative. If you enjoyed 'Inception', you might also like these similar movies:\n\n1. Interstellar\n2. The Matrix\n3. Shutter Island\n4. Source Code\n\nI have attached the movie poster of 'Inception' for your reference. Let me know what you think and if you'd like to watch it together!'."
      }
    ]
  },
  "query_477_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/movie_blog.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/movie_blog.ppt'."
      }
    ]
  },
  "query_92_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 667316357375615620
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '667316357375615620'."
      }
    ]
  },
  "query_310_2_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "ESRT"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'ESRT'."
      }
    ]
  },
  "query_381_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "复仇者联盟4：终局之战"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '复仇者联盟4：终局之战'."
      }
    ]
  },
  "query_40_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_261_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "疯狂元素城"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '疯狂元素城'."
      }
    ]
  },
  "query_443_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "organic_result_id"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'organic_result_id'."
      }
    ]
  },
  "query_289_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Golden Gate Bridge, San Francisco",
        "end": "Silicon Valley"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Golden Gate Bridge, San Francisco', 'end' is 'Silicon Valley'."
      }
    ]
  },
  "query_347_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_228_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_463_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 212778
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '212778'."
      }
    ]
  },
  "query_246_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "quantum computing news"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'quantum computing news'."
      }
    ]
  },
  "query_143_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York'."
      }
    ]
  },
  "query_218_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_152_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_58_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "'The Lost City' movie news"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is ''The Lost City' movie news'."
      }
    ]
  },
  "query_420_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Journal Entry",
        "bullet_items": "Had a productive morning,Finished writing a chapter,Brainstormed new book ideas"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Journal Entry', 'bullet_items' is 'Had a productive morning,Finished writing a chapter,Brainstormed new book ideas'."
      }
    ]
  },
  "query_36_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/draft.txt",
        "text": "To: professor@example.com\nSubject: Regarding Assignment Submission\n\nDear Professor,\n\nI would like to discuss the deadline extension for the assignment.\n\nBest regards,\nJohn"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/draft.txt', 'text' is 'To: professor@example.com\nSubject: Regarding Assignment Submission\n\nDear Professor,\n\nI would like to discuss the deadline extension for the assignment.\n\nBest regards,\nJohn'."
      }
    ]
  },
  "query_127_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York'."
      }
    ]
  },
  "query_121_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 941597372112246343
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '941597372112246343'."
      }
    ]
  },
  "query_178_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_331_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "department_head_2@example.com",
        "title": "Department Meeting",
        "body": "Dear Department Head 2,\n\nI would like to invite you to a department meeting to discuss important matters. The meeting will be held on [DATE] from 2:00 PM to 4:00 PM in meeting room B101. The agenda of the meeting will include:\n\n1. Review of recent department progress\n2. Discussion of upcoming projects\n3. Any other business\n\nPlease make sure to mark your calendars and come prepared.\n\nBest regards,\n[Your Name]",
        "attachment": ""
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'department_head_2@example.com', 'title' is 'Department Meeting', 'body' is 'Dear Department Head 2,\n\nI would like to invite you to a department meeting to discuss important matters. The meeting will be held on [DATE] from 2:00 PM to 4:00 PM in meeting room B101. The agenda of the meeting will include:\n\n1. Review of recent department progress\n2. Discussion of upcoming projects\n3. Any other business\n\nPlease make sure to mark your calendars and come prepared.\n\nBest regards,\n[Your Name]', 'attachment' is ''."
      }
    ]
  },
  "query_427_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "红猪"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '红猪'."
      }
    ]
  },
  "query_220_2_10": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "驯龙高手"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '驯龙高手'."
      }
    ]
  },
  "query_17_2_10": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 203801
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '203801'."
      }
    ]
  },
  "query_372_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "102",
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_395_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/joker_promotion.txt",
        "text": "Movie: Joker\n\nRelease Date: 2019-10-01\nRuntime: 122 minutes\n\nOverview: During the 1980s, a failed stand-up comedian is driven insane and turns to a life of crime and chaos in Gotham City while becoming an infamous psychopathic crime figure.\n\nRating: 8.166"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/joker_promotion.txt', 'text' is 'Movie: Joker\n\nRelease Date: 2019-10-01\nRuntime: 122 minutes\n\nOverview: During the 1980s, a failed stand-up comedian is driven insane and turns to a life of crime and chaos in Gotham City while becoming an infamous psychopathic crime figure.\n\nRating: 8.166'."
      }
    ]
  },
  "query_451_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "阿凡达"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '阿凡达'."
      }
    ]
  },
  "query_338_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_242_1_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_1_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 909363587647904523
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '909363587647904523'."
      }
    ]
  },
  "query_35_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "hotels",
        "places": "Times Square, New York City",
        "radius": 2000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'hotels', 'places' is 'Times Square, New York City', 'radius' is '2000'."
      }
    ]
  },
  "query_363_2_9": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_127_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 858697692672545141,
        "date": "2023-10-25"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '858697692672545141', 'date' is '2023-10-25'."
      }
    ]
  },
  "query_215_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_88_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Conference Agenda",
        "bullet_items": "9:00 AM - Registration and Networking[SPAN]10:00 AM - Keynote Speech[SPAN]11:30 AM - Break[SPAN]12:00 PM - Panel Discussion[SPAN]1:30 PM - Lunch Break[SPAN]2:30 PM - Workshop Sessions[SPAN]4:00 PM - Closing Remarks[SPAN]5:00 PM - Networking Reception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Conference Agenda', 'bullet_items' is '9:00 AM - Registration and Networking[SPAN]10:00 AM - Keynote Speech[SPAN]11:30 AM - Break[SPAN]12:00 PM - Panel Discussion[SPAN]1:30 PM - Lunch Break[SPAN]2:30 PM - Workshop Sessions[SPAN]4:00 PM - Closing Remarks[SPAN]5:00 PM - Networking Reception'."
      }
    ]
  },
  "query_218_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_449_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_140_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_77_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "role and impact of academic libraries in modern education"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'role and impact of academic libraries in modern education'."
      }
    ]
  },
  "query_342_1_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_349_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_462_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 575264
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '575264'."
      }
    ]
  },
  "query_292_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Spider-Man: No Way Home"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Spider-Man: No Way Home'."
      }
    ]
  },
  "query_254_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "computer vision"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'computer vision'."
      }
    ]
  },
  "query_199_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning algorithms"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning algorithms'."
      }
    ]
  },
  "query_80_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "9zb7YrEAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '9zb7YrEAAAAJ'."
      }
    ]
  },
  "query_103_1_8": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "economic impact of tourism"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'economic impact of tourism'."
      }
    ]
  },
  "query_313_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "catering",
        "places": "123 Main St, New York",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'catering', 'places' is '123 Main St, New York', 'radius' is '1000'."
      }
    ]
  },
  "query_305_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Central Park"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Central Park'."
      }
    ]
  },
  "query_10_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 941597372112246343
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '941597372112246343'."
      }
    ]
  },
  "query_407_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "N34ELelZkvEJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'N34ELelZkvEJ'."
      }
    ]
  },
  "query_477_0_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Shrek 2",
        "bullet_items": "[SPAN]Release Date: 2004-05-19[SPAN]Genres: Animation, Comedy, Family[SPAN]Vote Average: 7.3[SPAN]Popularity: 91.8",
        "image": "outputs/1697980478.4666133.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Shrek 2', 'bullet_items' is '[SPAN]Release Date: 2004-05-19[SPAN]Genres: Animation, Comedy, Family[SPAN]Vote Average: 7.3[SPAN]Popularity: 91.8', 'image' is 'outputs/1697980478.4666133.jpg'."
      }
    ]
  },
  "query_17_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_191_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "1600 Pennsylvania Avenue NW, Washington, DC 20500",
        "end": "1100 17th St NW Ste 650, Washington, DC, 20036"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '1600 Pennsylvania Avenue NW, Washington, DC 20500', 'end' is '1100 17th St NW Ste 650, Washington, DC, 20036'."
      }
    ]
  },
  "query_78_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "b8af6XDcmWoJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'b8af6XDcmWoJ'."
      }
    ]
  },
  "query_223_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_430_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_393_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "15:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '15:00'."
      }
    ]
  },
  "query_5_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 941597372112246343,
        "date": "2023-11-15"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '941597372112246343', 'date' is '2023-11-15'."
      }
    ]
  },
  "query_261_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "The Bund",
        "latitude": 31.23885536,
        "longitude": 121.48716736,
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'The Bund', 'latitude' is '31.23885536', 'longitude' is '121.48716736', 'radius' is '500'."
      }
    ]
  },
  "query_69_0_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 424
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '424'."
      }
    ]
  },
  "query_431_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/inception.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/inception.pptx'."
      }
    ]
  },
  "query_111_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51403713
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51403713'."
      }
    ]
  },
  "query_262_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_177_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 10803849
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '10803849'."
      }
    ]
  },
  "query_462_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 926393
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '926393'."
      }
    ]
  },
  "query_166_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Apple"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Apple'."
      }
    ]
  },
  "query_408_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/ai_literature_review.txt",
        "text": "Artificial Intelligence Literature Review\n\n1. Title: Artificial intelligence in medicine\n   Citation Count: 1603\n   Publishing Details: Hamet, Pavel, and Johanne Tremblay. \"Artificial intelligence in medicine.\" Metabolism 69 (2017): S36-S40.\n\n2. Title: Artificial intelligence in medicine.\n   Citation Count: 835\n   Publishing Details: Ramesh, A. N., et al. \"Artificial intelligence in medicine.\" Annals of the Royal College of Surgeons of England 86.5 (2004): 334.\n\n3. Title: Causability and explainability of artificial intelligence in medicine\n   Citation Count: 975\n   Publishing Details: Holzinger, Andreas, et al. \"Causability and explainability of artificial intelligence in medicine.\" Wiley Interdisciplinary Reviews: Data Mining and Knowledge Discovery 9.4 (2019): e1312."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/ai_literature_review.txt', 'text' is 'Artificial Intelligence Literature Review\n\n1. Title: Artificial intelligence in medicine\n   Citation Count: 1603\n   Publishing Details: Hamet, Pavel, and Johanne Tremblay. \"Artificial intelligence in medicine.\" Metabolism 69 (2017): S36-S40.\n\n2. Title: Artificial intelligence in medicine.\n   Citation Count: 835\n   Publishing Details: Ramesh, A. N., et al. \"Artificial intelligence in medicine.\" Annals of the Royal College of Surgeons of England 86.5 (2004): 334.\n\n3. Title: Causability and explainability of artificial intelligence in medicine\n   Citation Count: 975\n   Publishing Details: Holzinger, Andreas, et al. \"Causability and explainability of artificial intelligence in medicine.\" Wiley Interdisciplinary Reviews: Data Mining and Knowledge Discovery 9.4 (2019): e1312.'."
      }
    ]
  },
  "query_17_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_61_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/current_releases.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/current_releases.pptx'."
      }
    ]
  },
  "query_335_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.aggregate_stock_with_time",
      "args": {
        "ticker": "AAPL",
        "multiplier": 1,
        "timespan": "hour",
        "from": "2023-10-01",
        "to": "2023-10-15"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.aggregate_stock_with_time', 'description': 'get aggregate bars for a stock over a given date range in custom time window sizes', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The ticker symbol of the stock/equity'}, {'name': 'multiplier', 'type': 'NUMBER', 'description': 'The size of the timespan multiplier'}, {'name': 'timespan', 'type': 'STRING', 'description': \"The size of the time window, supported 'day', 'hour', 'week'\"}, {'name': 'from', 'type': 'STRING', 'description': 'The start of the aggregate time window with the format YYYY-MM-DD'}, {'name': 'to', 'type': 'STRING', 'description': 'The end of the aggregate time window with the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list of dict including the open and closed price in the given time period and the unix msec timestamp for the start of the aggregate window'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.aggregate_stock_with_time with the parameter as follows: 'ticker' is 'AAPL', 'multiplier' is '1', 'timespan' is 'hour', 'from' is '2023-10-01', 'to' is '2023-10-15'."
      }
    ]
  },
  "query_221_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "珍·古道尔的传奇一生",
        "bullet_items": "Category: 纪录片、传记电影\nRegion: 美国\nNumber of Interested Viewers: 9.2\nSynopsis: 珍·古道尔的传奇一生是一部美国的纪录片、传记电影，由布莱特·摩根导演，简·古道尔、雨果·凡·拉维克、雨果·埃里克·路易斯·凡·拉维克等人主演。剧情简介：影片主角是在世界上拥有极高声誉的动物学家珍·古道尔，她二十多岁时前往非洲的原始森林，为了观察黑猩猩，在那里度过了三十八年的野外生涯，后来常年奔走于世界各地，呼吁人们保护野生动物、保护地球环境。 导演布莱特·摩根尤其擅长人物刻画，他从100多个小时从未公布过的珍·古道尔在野外考察和访谈的影像资料中选材剪辑，以第一人称视角，讲述了珍·古道尔年轻时在非洲研究黑猩猩的故事。伴随菲利普·格拉斯的迷人配乐，让观众感受到在那个仍由男性主导野外科研的年代，一个女人如何通过激情、奉献和毅力改变世界。影片还把人类的命运与动物交织在一起，大大强化了人与自然的关系。",
        "image": "image_path_1"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is '珍·古道尔的传奇一生', 'bullet_items' is 'Category: 纪录片、传记电影\nRegion: 美国\nNumber of Interested Viewers: 9.2\nSynopsis: 珍·古道尔的传奇一生是一部美国的纪录片、传记电影，由布莱特·摩根导演，简·古道尔、雨果·凡·拉维克、雨果·埃里克·路易斯·凡·拉维克等人主演。剧情简介：影片主角是在世界上拥有极高声誉的动物学家珍·古道尔，她二十多岁时前往非洲的原始森林，为了观察黑猩猩，在那里度过了三十八年的野外生涯，后来常年奔走于世界各地，呼吁人们保护野生动物、保护地球环境。 导演布莱特·摩根尤其擅长人物刻画，他从100多个小时从未公布过的珍·古道尔在野外考察和访谈的影像资料中选材剪辑，以第一人称视角，讲述了珍·古道尔年轻时在非洲研究黑猩猩的故事。伴随菲利普·格拉斯的迷人配乐，让观众感受到在那个仍由男性主导野外科研的年代，一个女人如何通过激情、奉献和毅力改变世界。影片还把人类的命运与动物交织在一起，大大强化了人与自然的关系。', 'image' is 'image_path_1'."
      }
    ]
  },
  "query_25_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "123 Main St, Springfield"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is '123 Main St, Springfield'."
      }
    ]
  },
  "query_183_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/quantum_computing_articles.txt",
        "text": "Published: 2022-08-01\nTitle: The Rise of Quantum Internet Computing\nAuthors: Seng W. Loke\nSummary: This article highlights quantum Internet computing as referring to\ndistributed quantum computing over the quantum Internet, analogous to\n(classical) Internet computing involving (classical) distributed computing over\nthe (classical) Internet. Relevant to quantum Internet computing would be areas\nof study such as quantum protocols for distributed nodes using quantum\ninformation for computations, quantum cloud computing, delegated verifiable\nblind or private computing, non-local gates, and distributed quantum\napplications, over Internet-scale distances.\n\nPublished: 2000-03-31\nTitle: Unconventional Quantum Computing Devices\nAuthors: Seth Lloyd\nSummary: This paper investigates a variety of unconventional quantum computation\ndevices, including fermionic quantum computers and computers that exploit\nnonlinear quantum mechanics. It is shown that unconventional quantum computing\ndevices can in principle compute some quantities more rapidly than\n`conventional' quantum computers.\n\nPublished: 2013-11-20\nTitle: Geometrical perspective on quantum states and quantum computation\nAuthors: Zeqian Chen\nSummary: We interpret quantum computing as a geometric evolution process by\nreformulating finite quantum systems via Connes' noncommutative geometry. In\nthis formulation, quantum states are represented as noncommutative connections,\nwhile gauge transformations on the connections play a role of unitary quantum\noperations. Thereby, a geometrical model for quantum computation is presented,\nwhich is equivalent to the quantum circuit model. This result shows a geometric\nway of realizing quantum computing and as such, provides an alternative\nproposal of building a quantum computer."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/quantum_computing_articles.txt', 'text' is 'Published: 2022-08-01\nTitle: The Rise of Quantum Internet Computing\nAuthors: Seng W. Loke\nSummary: This article highlights quantum Internet computing as referring to\ndistributed quantum computing over the quantum Internet, analogous to\n(classical) Internet computing involving (classical) distributed computing over\nthe (classical) Internet. Relevant to quantum Internet computing would be areas\nof study such as quantum protocols for distributed nodes using quantum\ninformation for computations, quantum cloud computing, delegated verifiable\nblind or private computing, non-local gates, and distributed quantum\napplications, over Internet-scale distances.\n\nPublished: 2000-03-31\nTitle: Unconventional Quantum Computing Devices\nAuthors: Seth Lloyd\nSummary: This paper investigates a variety of unconventional quantum computation\ndevices, including fermionic quantum computers and computers that exploit\nnonlinear quantum mechanics. It is shown that unconventional quantum computing\ndevices can in principle compute some quantities more rapidly than\n`conventional' quantum computers.\n\nPublished: 2013-11-20\nTitle: Geometrical perspective on quantum states and quantum computation\nAuthors: Zeqian Chen\nSummary: We interpret quantum computing as a geometric evolution process by\nreformulating finite quantum systems via Connes' noncommutative geometry. In\nthis formulation, quantum states are represented as noncommutative connections,\nwhile gauge transformations on the connections play a role of unitary quantum\noperations. Thereby, a geometrical model for quantum computation is presented,\nwhich is equivalent to the quantum circuit model. This result shows a geometric\nway of realizing quantum computing and as such, provides an alternative\nproposal of building a quantum computer.'."
      }
    ]
  },
  "query_477_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Movie Review",
        "abs_location": "outputs/movie_review.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Movie Review', 'abs_location' is 'outputs/movie_review.ppt'."
      }
    ]
  },
  "query_303_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Times Square, New York City",
        "end": "Central Park, New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Times Square, New York City', 'end' is 'Central Park, New York City'."
      }
    ]
  },
  "query_431_2_10": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "User Review 1",
        "bullet_items": "User: ohlalipop\nRating: A\nReview: When I first saw the trailer for this film, I knew that this would attract a lot of attention. Of course having Leonardo in the lead role helped a lot. From the trailer, I already know some things. Dreams. All about dreams. But what about dreams? Who are the other people? At first, I didn't really understand what was going on. It was all very confusing to me. But as the movie progresses, I start to understand it and I wanted to watch some more and know more what will happen in the end. The ending. That was, I think, the most intense ending of a movie in a year or probably more than a year. People actually screamed when the screen faded. And of course, people couldn't help but talk about it. It was an open-ended movie where people will have their own endings. My favorite part was Joseph Gordon's fight scene. I think he has the most fun part in this movie.",
        "image": "outputs/1697985912.345337.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'User Review 1', 'bullet_items' is 'User: ohlalipop\nRating: A\nReview: When I first saw the trailer for this film, I knew that this would attract a lot of attention. Of course having Leonardo in the lead role helped a lot. From the trailer, I already know some things. Dreams. All about dreams. But what about dreams? Who are the other people? At first, I didn't really understand what was going on. It was all very confusing to me. But as the movie progresses, I start to understand it and I wanted to watch some more and know more what will happen in the end. The ending. That was, I think, the most intense ending of a movie in a year or probably more than a year. People actually screamed when the screen faded. And of course, people couldn't help but talk about it. It was an open-ended movie where people will have their own endings. My favorite part was Joseph Gordon's fight scene. I think he has the most fun part in this movie.', 'image' is 'outputs/1697985912.345337.jpg'."
      }
    ]
  },
  "query_303_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "New York City",
        "days": 1
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'New York City', 'days' is '1'."
      }
    ]
  },
  "query_368_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_368_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_169_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/New_York_City_Properties.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/New_York_City_Properties.ppt'."
      }
    ]
  },
  "query_361_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_89_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_431_2_12": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "User Review 2",
        "bullet_items": "User: tmdb44006625\nRating: 8.0\nReview: Whether you watch Inception as a heist movie, a redemption story, or a sci-fi action picture, Christopher Nolan's tour de force of dreams will absolutely work its magic over you. The fact that the film works on so many levels (literally) is an attest not only to the visual cues that make it easy for the audience to follow but to how much in control of all the intricacies its filmmaker had to be.",
        "image": "outputs/1697985965.4999645.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'User Review 2', 'bullet_items' is 'User: tmdb44006625\nRating: 8.0\nReview: Whether you watch Inception as a heist movie, a redemption story, or a sci-fi action picture, Christopher Nolan's tour de force of dreams will absolutely work its magic over you. The fact that the film works on so many levels (literally) is an attest not only to the visual cues that make it easy for the audience to follow but to how much in control of all the intricacies its filmmaker had to be.', 'image' is 'outputs/1697985965.4999645.jpg'."
      }
    ]
  },
  "query_185_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_156_1_10": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "Tokyo",
        "keywords": "food market"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is 'Tokyo', 'keywords' is 'food market'."
      }
    ]
  },
  "query_156_1_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "35.64458976563521,139.74395288003788",
        "keywords": "restaurant"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '35.64458976563521,139.74395288003788', 'keywords' is 'restaurant'."
      }
    ]
  },
  "query_2_2_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 28260101
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '28260101'."
      }
    ]
  },
  "query_402_2_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Trends in Movie Genres",
        "bullet_items": "1. Action movies\n2. Comedy movies\n3. Drama movies\n4. Fantasy movies",
        "image": "outputs/1697982699.0718277.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Trends in Movie Genres', 'bullet_items' is '1. Action movies\n2. Comedy movies\n3. Drama movies\n4. Fantasy movies', 'image' is 'outputs/1697982699.0718277.jpg'."
      }
    ]
  },
  "query_156_1_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 37677930
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '37677930'."
      }
    ]
  },
  "query_464_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_254_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_67_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_35_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "1600 Pennsylvania Avenue, Washington D.C."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is '1600 Pennsylvania Avenue, Washington D.C.'."
      }
    ]
  },
  "query_101_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Global Warming",
        "bullet_items": "Causes[SPAN]Effects[SPAN]Solutions"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Global Warming', 'bullet_items' is 'Causes[SPAN]Effects[SPAN]Solutions'."
      }
    ]
  },
  "query_430_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_305_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "0-gwNu8O3TQJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is '0-gwNu8O3TQJ'."
      }
    ]
  },
  "query_406_1_9": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "43AJs30AAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '43AJs30AAAAJ'."
      }
    ]
  },
  "query_272_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_358_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "current",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'current', 'days' is '3'."
      }
    ]
  },
  "query_333_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/employee_benefits.txt",
        "text": "Here are the details of our new employee benefits package:\n\n- Health insurance\n- Retirement plan\n- Paid time off\n- Employee discounts\n\nPlease let me know if you have any questions or concerns.\n\nBest regards,\n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/employee_benefits.txt', 'text' is 'Here are the details of our new employee benefits package:\n\n- Health insurance\n- Retirement plan\n- Paid time off\n- Employee discounts\n\nPlease let me know if you have any questions or concerns.\n\nBest regards,\n[Your Name]'."
      }
    ]
  },
  "query_406_1_11": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "_YOg3JQAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '_YOg3JQAAAAJ'."
      }
    ]
  },
  "query_377_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_256_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_464_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.get_route",
      "args": {
        "origin": "116.407417,39.904172",
        "destination": "121.473657,31.230378"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'origin', 'type': 'STRING', 'description': \"coordinate of the start location, format with 'lon,lat'\"}, {'name': 'destination', 'type': 'STRING', 'description': \"coordinate of the end location, format with 'lon,lat'\"}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_route with the parameter as follows: 'origin' is '116.407417,39.904172', 'destination' is '121.473657,31.230378'."
      }
    ]
  },
  "query_251_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_297_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_259_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.aggregate_stock_with_time",
      "args": {
        "ticker": "AAPL",
        "multiplier": 1,
        "timespan": "day",
        "from": "2023-10-15",
        "to": "2023-10-17"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.aggregate_stock_with_time', 'description': 'get aggregate bars for a stock over a given date range in custom time window sizes', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The ticker symbol of the stock/equity'}, {'name': 'multiplier', 'type': 'NUMBER', 'description': 'The size of the timespan multiplier'}, {'name': 'timespan', 'type': 'STRING', 'description': \"The size of the time window, supported 'day', 'hour', 'week'\"}, {'name': 'from', 'type': 'STRING', 'description': 'The start of the aggregate time window with the format YYYY-MM-DD'}, {'name': 'to', 'type': 'STRING', 'description': 'The end of the aggregate time window with the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list of dict including the open and closed price in the given time period and the unix msec timestamp for the start of the aggregate window'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.aggregate_stock_with_time with the parameter as follows: 'ticker' is 'AAPL', 'multiplier' is '1', 'timespan' is 'day', 'from' is '2023-10-15', 'to' is '2023-10-17'."
      }
    ]
  },
  "query_249_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "finance economics"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'finance economics'."
      }
    ]
  },
  "query_307_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "coffee shop",
        "latitude": 52.52342987,
        "longitude": 13.41143608,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'coffee shop', 'latitude' is '52.52342987', 'longitude' is '13.41143608', 'radius' is '1000'."
      }
    ]
  },
  "query_97_2_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_448_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "珍·古道尔的传奇一生"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '珍·古道尔的传奇一生'."
      }
    ]
  },
  "query_441_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "pb077JYAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'pb077JYAAAAJ'."
      }
    ]
  },
  "query_251_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "data analysis techniques"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'data analysis techniques'."
      }
    ]
  },
  "query_142_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": "ABC456",
        "date": "2023-10-23"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is 'ABC456', 'date' is '2023-10-23'."
      }
    ]
  },
  "query_79_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Anomaly Detection",
        "abs_location": "outputs/Anomaly_Detection_Techniques.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Anomaly Detection', 'abs_location' is 'outputs/Anomaly_Detection_Techniques.ppt'."
      }
    ]
  },
  "query_231_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "WBIL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'WBIL'."
      }
    ]
  },
  "query_453_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_344_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_377_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "TSLZ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'TSLZ'."
      }
    ]
  },
  "query_449_1_13": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "金手指"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is '金手指'."
      }
    ]
  },
  "query_116_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "jane@example.com",
        "title": "Property Inquiry",
        "body": "Content of the file located at `data_v2/template_data/paper_readme.txt`",
        "attachment": "data_v2/template_data/paper_readme.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'jane@example.com', 'title' is 'Property Inquiry', 'body' is 'Content of the file located at `data_v2/template_data/paper_readme.txt`', 'attachment' is 'data_v2/template_data/paper_readme.txt'."
      }
    ]
  },
  "query_69_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_40_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "author@example.com",
        "title": "Review Request",
        "body": "Dear Author,\n\nI hope this email finds you well. I am writing to request your participation in the review process for our upcoming publication. The submission deadline is approaching, and we would greatly appreciate your expertise in reviewing the manuscript.\n\nPlease find below the details:\n\n- Review Process: Please carefully read the manuscript and provide constructive feedback and suggestions.\n- Submission Deadline: [INSERT SUBMISSION DEADLINE]\n- Expected Feedback Time: [INSERT EXPECTED FEEDBACK TIME]\n\nThank you in advance for your valuable contribution.\n\nBest regards,\n[INSERT YOUR NAME]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'author@example.com', 'title' is 'Review Request', 'body' is 'Dear Author,\n\nI hope this email finds you well. I am writing to request your participation in the review process for our upcoming publication. The submission deadline is approaching, and we would greatly appreciate your expertise in reviewing the manuscript.\n\nPlease find below the details:\n\n- Review Process: Please carefully read the manuscript and provide constructive feedback and suggestions.\n- Submission Deadline: [INSERT SUBMISSION DEADLINE]\n- Expected Feedback Time: [INSERT EXPECTED FEEDBACK TIME]\n\nThank you in advance for your valuable contribution.\n\nBest regards,\n[INSERT YOUR NAME]'."
      }
    ]
  },
  "query_181_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 733251743064542501
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '733251743064542501'."
      }
    ]
  },
  "query_247_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "mathematics education"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'mathematics education'."
      }
    ]
  },
  "query_134_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 29592742
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '29592742'."
      }
    ]
  },
  "query_300_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "123 Main Street"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is '123 Main Street'."
      }
    ]
  },
  "query_201_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "supervisor@example.com",
        "title": "Papers on Machine Learning",
        "body": "Dear Supervisor,\\n\\nI hope this email finds you well. I wanted to share with you some newly published papers on the topic of machine learning that I found. Please find them attached to this email.\\n\\nBest regards,\\nYour Name",
        "attachment": "path/to/found_papers.pdf"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'supervisor@example.com', 'title' is 'Papers on Machine Learning', 'body' is 'Dear Supervisor,\\n\\nI hope this email finds you well. I wanted to share with you some newly published papers on the topic of machine learning that I found. Please find them attached to this email.\\n\\nBest regards,\\nYour Name', 'attachment' is 'path/to/found_papers.pdf'."
      }
    ]
  },
  "query_195_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_285_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_249_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "company name"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'company name'."
      }
    ]
  },
  "query_104_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 941597372112246343
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '941597372112246343'."
      }
    ]
  },
  "query_110_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Los Angeles'."
      }
    ]
  },
  "query_264_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_305_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "landmark",
        "places": "Central Park",
        "latitude": 40.78247833,
        "longitude": -73.96555328,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'landmark', 'places' is 'Central Park', 'latitude' is '40.78247833', 'longitude' is '-73.96555328', 'radius' is '1000'."
      }
    ]
  },
  "query_314_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "Los Angeles",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'Los Angeles', 'days' is '3'."
      }
    ]
  },
  "query_444_2_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_230_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Chicago"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Chicago'."
      }
    ]
  },
  "query_152_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_325_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "MCD"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'MCD'."
      }
    ]
  },
  "query_322_1_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_daliy_open_close",
      "args": {
        "ticker": "TSLA",
        "date": "2023-10-10"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_daliy_open_close', 'description': 'get the open, close and afterhours prices of a stock symbol on a certain date', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'date', 'type': 'STRING', 'description': 'The date of the requested open/close in the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'close', 'description': ''}, {'name': 'open', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_daliy_open_close with the parameter as follows: 'ticker' is 'TSLA', 'date' is '2023-10-10'."
      }
    ]
  },
  "query_228_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_269_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "Los Angeles",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'Los Angeles', 'days' is '3'."
      }
    ]
  },
  "query_474_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_358_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.get_route",
      "args": {
        "origin": "123 Main Street",
        "destination": "456 Elm Street"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'origin', 'type': 'STRING', 'description': \"coordinate of the start location, format with 'lon,lat'\"}, {'name': 'destination', 'type': 'STRING', 'description': \"coordinate of the end location, format with 'lon,lat'\"}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_route with the parameter as follows: 'origin' is '123 Main Street', 'destination' is '456 Elm Street'."
      }
    ]
  },
  "query_453_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "Parasite movie poster"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'Parasite movie poster'."
      }
    ]
  },
  "query_227_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_448_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_77_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Jane Brown"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Jane Brown'."
      }
    ]
  },
  "query_36_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: ."
      }
    ]
  },
  "query_475_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "Expend4bles movie details"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'Expend4bles movie details'."
      }
    ]
  },
  "query_134_2_13": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Property 1 Image",
        "bullet_items": "Image of Property 1",
        "image": "outputs/1697708361.41023.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Property 1 Image', 'bullet_items' is 'Image of Property 1', 'image' is 'outputs/1697708361.41023.jpg'."
      }
    ]
  },
  "query_402_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "blog post image"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'blog post image'."
      }
    ]
  },
  "query_174_1_10": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51541759
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51541759'."
      }
    ]
  },
  "query_76_2_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "What are the ethical implications of AI in healthcare?"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'What are the ethical implications of AI in healthcare?'."
      }
    ]
  },
  "query_486_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_449_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "红猪"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '红猪'."
      }
    ]
  },
  "query_172_2_15": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "20:00",
        "end_time": "21:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '20:00', 'end_time' is '21:00'."
      }
    ]
  },
  "query_270_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "ABC Real Estate"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'ABC Real Estate'."
      }
    ]
  },
  "query_402_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/movies.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/movies.txt'."
      }
    ]
  },
  "query_183_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_8_1_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 20654271
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '20654271'."
      }
    ]
  },
  "query_51_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "101",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '101', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_477_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 299054
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '299054'."
      }
    ]
  },
  "query_10_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 731584702487700952
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '731584702487700952'."
      }
    ]
  },
  "query_230_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_176_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_115_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.aggregate_stock_with_time",
      "args": {
        "ticker": "ZG",
        "multiplier": 1,
        "timespan": "day",
        "from": "2023-10-01",
        "to": "2023-10-15"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.aggregate_stock_with_time', 'description': 'get aggregate bars for a stock over a given date range in custom time window sizes', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The ticker symbol of the stock/equity'}, {'name': 'multiplier', 'type': 'NUMBER', 'description': 'The size of the timespan multiplier'}, {'name': 'timespan', 'type': 'STRING', 'description': \"The size of the time window, supported 'day', 'hour', 'week'\"}, {'name': 'from', 'type': 'STRING', 'description': 'The start of the aggregate time window with the format YYYY-MM-DD'}, {'name': 'to', 'type': 'STRING', 'description': 'The end of the aggregate time window with the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list of dict including the open and closed price in the given time period and the unix msec timestamp for the start of the aggregate window'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.aggregate_stock_with_time with the parameter as follows: 'ticker' is 'ZG', 'multiplier' is '1', 'timespan' is 'day', 'from' is '2023-10-01', 'to' is '2023-10-15'."
      }
    ]
  },
  "query_402_1_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_114_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 700888293266225258
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '700888293266225258'."
      }
    ]
  },
  "query_377_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "example@gmail.com",
        "title": "Stock Information",
        "body": "Current Date and Time: 2023-10-21 12:05\n\nStock Information for AAPL:\n- Address: ONE APPLE PARK WAY, CUPERTINO, CA, 95014\n- Description: Apple designs a wide variety of consumer electronic devices, including smartphones (iPhone), tablets (iPad), PCs (Mac), smartwatches (Apple Watch), and AirPods, among others. In addition, Apple offers its customers a variety of services such as Apple Music, iCloud, Apple Care, Apple TV+, Apple Arcade, Apple Fitness, Apple Card, and Apple Pay, among others. Apple's products include internally developed software and semiconductors, and the firm is well known for its integration of hardware, software, semiconductors, and services. Apple's products are distributed online as well as through company-owned stores and third-party retailers.\n- List Date: 1980-12-12\n- Homepage URL: https://www.apple.com\n\nStock Symbol for Microsoft: MSFT\n\nOpening and Closing Prices for MSFT on October 17, 2023:\n- Opening Price: 329.59\n- Closing Price: 332.06\n\nLatest News Articles about the Stock Market:\n- Article 1: Don't give up on the 60:40 portfolio now — it has been a good insurance policy in an unpredictable stock market\n- Article 2: Is Tesla starting to look like just any old carmaker?\n- Article 3: Meta & Alphabet Earnings: Ad Revenue in Focus\n- Article 4: Why Bitcoin and Other Major Cryptocurrencies Rallied This Week\n- Article 5: Healthcare Realty Trust Announces Third Quarter Earnings Release Date and Conference Call"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'example@gmail.com', 'title' is 'Stock Information', 'body' is 'Current Date and Time: 2023-10-21 12:05\n\nStock Information for AAPL:\n- Address: ONE APPLE PARK WAY, CUPERTINO, CA, 95014\n- Description: Apple designs a wide variety of consumer electronic devices, including smartphones (iPhone), tablets (iPad), PCs (Mac), smartwatches (Apple Watch), and AirPods, among others. In addition, Apple offers its customers a variety of services such as Apple Music, iCloud, Apple Care, Apple TV+, Apple Arcade, Apple Fitness, Apple Card, and Apple Pay, among others. Apple's products include internally developed software and semiconductors, and the firm is well known for its integration of hardware, software, semiconductors, and services. Apple's products are distributed online as well as through company-owned stores and third-party retailers.\n- List Date: 1980-12-12\n- Homepage URL: https://www.apple.com\n\nStock Symbol for Microsoft: MSFT\n\nOpening and Closing Prices for MSFT on October 17, 2023:\n- Opening Price: 329.59\n- Closing Price: 332.06\n\nLatest News Articles about the Stock Market:\n- Article 1: Don't give up on the 60:40 portfolio now — it has been a good insurance policy in an unpredictable stock market\n- Article 2: Is Tesla starting to look like just any old carmaker?\n- Article 3: Meta & Alphabet Earnings: Ad Revenue in Focus\n- Article 4: Why Bitcoin and Other Major Cryptocurrencies Rallied This Week\n- Article 5: Healthcare Realty Trust Announces Third Quarter Earnings Release Date and Conference Call'."
      }
    ]
  },
  "query_449_1_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "红猪",
        "bullet_items": "喜剧 / 动画 / 冒险",
        "image": "outputs/1697984901.6902456.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is '红猪', 'bullet_items' is '喜剧 / 动画 / 冒险', 'image' is 'outputs/1697984901.6902456.jpg'."
      }
    ]
  },
  "query_31_1_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "current traffic conditions on route from Seattle to Portland"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'current traffic conditions on route from Seattle to Portland'."
      }
    ]
  },
  "query_103_1_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 40553667,
        "checkIn": "2023-10-19",
        "checkOut": "2023-10-26"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '40553667', 'checkIn' is '2023-10-19', 'checkOut' is '2023-10-26'."
      }
    ]
  },
  "query_221_2_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_321_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "Yosemite National Park",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'Yosemite National Park', 'days' is '3'."
      }
    ]
  },
  "query_244_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Finale Doshi-Velez"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Finale Doshi-Velez'."
      }
    ]
  },
  "query_108_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Los Angeles'."
      }
    ]
  },
  "query_78_1_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_36_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "client2@example.com",
        "title": "New Product Launch",
        "body": "Dear Clients, We are excited to announce the launch of our new product. Please find attached the product brochure for more details. Thank you. Best regards, Mike"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'client2@example.com', 'title' is 'New Product Launch', 'body' is 'Dear Clients, We are excited to announce the launch of our new product. Please find attached the product brochure for more details. Thank you. Best regards, Mike'."
      }
    ]
  },
  "query_163_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "sustainable architecture"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'sustainable architecture'."
      }
    ]
  },
  "query_205_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "/home/user/Documents/file.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is '/home/user/Documents/file.txt'."
      }
    ]
  },
  "query_427_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_244_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Google"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Google'."
      }
    ]
  },
  "query_191_1_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_17_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_478_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 968051
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '968051'."
      }
    ]
  },
  "query_174_1_8": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51746773
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51746773'."
      }
    ]
  },
  "query_290_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "40.6892,-74.0445",
        "end": "212 Washington St, Jersey City, NJ, 07302"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '40.6892,-74.0445', 'end' is '212 Washington St, Jersey City, NJ, 07302'."
      }
    ]
  },
  "query_156_1_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 49470166
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '49470166'."
      }
    ]
  },
  "query_53_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "红猪"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is '红猪'."
      }
    ]
  },
  "query_82_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_477_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/similar_movies.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/similar_movies.pptx'."
      }
    ]
  },
  "query_93_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 42736872
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '42736872'."
      }
    ]
  },
  "query_22_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_77_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "0qfs6zbVakoJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is '0qfs6zbVakoJ'."
      }
    ]
  },
  "query_13_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Stanford University",
        "end": "Health Policy Research: Research Institute: Palo Alto Medical Foundation"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Stanford University', 'end' is 'Health Policy Research: Research Institute: Palo Alto Medical Foundation'."
      }
    ]
  },
  "query_16_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_339_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_322_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "New York",
        "end": "Miami"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'New York', 'end' is 'Miami'."
      }
    ]
  },
  "query_452_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_274_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "latitude": 40.69417191,
        "longitude": -74.0430603,
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'latitude' is '40.69417191', 'longitude' is '-74.0430603', 'radius' is '500'."
      }
    ]
  },
  "query_484_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_431_2_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Genres",
        "bullet_items": "Action, Science Fiction, Adventure"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Genres', 'bullet_items' is 'Action, Science Fiction, Adventure'."
      }
    ]
  },
  "query_117_0_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 48060454
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '48060454'."
      }
    ]
  },
  "query_177_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Los Angeles'."
      }
    ]
  },
  "query_5_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York'."
      }
    ]
  },
  "query_107_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "attractions",
        "places": "Hollywood Walk of Fame",
        "latitude": 34.10173035,
        "longitude": -118.32644653,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'attractions', 'places' is 'Hollywood Walk of Fame', 'latitude' is '34.10173035', 'longitude' is '-118.32644653', 'radius' is '1000'."
      }
    ]
  },
  "query_251_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "number theory"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'number theory'."
      }
    ]
  },
  "query_143_2_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 972494279345285252
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '972494279345285252'."
      }
    ]
  },
  "query_417_1_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_172_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 51113056,
        "date": "2023-12-01"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '51113056', 'date' is '2023-12-01'."
      }
    ]
  },
  "query_479_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_daliy_open_close",
      "args": {
        "ticker": "AAPL",
        "date": "2023-10-20"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_daliy_open_close', 'description': 'get the open, close and afterhours prices of a stock symbol on a certain date', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'date', 'type': 'STRING', 'description': 'The date of the requested open/close in the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'close', 'description': ''}, {'name': 'open', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_daliy_open_close with the parameter as follows: 'ticker' is 'AAPL', 'date' is '2023-10-20'."
      }
    ]
  },
  "query_381_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 299534
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '299534'."
      }
    ]
  },
  "query_182_1_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "family@home.com",
        "title": "Arrived Safely",
        "body": "Dear family,\n\nI have arrived safely at the TWA Hotel near JFK Airport. The address is JFK Access Road, One Idlewild Drive JFK Internatio, New York, NY, 11430.\n\nBest regards,\n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'family@home.com', 'title' is 'Arrived Safely', 'body' is 'Dear family,\n\nI have arrived safely at the TWA Hotel near JFK Airport. The address is JFK Access Road, One Idlewild Drive JFK Internatio, New York, NY, 11430.\n\nBest regards,\n[Your Name]'."
      }
    ]
  },
  "query_365_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_227_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 240
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '240'."
      }
    ]
  },
  "query_306_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'New York City'."
      }
    ]
  },
  "query_451_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_295_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "fitness"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'fitness'."
      }
    ]
  },
  "query_193_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "hotels",
        "places": "Times Square"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'hotels', 'places' is 'Times Square'."
      }
    ]
  },
  "query_365_0_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "4FGY2CACfwAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is '4FGY2CACfwAJ'."
      }
    ]
  },
  "query_60_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_10_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 585382126083893704
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '585382126083893704'."
      }
    ]
  },
  "query_36_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/product_launch_draft.txt",
        "text": "Dear Clients,\n\nWe are excited to announce the launch of our new product. Please find attached the product brochure for more details.\n\nThank you.\n\nBest regards,\nMike"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/product_launch_draft.txt', 'text' is 'Dear Clients,\n\nWe are excited to announce the launch of our new product. Please find attached the product brochure for more details.\n\nThank you.\n\nBest regards,\nMike'."
      }
    ]
  },
  "query_363_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "0_R4ae-lTqYJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is '0_R4ae-lTqYJ'."
      }
    ]
  },
  "query_16_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_470_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 240
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '240'."
      }
    ]
  },
  "query_140_1_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "河边的错误"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '河边的错误'."
      }
    ]
  },
  "query_350_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_254_1_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Recent Advances in Computer Vision",
        "bullet_items": "1. Deep learning in computer vision\n2. Object detection and tracking\n3. Image segmentation",
        "image": "outputs/1697753813.4184632.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Recent Advances in Computer Vision', 'bullet_items' is '1. Deep learning in computer vision\n2. Object detection and tracking\n3. Image segmentation', 'image' is 'outputs/1697753813.4184632.jpg'."
      }
    ]
  },
  "query_104_0_10": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "travelblogger@example.com",
        "title": "List of Attractions",
        "body": "Here is the list of attractions:\n\n1. The Chrysler Building\nAddress: 405 Lexington Ave, New York, NY, 10174\n\n2. Museum of the Moving Image\nAddress: 36-01 35 Ave, Astoria, NY, 11106\n\n3. The Metropolitan Museum of Art\nAddress: 405 Lexington Ave, New York, NY, 10174\n\nPlease find the attached file for more information.",
        "attachment": "/path/to/attractions.pdf"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'travelblogger@example.com', 'title' is 'List of Attractions', 'body' is 'Here is the list of attractions:\n\n1. The Chrysler Building\nAddress: 405 Lexington Ave, New York, NY, 10174\n\n2. Museum of the Moving Image\nAddress: 36-01 35 Ave, Astoria, NY, 11106\n\n3. The Metropolitan Museum of Art\nAddress: 405 Lexington Ave, New York, NY, 10174\n\nPlease find the attached file for more information.', 'attachment' is '/path/to/attractions.pdf'."
      }
    ]
  },
  "query_1_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'San Francisco'."
      }
    ]
  },
  "query_481_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_242_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "simple",
        "abs_location": "outputs/climate_change_presentation.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'simple', 'abs_location' is 'outputs/climate_change_presentation.ppt'."
      }
    ]
  },
  "query_402_2_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_361_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "john.doe@example.com",
        "title": "Research Update",
        "body": "Dear John,\n\nI hope this email finds you well. I wanted to share with you my latest findings on how artificial intelligence can be applied to climate change. I believe this research can have a significant impact on mitigating the effects of climate change.\n\nPlease find attached a document summarizing my findings.\n\nBest regards,\n[Your Name]",
        "attachment": "/path/to/attachment.pdf"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'john.doe@example.com', 'title' is 'Research Update', 'body' is 'Dear John,\n\nI hope this email finds you well. I wanted to share with you my latest findings on how artificial intelligence can be applied to climate change. I believe this research can have a significant impact on mitigating the effects of climate change.\n\nPlease find attached a document summarizing my findings.\n\nBest regards,\n[Your Name]', 'attachment' is '/path/to/attachment.pdf'."
      }
    ]
  },
  "query_224_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "40.7128, -74.0060",
        "keywords": "theater"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '40.7128, -74.0060', 'keywords' is 'theater'."
      }
    ]
  },
  "query_456_0_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "奥本海默"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '奥本海默'."
      }
    ]
  },
  "query_428_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "Shang-Chi and the Legend of the Ten Rings official trailer"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'Shang-Chi and the Legend of the Ten Rings official trailer'."
      }
    ]
  },
  "query_449_1_8": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "涉过愤怒的海",
        "bullet_items": "剧情 / 犯罪 / 悬疑",
        "image": "outputs/1697984930.44951.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is '涉过愤怒的海', 'bullet_items' is '剧情 / 犯罪 / 悬疑', 'image' is 'outputs/1697984930.44951.jpg'."
      }
    ]
  },
  "query_347_2_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 926393
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '926393'."
      }
    ]
  },
  "query_464_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.get_coordinate",
      "args": {
        "address": "上海市政府"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_coordinate', 'description': 'Get the coordinate of a location. Param must be in Chinese', 'required_parameters': [{'name': 'address', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [{'name': 'city', 'type': 'STRING', 'description': 'specify the city to search'}], 'return_data': [{'name': 'coordinate', 'description': 'coordinate of the location, format with (lon, lat)'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_coordinate with the parameter as follows: 'address' is '上海市政府'."
      }
    ]
  },
  "query_219_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_452_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_195_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_449_1_9": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "惊奇队长2"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '惊奇队长2'."
      }
    ]
  },
  "query_70_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Gordon Ramsay"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Gordon Ramsay'."
      }
    ]
  },
  "query_28_0_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 541388
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '541388'."
      }
    ]
  },
  "query_329_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "DQ2vUWaq85YJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'DQ2vUWaq85YJ'."
      }
    ]
  },
  "query_162_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "efZZXguoqq8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'efZZXguoqq8J'."
      }
    ]
  },
  "query_104_0_9": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "attractions",
        "places": "New York City",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'attractions', 'places' is 'New York City', 'radius' is '1000'."
      }
    ]
  },
  "query_181_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "Paris",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'Paris', 'days' is '3'."
      }
    ]
  },
  "query_191_0_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'quantum computing'."
      }
    ]
  },
  "query_249_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_daliy_open_close",
      "args": {
        "ticker": "AAPL",
        "date": "2023-10-15"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_daliy_open_close', 'description': 'get the open, close and afterhours prices of a stock symbol on a certain date', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'date', 'type': 'STRING', 'description': 'The date of the requested open/close in the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'close', 'description': ''}, {'name': 'open', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_daliy_open_close with the parameter as follows: 'ticker' is 'AAPL', 'date' is '2023-10-15'."
      }
    ]
  },
  "query_25_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "456 Broad St, Springfield",
        "end": "123 Main St, Springfield"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '456 Broad St, Springfield', 'end' is '123 Main St, Springfield'."
      }
    ]
  },
  "query_52_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_26_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "New York City",
        "end": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'New York City', 'end' is 'Los Angeles'."
      }
    ]
  },
  "query_314_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Griffith Park",
        "end": "Santa Monica Pier"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Griffith Park', 'end' is 'Santa Monica Pier'."
      }
    ]
  },
  "query_2_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 53132475
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '53132475'."
      }
    ]
  },
  "query_115_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_55_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "珍·古道尔的传奇一生"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '珍·古道尔的传奇一生'."
      }
    ]
  },
  "query_4_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 667316357375615620
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '667316357375615620'."
      }
    ]
  },
  "query_144_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 691676460109271194,
        "date": "2023-10-18"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '691676460109271194', 'date' is '2023-10-18'."
      }
    ]
  },
  "query_312_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_466_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Introduction",
        "bullet_items": "Main points of the presentation"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Introduction', 'bullet_items' is 'Main points of the presentation'."
      }
    ]
  },
  "query_404_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Apple Inc."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Apple Inc.'."
      }
    ]
  },
  "query_453_1_10": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "雪豹和她的朋友们"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '雪豹和她的朋友们'."
      }
    ]
  },
  "query_448_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_255_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'San Francisco'."
      }
    ]
  },
  "query_107_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_163_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "cV77_aKKeAYJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'cV77_aKKeAYJ'."
      }
    ]
  },
  "query_477_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "Shrek 2, movie poster"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'Shrek 2, movie poster'."
      }
    ]
  },
  "query_221_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "珍·古道尔的传奇一生"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '珍·古道尔的传奇一生'."
      }
    ]
  },
  "query_408_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Climate Change",
        "bullet_items": "1. Rising global temperatures\n2. Melting ice caps\n3. Extreme weather events\n4. Ocean acidification"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Climate Change', 'bullet_items' is '1. Rising global temperatures\n2. Melting ice caps\n3. Extreme weather events\n4. Ocean acidification'."
      }
    ]
  },
  "query_166_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Smith"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Smith'."
      }
    ]
  },
  "query_10_2_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 1001125627615934457,
        "checkIn": "2023-10-18",
        "checkOut": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '1001125627615934457', 'checkIn' is '2023-10-18', 'checkOut' is '2023-10-19'."
      }
    ]
  },
  "query_193_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_daliy_open_close",
      "args": {
        "ticker": "AAPL",
        "date": "2023-10-18"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_daliy_open_close', 'description': 'get the open, close and afterhours prices of a stock symbol on a certain date', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'date', 'type': 'STRING', 'description': 'The date of the requested open/close in the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'close', 'description': ''}, {'name': 'open', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_daliy_open_close with the parameter as follows: 'ticker' is 'AAPL', 'date' is '2023-10-18'."
      }
    ]
  },
  "query_463_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_69_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_152_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Los Angeles'."
      }
    ]
  },
  "query_224_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_140_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "红猪"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '红猪'."
      }
    ]
  },
  "query_269_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "350 5th Ave, New York, NY",
        "end": "1 Infinite Loop, Cupertino, CA"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '350 5th Ave, New York, NY', 'end' is '1 Infinite Loop, Cupertino, CA'."
      }
    ]
  },
  "query_277_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "123 Main Street",
        "end": "456 Oak Street"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '123 Main Street', 'end' is '456 Oak Street'."
      }
    ]
  },
  "query_82_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_121_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 691676460109271194
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '691676460109271194'."
      }
    ]
  },
  "query_407_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Artificial Intelligence in Healthcare"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Artificial Intelligence in Healthcare'."
      }
    ]
  },
  "query_247_1_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_478_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_148_1_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 700888293266225258
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '700888293266225258'."
      }
    ]
  },
  "query_80_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Pavel Hamet"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Pavel Hamet'."
      }
    ]
  },
  "query_339_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "长津湖之役"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '长津湖之役'."
      }
    ]
  },
  "query_68_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 299534
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '299534'."
      }
    ]
  },
  "query_98_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "recent advancements in artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'recent advancements in artificial intelligence'."
      }
    ]
  },
  "query_464_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.get_distance",
      "args": {
        "origins": "116.407417,39.904172",
        "destination": "121.473657,31.230378"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'origins', 'type': 'STRING', 'description': \"coordinate of the start location, format with 'lon,lat'\"}, {'name': 'destination', 'type': 'STRING', 'description': \"coordinate of the end location, format with 'lon,lat'\"}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in KM'}, {'name': 'duration', 'description': 'expected time in minutes'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_distance with the parameter as follows: 'origins' is '116.407417,39.904172', 'destination' is '121.473657,31.230378'."
      }
    ]
  },
  "query_174_1_12": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "102",
        "start_time": "09:00",
        "end_time": "11:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '09:00', 'end_time' is '11:00'."
      }
    ]
  },
  "query_363_1_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_228_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_264_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "Times Square, New York City",
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'Times Square, New York City', 'radius' is '500'."
      }
    ]
  },
  "query_470_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "9zb7YrEAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '9zb7YrEAAAAJ'."
      }
    ]
  },
  "query_172_2_13": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "19:00",
        "end_time": "20:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '19:00', 'end_time' is '20:00'."
      }
    ]
  },
  "query_312_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Atera"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Atera'."
      }
    ]
  },
  "query_272_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_408_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "climate change impact"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'climate change impact'."
      }
    ]
  },
  "query_377_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_291_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Smith"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Smith'."
      }
    ]
  },
  "query_188_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Eiffel Tower",
        "end": "Louvre Museum"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Eiffel Tower', 'end' is 'Louvre Museum'."
      }
    ]
  },
  "query_164_2_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51541759
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51541759'."
      }
    ]
  },
  "query_468_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_451_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "盗梦空间"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '盗梦空间'."
      }
    ]
  },
  "query_472_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Currently Playing Movies",
        "bullet_items": "Title: Expend4bles\nRelease Date: 2023-09-15\nPopularity: 2085.194\nRating: 6.3\n\nTitle: The Equalizer 3\nRelease Date: 2023-08-30\nPopularity: 1336.236\nRating: 7.2\n\nTitle: The Nun II\nRelease Date: 2023-09-06\nPopularity: 1145.546\nRating: 7\n\nTitle: Talk to Me\nRelease Date: 2023-07-26\nPopularity: 765.457\nRating: 7.2\n\nTitle: Sound of Freedom\nRelease Date: 2023-07-03\nPopularity: 831.226\nRating: 8.1"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Currently Playing Movies', 'bullet_items' is 'Title: Expend4bles\nRelease Date: 2023-09-15\nPopularity: 2085.194\nRating: 6.3\n\nTitle: The Equalizer 3\nRelease Date: 2023-08-30\nPopularity: 1336.236\nRating: 7.2\n\nTitle: The Nun II\nRelease Date: 2023-09-06\nPopularity: 1145.546\nRating: 7\n\nTitle: Talk to Me\nRelease Date: 2023-07-26\nPopularity: 765.457\nRating: 7.2\n\nTitle: Sound of Freedom\nRelease Date: 2023-07-03\nPopularity: 831.226\nRating: 8.1'."
      }
    ]
  },
  "query_354_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GaodeMap.get_coordinate",
      "args": {
        "address": "城市, 123号 主街"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.get_coordinate', 'description': 'Get the coordinate of a location. Param must be in Chinese', 'required_parameters': [{'name': 'address', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [{'name': 'city', 'type': 'STRING', 'description': 'specify the city to search'}], 'return_data': [{'name': 'coordinate', 'description': 'coordinate of the location, format with (lon, lat)'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.get_coordinate with the parameter as follows: 'address' is '城市, 123号 主街'."
      }
    ]
  },
  "query_34_1_9": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Nearby Schools",
        "bullet_items": "- Muchin College Prep\n- Frances Xavier Warde School\n- The Henry George School Of Social Science, Chicago, Illinois\n- Noble Street Charter Schools\n- National Association of Charter School Authorizers (NACSA)"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Nearby Schools', 'bullet_items' is '- Muchin College Prep\n- Frances Xavier Warde School\n- The Henry George School Of Social Science, Chicago, Illinois\n- Noble Street Charter Schools\n- National Association of Charter School Authorizers (NACSA)'."
      }
    ]
  },
  "query_457_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "流浪地球"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '流浪地球'."
      }
    ]
  },
  "query_143_2_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 4195503
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '4195503'."
      }
    ]
  },
  "query_229_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Programming Image",
        "bullet_items": "Image related to programming",
        "image": "outputs/1697714123.2114513.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Programming Image', 'bullet_items' is 'Image related to programming', 'image' is 'outputs/1697714123.2114513.jpg'."
      }
    ]
  },
  "query_455_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": 102,
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_60_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_208_0_9": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Zeqian Chen"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Zeqian Chen'."
      }
    ]
  },
  "query_103_1_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 52047578,
        "checkIn": "2023-10-19",
        "checkOut": "2023-10-26"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '52047578', 'checkIn' is '2023-10-19', 'checkOut' is '2023-10-26'."
      }
    ]
  },
  "query_69_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_431_2_15": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_151_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Los Angeles'."
      }
    ]
  },
  "query_16_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_221_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_169_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 858697692672545141
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '858697692672545141'."
      }
    ]
  },
  "query_256_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_220_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence",
        "num_articles": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence', 'num_articles' is '3'."
      }
    ]
  },
  "query_479_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_406_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_40_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_78_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Global climate change impacts in the United States"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Global climate change impacts in the United States'."
      }
    ]
  },
  "query_98_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 44400573
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '44400573'."
      }
    ]
  },
  "query_117_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 989020487048284489
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '989020487048284489'."
      }
    ]
  },
  "query_28_0_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'New York City'."
      }
    ]
  },
  "query_66_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_111_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 4631873
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '4631873'."
      }
    ]
  },
  "query_91_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "New York, NY, United States",
        "latitude": 40.71806,
        "longitude": -74.00095,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'New York, NY, United States', 'latitude' is '40.71806', 'longitude' is '-74.00095', 'radius' is '1000'."
      }
    ]
  },
  "query_358_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_10_0_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 53931387,
        "date": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '53931387', 'date' is '2023-10-19'."
      }
    ]
  },
  "query_249_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "AAPL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'AAPL'."
      }
    ]
  },
  "query_255_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'New York'."
      }
    ]
  },
  "query_376_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Bali"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Bali'."
      }
    ]
  },
  "query_225_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "selJwfIN0t8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'selJwfIN0t8J'."
      }
    ]
  },
  "query_377_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_daliy_open_close",
      "args": {
        "ticker": "MSFT",
        "date": "2023-10-17"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_daliy_open_close', 'description': 'get the open, close and afterhours prices of a stock symbol on a certain date', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'date', 'type': 'STRING', 'description': 'The date of the requested open/close in the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'close', 'description': ''}, {'name': 'open', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_daliy_open_close with the parameter as follows: 'ticker' is 'MSFT', 'date' is '2023-10-17'."
      }
    ]
  },
  "query_215_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "quantum"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'quantum'."
      }
    ]
  },
  "query_251_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Advanced Data Analysis Techniques",
        "bullet_items": "Regression analysis[SPAN]Hypothesis testing[SPAN]Clustering methods"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Advanced Data Analysis Techniques', 'bullet_items' is 'Regression analysis[SPAN]Hypothesis testing[SPAN]Clustering methods'."
      }
    ]
  },
  "query_238_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_347_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "professor@example.com",
        "title": "Meeting Request",
        "body": "I would like to request a meeting to discuss my project"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'professor@example.com', 'title' is 'Meeting Request', 'body' is 'I would like to request a meeting to discuss my project'."
      }
    ]
  },
  "query_455_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_daliy_open_close",
      "args": {
        "ticker": "AAPL",
        "date": "2023-10-01"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_daliy_open_close', 'description': 'get the open, close and afterhours prices of a stock symbol on a certain date', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'date', 'type': 'STRING', 'description': 'The date of the requested open/close in the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'close', 'description': ''}, {'name': 'open', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_daliy_open_close with the parameter as follows: 'ticker' is 'AAPL', 'date' is '2023-10-01'."
      }
    ]
  },
  "query_463_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 299054
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '299054'."
      }
    ]
  },
  "query_477_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_456_0_9": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "侏罗纪公园, poster"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is '侏罗纪公园, poster'."
      }
    ]
  },
  "query_484_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Top Rated Movies",
        "bullet_items": "Current Day: Monday"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Top Rated Movies', 'bullet_items' is 'Current Day: Monday'."
      }
    ]
  },
  "query_312_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "NISH NUSH"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'NISH NUSH'."
      }
    ]
  },
  "query_174_1_13": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 51746773,
        "date": "2023-10-18"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '51746773', 'date' is '2023-10-18'."
      }
    ]
  },
  "query_60_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "奥本海默"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '奥本海默'."
      }
    ]
  },
  "query_105_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51113056
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51113056'."
      }
    ]
  },
  "query_104_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 48347678
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '48347678'."
      }
    ]
  },
  "query_305_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "downtown Los Angeles",
        "end": "Takami Sushi & Robata"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'downtown Los Angeles', 'end' is 'Takami Sushi & Robata'."
      }
    ]
  },
  "query_427_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "The Godfather"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'The Godfather'."
      }
    ]
  },
  "query_164_2_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "Xk8GurSkkSUJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'Xk8GurSkkSUJ'."
      }
    ]
  },
  "query_470_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_254_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Computer Vision in Action",
        "bullet_items": "1. Introduction to computer vision\n2. Applications of computer vision\n3. Computer vision algorithms"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Computer Vision in Action', 'bullet_items' is '1. Introduction to computer vision\n2. Applications of computer vision\n3. Computer vision algorithms'."
      }
    ]
  },
  "query_115_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 691676460109271194,
        "checkIn": "2023-10-20",
        "checkOut": "2023-10-27"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '691676460109271194', 'checkIn' is '2023-10-20', 'checkOut' is '2023-10-27'."
      }
    ]
  },
  "query_312_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Benares"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Benares'."
      }
    ]
  },
  "query_372_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_431_2_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Premiere Date",
        "bullet_items": "July 15, 2010"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Premiere Date', 'bullet_items' is 'July 15, 2010'."
      }
    ]
  },
  "query_204_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "AAPL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'AAPL'."
      }
    ]
  },
  "query_413_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/movies.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/movies.txt'."
      }
    ]
  },
  "query_231_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.aggregate_stock_with_time",
      "args": {
        "ticker": "MSFT",
        "multiplier": 1,
        "timespan": "day",
        "from": "2023-10-01",
        "to": "2023-10-18"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.aggregate_stock_with_time', 'description': 'get aggregate bars for a stock over a given date range in custom time window sizes', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The ticker symbol of the stock/equity'}, {'name': 'multiplier', 'type': 'NUMBER', 'description': 'The size of the timespan multiplier'}, {'name': 'timespan', 'type': 'STRING', 'description': \"The size of the time window, supported 'day', 'hour', 'week'\"}, {'name': 'from', 'type': 'STRING', 'description': 'The start of the aggregate time window with the format YYYY-MM-DD'}, {'name': 'to', 'type': 'STRING', 'description': 'The end of the aggregate time window with the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list of dict including the open and closed price in the given time period and the unix msec timestamp for the start of the aggregate window'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.aggregate_stock_with_time with the parameter as follows: 'ticker' is 'MSFT', 'multiplier' is '1', 'timespan' is 'day', 'from' is '2023-10-01', 'to' is '2023-10-18'."
      }
    ]
  },
  "query_352_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "AAPL"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'AAPL'."
      }
    ]
  },
  "query_251_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "102",
        "start_time": "10:00",
        "end_time": "12:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '10:00', 'end_time' is '12:00'."
      }
    ]
  },
  "query_231_1_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_307_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "Berlin history culture"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'Berlin history culture'."
      }
    ]
  },
  "query_5_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": "909363587647904523"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '909363587647904523'."
      }
    ]
  },
  "query_448_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_143_2_16": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Property 3",
        "bullet_items": "Property Type: Private room in guest suite[SPAN]Rating: 4.81[SPAN]Location: Baldwin, NY, United States",
        "image": "outputs/1697745182.1838884.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Property 3', 'bullet_items' is 'Property Type: Private room in guest suite[SPAN]Rating: 4.81[SPAN]Location: Baldwin, NY, United States', 'image' is 'outputs/1697745182.1838884.jpg'."
      }
    ]
  },
  "query_40_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "John Smith"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'John Smith'."
      }
    ]
  },
  "query_299_0_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "40.757972, -73.985536",
        "end": "1567 Broadway, New York, NY, 10036"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '40.757972, -73.985536', 'end' is '1567 Broadway, New York, NY, 10036'."
      }
    ]
  },
  "query_251_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "number theory"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'number theory'."
      }
    ]
  },
  "query_448_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_204_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "deep learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'deep learning'."
      }
    ]
  },
  "query_251_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "What is Number Theory?",
        "bullet_items": "Basic concepts[SPAN]Prime numbers[SPAN]Number patterns"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'What is Number Theory?', 'bullet_items' is 'Basic concepts[SPAN]Prime numbers[SPAN]Number patterns'."
      }
    ]
  },
  "query_67_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 155
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '155'."
      }
    ]
  },
  "query_466_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "modern",
        "abs_location": "outputs/conference.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'modern', 'abs_location' is 'outputs/conference.ppt'."
      }
    ]
  },
  "query_210_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "13:00",
        "end_time": "17:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '13:00', 'end_time' is '17:00'."
      }
    ]
  },
  "query_194_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_57_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_430_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_25_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "123 Orchard St, Springfield",
        "end": "321 Industrial Ln, Springfield"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '123 Orchard St, Springfield', 'end' is '321 Industrial Ln, Springfield'."
      }
    ]
  },
  "query_483_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 968051
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '968051'."
      }
    ]
  },
  "query_471_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "John Doe"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'John Doe'."
      }
    ]
  },
  "query_134_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 855819398716503903
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '855819398716503903'."
      }
    ]
  },
  "query_455_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_53_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "modern",
        "abs_location": "outputs/new_presentation.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'modern', 'abs_location' is 'outputs/new_presentation.pptx'."
      }
    ]
  },
  "query_59_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "奥本海默"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '奥本海默'."
      }
    ]
  },
  "query_133_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51113056
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51113056'."
      }
    ]
  },
  "query_15_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/movies.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/movies.txt'."
      }
    ]
  },
  "query_190_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Times Square",
        "end": "Statue of Liberty"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Times Square', 'end' is 'Statue of Liberty'."
      }
    ]
  },
  "query_148_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_10_2_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 731584702487700952,
        "checkIn": "2023-10-18",
        "checkOut": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '731584702487700952', 'checkIn' is '2023-10-18', 'checkOut' is '2023-10-19'."
      }
    ]
  },
  "query_111_1_8": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Queens, NY, United States"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Queens, NY, United States'."
      }
    ]
  },
  "query_2_0_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: ."
      }
    ]
  },
  "query_172_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 38931663
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '38931663'."
      }
    ]
  },
  "query_69_0_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 240
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '240'."
      }
    ]
  },
  "query_268_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Times Square"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Times Square'."
      }
    ]
  },
  "query_351_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "San Francisco",
        "days": 1
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'San Francisco', 'days' is '1'."
      }
    ]
  },
  "query_485_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_314_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurants",
        "latitude": 40.71304703,
        "longitude": -74.00723267,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurants', 'latitude' is '40.71304703', 'longitude' is '-74.00723267', 'radius' is '1000'."
      }
    ]
  },
  "query_294_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "The Frederick Hotel",
        "end": "Times Square"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'The Frederick Hotel', 'end' is 'Times Square'."
      }
    ]
  },
  "query_431_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/dune.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/dune.pptx'."
      }
    ]
  },
  "query_231_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "WB"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'WB'."
      }
    ]
  },
  "query_340_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "team_members@example.com",
        "title": "Features of Avengers: Endgame",
        "body": "Dear Team Members,\n\nI hope this email finds you well. I wanted to inform you all about the exciting features of the forthcoming film, 'Avengers: Endgame'.\n\n'Avengers: Endgame' is the epic conclusion to the Marvel Cinematic Universe's Infinity Saga. It features an ensemble cast of superheroes including Iron Man, Captain America, Thor, Hulk, Black Widow, and Hawkeye.\n\nThe film is filled with action-packed sequences, emotional moments, and unexpected twists. It promises to be a thrilling and satisfying conclusion to the Avengers' journey.\n\nI highly recommend everyone to watch 'Avengers: Endgame' and experience this cinematic event.\n\nStay tuned for more updates!\n\nBest regards,\n[Your Name]",
        "attachment": null
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'team_members@example.com', 'title' is 'Features of Avengers: Endgame', 'body' is 'Dear Team Members,\n\nI hope this email finds you well. I wanted to inform you all about the exciting features of the forthcoming film, 'Avengers: Endgame'.\n\n'Avengers: Endgame' is the epic conclusion to the Marvel Cinematic Universe's Infinity Saga. It features an ensemble cast of superheroes including Iron Man, Captain America, Thor, Hulk, Black Widow, and Hawkeye.\n\nThe film is filled with action-packed sequences, emotional moments, and unexpected twists. It promises to be a thrilling and satisfying conclusion to the Avengers' journey.\n\nI highly recommend everyone to watch 'Avengers: Endgame' and experience this cinematic event.\n\nStay tuned for more updates!\n\nBest regards,\n[Your Name]', 'attachment' is 'None'."
      }
    ]
  },
  "query_79_1_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "bnecV0n91msJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'bnecV0n91msJ'."
      }
    ]
  },
  "query_245_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "103",
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_15_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_10_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 763553497595081889
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '763553497595081889'."
      }
    ]
  },
  "query_251_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "16:00",
        "end_time": "18:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '16:00', 'end_time' is '18:00'."
      }
    ]
  },
  "query_164_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_142_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_260_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "tourist attractions",
        "places": "Central Park",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'tourist attractions', 'places' is 'Central Park', 'radius' is '5000'."
      }
    ]
  },
  "query_208_0_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "lyMGnwIAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'lyMGnwIAAAAJ'."
      }
    ]
  },
  "query_59_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_192_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "sustainable tourism"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'sustainable tourism'."
      }
    ]
  },
  "query_54_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "Seattle",
        "days": 3
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'Seattle', 'days' is '3'."
      }
    ]
  },
  "query_10_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51619634
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51619634'."
      }
    ]
  },
  "query_0_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 21387647,
        "checkIn": "2023-12-01",
        "checkOut": "2023-12-05"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '21387647', 'checkIn' is '2023-12-01', 'checkOut' is '2023-12-05'."
      }
    ]
  },
  "query_34_1_8": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Property Details",
        "bullet_items": "Location: Chicago\nCoordinates: 41.8832283, -87.63240051"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Property Details', 'bullet_items' is 'Location: Chicago\nCoordinates: 41.8832283, -87.63240051'."
      }
    ]
  },
  "query_456_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_448_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "珍·古道尔的传奇一生"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is '珍·古道尔的传奇一生'."
      }
    ]
  },
  "query_255_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_244_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "hwQtFB0AAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'hwQtFB0AAAAJ'."
      }
    ]
  },
  "query_309_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_76_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "TXdHj3MAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is 'TXdHj3MAAAAJ'."
      }
    ]
  },
  "query_118_1_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_127_1_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51619634
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51619634'."
      }
    ]
  },
  "query_372_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "team_members@example.com",
        "title": "Project Update",
        "body": "Dear team members,\n\nI hope this email finds you well. I wanted to provide you with an update on our project progress and highlight some important milestones we have achieved.\n\nPlease find below a summary of the project status:\n\n1. Milestone 1: Completed on schedule and within budget.\n2. Milestone 2: Successfully implemented new feature XYZ.\n3. Milestone 3: Conducted user testing and received positive feedback.\n\nIf you have any questions or require further information, please let me know.\n\nBest regards,\n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'team_members@example.com', 'title' is 'Project Update', 'body' is 'Dear team members,\n\nI hope this email finds you well. I wanted to provide you with an update on our project progress and highlight some important milestones we have achieved.\n\nPlease find below a summary of the project status:\n\n1. Milestone 1: Completed on schedule and within budget.\n2. Milestone 2: Successfully implemented new feature XYZ.\n3. Milestone 3: Conducted user testing and received positive feedback.\n\nIf you have any questions or require further information, please let me know.\n\nBest regards,\n[Your Name]'."
      }
    ]
  },
  "query_413_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/director_summary.txt",
        "text": "Hayao Miyazaki is a renowned Japanese film director. He was born on January 5, 1941. Miyazaki is best known for his animated films, including Spirited Away, My Neighbor Totoro, and Princess Mononoke. Throughout his career, he has received numerous awards and critical acclaim for his storytelling and artistic vision. His works often explore themes of nature, the environment, and the human spirit. Miyazaki's unique storytelling style and captivating visuals have made him one of the most celebrated directors in the world of animation."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/director_summary.txt', 'text' is 'Hayao Miyazaki is a renowned Japanese film director. He was born on January 5, 1941. Miyazaki is best known for his animated films, including Spirited Away, My Neighbor Totoro, and Princess Mononoke. Throughout his career, he has received numerous awards and critical acclaim for his storytelling and artistic vision. His works often explore themes of nature, the environment, and the human spirit. Miyazaki's unique storytelling style and captivating visuals have made him one of the most celebrated directors in the world of animation.'."
      }
    ]
  },
  "query_16_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "侏罗纪公园"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '侏罗纪公园'."
      }
    ]
  },
  "query_456_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Movie Extravaganza",
        "abs_location": "outputs/movie_event.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Movie Extravaganza', 'abs_location' is 'outputs/movie_event.pptx'."
      }
    ]
  },
  "query_446_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_477_2_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_262_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 575264
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '575264'."
      }
    ]
  },
  "query_176_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York'."
      }
    ]
  },
  "query_162_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Pavel Hamet"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Pavel Hamet'."
      }
    ]
  },
  "query_166_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.aggregate_stock_with_time",
      "args": {
        "ticker": "AAPL",
        "multiplier": 1,
        "timespan": "day",
        "from": "2023-09-18",
        "to": "2023-10-18"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.aggregate_stock_with_time', 'description': 'get aggregate bars for a stock over a given date range in custom time window sizes', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The ticker symbol of the stock/equity'}, {'name': 'multiplier', 'type': 'NUMBER', 'description': 'The size of the timespan multiplier'}, {'name': 'timespan', 'type': 'STRING', 'description': \"The size of the time window, supported 'day', 'hour', 'week'\"}, {'name': 'from', 'type': 'STRING', 'description': 'The start of the aggregate time window with the format YYYY-MM-DD'}, {'name': 'to', 'type': 'STRING', 'description': 'The end of the aggregate time window with the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list of dict including the open and closed price in the given time period and the unix msec timestamp for the start of the aggregate window'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.aggregate_stock_with_time with the parameter as follows: 'ticker' is 'AAPL', 'multiplier' is '1', 'timespan' is 'day', 'from' is '2023-09-18', 'to' is '2023-10-18'."
      }
    ]
  },
  "query_69_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 8279
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '8279'."
      }
    ]
  },
  "query_143_2_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 47158717
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '47158717'."
      }
    ]
  },
  "query_290_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "40.6892,-74.0445",
        "end": "24 Reed St, Brooklyn, NY, 11231"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '40.6892,-74.0445', 'end' is '24 Reed St, Brooklyn, NY, 11231'."
      }
    ]
  },
  "query_240_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "EQ8shYj8Ai8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'EQ8shYj8Ai8J'."
      }
    ]
  },
  "query_164_2_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "yt_vFfMib7MJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'yt_vFfMib7MJ'."
      }
    ]
  },
  "query_223_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantitative finance"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantitative finance'."
      }
    ]
  },
  "query_111_2_10": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "37.78007889, -122.42015839",
        "end": "37.7749, -122.4194"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '37.78007889, -122.42015839', 'end' is '37.7749, -122.4194'."
      }
    ]
  },
  "query_446_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "涉过愤怒的海"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '涉过愤怒的海'."
      }
    ]
  },
  "query_10_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Tokyo"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Tokyo'."
      }
    ]
  },
  "query_369_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "johndoe@example.com",
        "title": "Product Inquiry",
        "body": "Hello John,\n\nI hope this email finds you well. I recently came across a technology article on Google that discussed a particular product, and I would like to request more details about it. Could you please provide me with additional information regarding this product?\n\nThank you in advance for your assistance.\n\nBest regards,\n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'johndoe@example.com', 'title' is 'Product Inquiry', 'body' is 'Hello John,\n\nI hope this email finds you well. I recently came across a technology article on Google that discussed a particular product, and I would like to request more details about it. Could you please provide me with additional information regarding this product?\n\nThank you in advance for your assistance.\n\nBest regards,\n[Your Name]'."
      }
    ]
  },
  "query_111_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 4807875
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '4807875'."
      }
    ]
  },
  "query_4_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 941597372112246343
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '941597372112246343'."
      }
    ]
  },
  "query_321_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Central Park, New York",
        "end": "Times Square, New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Central Park, New York', 'end' is 'Times Square, New York'."
      }
    ]
  },
  "query_190_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_58_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_165_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "EQ8shYj8Ai8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'EQ8shYj8Ai8J'."
      }
    ]
  },
  "query_68_0_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "Avengers Endgame poster"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'Avengers Endgame poster'."
      }
    ]
  },
  "query_34_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Chicago"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Chicago'."
      }
    ]
  },
  "query_246_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_69_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 8279
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '8279'."
      }
    ]
  },
  "query_417_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/hotel.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/hotel.txt'."
      }
    ]
  },
  "query_127_1_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 593322347340602809,
        "checkIn": "2023-10-25",
        "checkOut": "2023-10-27"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '593322347340602809', 'checkIn' is '2023-10-25', 'checkOut' is '2023-10-27'."
      }
    ]
  },
  "query_134_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 855819398716503903,
        "checkIn": "2023-11-10",
        "checkOut": "2023-11-15"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '855819398716503903', 'checkIn' is '2023-11-10', 'checkOut' is '2023-11-15'."
      }
    ]
  },
  "query_248_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "recent publications on quantum physics"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'recent publications on quantum physics'."
      }
    ]
  },
  "query_241_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_420_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/Daily_Journal.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/Daily_Journal.pptx'."
      }
    ]
  },
  "query_246_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_307_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "52.52342987, 13.41143608",
        "end": "52.52342987, 13.41143608"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '52.52342987, 13.41143608', 'end' is '52.52342987, 13.41143608'."
      }
    ]
  },
  "query_251_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/NumberTheoryIntroduction.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/NumberTheoryIntroduction.ppt'."
      }
    ]
  },
  "query_239_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "sR_ChBn63tIJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'sR_ChBn63tIJ'."
      }
    ]
  },
  "query_427_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "1"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is '1'."
      }
    ]
  },
  "query_185_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "attractions",
        "places": "Eiffel Tower",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'attractions', 'places' is 'Eiffel Tower', 'radius' is '1000'."
      }
    ]
  },
  "query_453_2_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Parasite",
        "bullet_items": "",
        "image": "outputs/1697982188.8931384.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Parasite', 'bullet_items' is '', 'image' is 'outputs/1697982188.8931384.jpg'."
      }
    ]
  },
  "query_133_0_13": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 51113056
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '51113056'."
      }
    ]
  },
  "query_137_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 933732691116240543
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '933732691116240543'."
      }
    ]
  },
  "query_79_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "tU0ydD3e2joJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'tU0ydD3e2joJ'."
      }
    ]
  },
  "query_450_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_289_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Golden Gate Bridge, San Francisco",
        "end": "Silicon Valley"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Golden Gate Bridge, San Francisco', 'end' is 'Silicon Valley'."
      }
    ]
  },
  "query_95_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_134_0_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Paris Trip",
        "bullet_items": "Paris is the capital city of France.[SPAN] It is known for its iconic landmarks such as the Eiffel Tower and Louvre Museum.[SPAN] The city is also famous for its cuisine and fashion."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Paris Trip', 'bullet_items' is 'Paris is the capital city of France.[SPAN] It is known for its iconic landmarks such as the Eiffel Tower and Louvre Museum.[SPAN] The city is also famous for its cuisine and fashion.'."
      }
    ]
  },
  "query_269_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "1600 Pennsylvania Ave NW, Washington, DC",
        "end": "350 5th Ave, New York, NY"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '1600 Pennsylvania Ave NW, Washington, DC', 'end' is '350 5th Ave, New York, NY'."
      }
    ]
  },
  "query_247_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Key Concepts",
        "bullet_items": "1. Data collection methods[SPAN]2. Data cleaning and preprocessing[SPAN]3. Exploratory data analysis[SPAN]4. Statistical analysis[SPAN]5. Data visualization",
        "image": "path/to/data_analysis_image.png"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Key Concepts', 'bullet_items' is '1. Data collection methods[SPAN]2. Data cleaning and preprocessing[SPAN]3. Exploratory data analysis[SPAN]4. Statistical analysis[SPAN]5. Data visualization', 'image' is 'path/to/data_analysis_image.png'."
      }
    ]
  },
  "query_250_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_9_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 585382126083893704
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '585382126083893704'."
      }
    ]
  },
  "query_148_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 51634632
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '51634632'."
      }
    ]
  },
  "query_275_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "JFK Airport",
        "end": "Times Square"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'JFK Airport', 'end' is 'Times Square'."
      }
    ]
  },
  "query_315_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_detail",
      "args": {
        "ticker": "TSLA"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_detail', 'description': 'Get a single ticker supported by Polygon.io, with detailed information about the ticker and the company behind it', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': ''}], 'optional_parameters': [], 'return_data': [{'name': 'address', 'description': 'company address'}, {'name': 'homepage_url', 'description': ''}, {'name': 'description', 'description': 'A description of the company and what they do/offer'}, {'name': 'list_date', 'description': 'The date that the symbol was first publicly listed'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_detail with the parameter as follows: 'ticker' is 'TSLA'."
      }
    ]
  },
  "query_220_2_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_246_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "history of artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'history of artificial intelligence'."
      }
    ]
  },
  "query_312_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Times Square",
        "end": "Empire State Building"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Times Square', 'end' is 'Empire State Building'."
      }
    ]
  },
  "query_296_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "current_location"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'current_location'."
      }
    ]
  },
  "query_305_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Harvard University",
        "end": "Boston Public Library"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Harvard University', 'end' is 'Boston Public Library'."
      }
    ]
  },
  "query_59_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "珍·古道尔的传奇一生"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '珍·古道尔的传奇一生'."
      }
    ]
  },
  "query_155_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 15297775
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '15297775'."
      }
    ]
  },
  "query_164_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 700888293266225258
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '700888293266225258'."
      }
    ]
  },
  "query_215_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_206_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data/research_question.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data/research_question.txt'."
      }
    ]
  },
  "query_486_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_297_1_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_10_2_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 37677930
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '37677930'."
      }
    ]
  },
  "query_470_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "efZZXguoqq8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'efZZXguoqq8J'."
      }
    ]
  },
  "query_223_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "沙丘"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '沙丘'."
      }
    ]
  },
  "query_363_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "AI_Healthcare",
        "abs_location": "outputs/AI_in_Healthcare.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'AI_Healthcare', 'abs_location' is 'outputs/AI_in_Healthcare.ppt'."
      }
    ]
  },
  "query_104_2_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Monterey Park, CA, United States"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Monterey Park, CA, United States'."
      }
    ]
  },
  "query_340_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_45_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_177_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_205_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_441_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "珍·古道尔的传奇一生"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '珍·古道尔的传奇一生'."
      }
    ]
  },
  "query_0_1_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "solar energy"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'solar energy'."
      }
    ]
  },
  "query_245_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "machine learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'machine learning'."
      }
    ]
  },
  "query_212_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_191_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "university",
        "places": "1600 Pennsylvania Avenue NW, Washington, DC 20500",
        "latitude": 38.8977,
        "longitude": -77.0365,
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'university', 'places' is '1600 Pennsylvania Avenue NW, Washington, DC 20500', 'latitude' is '38.8977', 'longitude' is '-77.0365', 'radius' is '5000'."
      }
    ]
  },
  "query_312_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "The Irish American"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'The Irish American'."
      }
    ]
  },
  "query_305_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Harvard University",
        "end": "Boston Public Library"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Harvard University', 'end' is 'Boston Public Library'."
      }
    ]
  },
  "query_196_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_206_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_similar_movies",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_similar_movies', 'description': 'Get the similar movies based on genres and keywords', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_similar_movies with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_187_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "New York",
        "end": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'New York', 'end' is 'San Francisco'."
      }
    ]
  },
  "query_226_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_372_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Project Update",
        "abs_location": "outputs/Project_Update_Presentation.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Project Update', 'abs_location' is 'outputs/Project_Update_Presentation.pptx'."
      }
    ]
  },
  "query_4_1_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 667316357375615620
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '667316357375615620'."
      }
    ]
  },
  "query_365_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "selJwfIN0t8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'selJwfIN0t8J'."
      }
    ]
  },
  "query_372_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_111_1_11": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "Queens, NY, United States",
        "latitude": 40.75977707,
        "longitude": -73.81729889,
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'Queens, NY, United States', 'latitude' is '40.75977707', 'longitude' is '-73.81729889', 'radius' is '500'."
      }
    ]
  },
  "query_196_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_17_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 2109
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '2109'."
      }
    ]
  },
  "query_114_2_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 727017675359552471
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '727017675359552471'."
      }
    ]
  },
  "query_139_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "WLaj9ZUvTjoJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'WLaj9ZUvTjoJ'."
      }
    ]
  },
  "query_221_1_11": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "驯龙高手"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is '驯龙高手'."
      }
    ]
  },
  "query_14_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: ."
      }
    ]
  },
  "query_191_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "1600 Pennsylvania Avenue NW, Washington, DC 20500",
        "end": "655 15th St NW, Washington, DC, 20005"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '1600 Pennsylvania Avenue NW, Washington, DC 20500', 'end' is '655 15th St NW, Washington, DC, 20005'."
      }
    ]
  },
  "query_305_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "sushi restaurant",
        "latitude": 34.0466423,
        "longitude": -118.25205994,
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'sushi restaurant', 'latitude' is '34.0466423', 'longitude' is '-118.25205994', 'radius' is '5000'."
      }
    ]
  },
  "query_200_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_333_1_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "employee benefits"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'employee benefits'."
      }
    ]
  },
  "query_14_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_463_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 212778
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '212778'."
      }
    ]
  },
  "query_351_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_24_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Weather.forecast_weather",
      "args": {
        "location": "Cambridge, MA",
        "days": 1
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.forecast_weather', 'description': 'forecast weather in the N upcoming days', 'required_parameters': [{'name': 'location', 'description': '', 'type': 'STRING'}, {'name': 'days', 'description': 'the N number of days later, maximum N is 3', 'type': 'NUMBER'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list weather forecast of N days, including date, overall weather and temperature'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Weather.forecast_weather with the parameter as follows: 'location' is 'Cambridge, MA', 'days' is '1'."
      }
    ]
  },
  "query_322_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Seattle",
        "end": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Seattle', 'end' is 'San Francisco'."
      }
    ]
  },
  "query_408_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "aTI2DQaQV8gJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'aTI2DQaQV8gJ'."
      }
    ]
  },
  "query_172_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 38677942,
        "date": "2023-12-01"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '38677942', 'date' is '2023-12-01'."
      }
    ]
  },
  "query_444_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "星际穿越"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '星际穿越'."
      }
    ]
  },
  "query_312_2_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_114_2_9": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "San Francisco",
        "latitude": 37.79108,
        "longitude": -122.42006,
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'San Francisco', 'latitude' is '37.79108', 'longitude' is '-122.42006', 'radius' is '500'."
      }
    ]
  },
  "query_79_1_9": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_174_1_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 727017675359552471
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '727017675359552471'."
      }
    ]
  },
  "query_290_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurants",
        "latitude": 40.6892,
        "longitude": -74.0445,
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurants', 'latitude' is '40.6892', 'longitude' is '-74.0445', 'radius' is '1000'."
      }
    ]
  },
  "query_221_2_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Science Experiments",
        "bullet_items": "",
        "image": "outputs/1697752346.531927.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Science Experiments', 'bullet_items' is '', 'image' is 'outputs/1697752346.531927.jpg'."
      }
    ]
  },
  "query_36_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "editor@example.com",
        "title": "Article Submission",
        "body": "Dear Editor, I have written a new article on the topic of climate change. Please find the attached article for your review. Thank you. Best regards, Sarah"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'editor@example.com', 'title' is 'Article Submission', 'body' is 'Dear Editor, I have written a new article on the topic of climate change. Please find the attached article for your review. Thank you. Best regards, Sarah'."
      }
    ]
  },
  "query_121_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_470_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 278
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '278'."
      }
    ]
  },
  "query_30_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "gas stations",
        "places": "Los Angeles",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'gas stations', 'places' is 'Los Angeles', 'radius' is '5000'."
      }
    ]
  },
  "query_144_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "红猪"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '红猪'."
      }
    ]
  },
  "query_34_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Chicago",
        "end": "Muchin College Prep"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Chicago', 'end' is 'Muchin College Prep'."
      }
    ]
  },
  "query_303_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "attractions",
        "places": "Times Square, New York City",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'attractions', 'places' is 'Times Square, New York City', 'radius' is '1000'."
      }
    ]
  },
  "query_136_2_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 28722771,
        "checkIn": "2023-11-20",
        "checkOut": "2023-11-27"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '28722771', 'checkIn' is '2023-11-20', 'checkOut' is '2023-11-27'."
      }
    ]
  },
  "query_45_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'New York'."
      }
    ]
  },
  "query_295_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Central Park",
        "end": "AMC Empire 25 cinema"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Central Park', 'end' is 'AMC Empire 25 cinema'."
      }
    ]
  },
  "query_470_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Pavel Hamet"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Pavel Hamet'."
      }
    ]
  },
  "query_471_2_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_392_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "movie_details.txt",
        "text": "In 1956 France, a priest is violently murdered, and Sister Irene begins to investigate. She once again comes face-to-face with a powerful evil."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'movie_details.txt', 'text' is 'In 1956 France, a priest is violently murdered, and Sister Irene begins to investigate. She once again comes face-to-face with a powerful evil.'."
      }
    ]
  },
  "query_470_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_57_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_272_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_28_0_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Sofitel New York",
        "end": "Central Park"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Sofitel New York', 'end' is 'Central Park'."
      }
    ]
  },
  "query_172_2_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 51113056
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '51113056'."
      }
    ]
  },
  "query_201_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_104_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'New York City'."
      }
    ]
  },
  "query_105_0_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 51113056
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '51113056'."
      }
    ]
  },
  "query_172_2_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 51113056
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '51113056'."
      }
    ]
  },
  "query_256_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "IBM"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'IBM'."
      }
    ]
  },
  "query_82_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "lunch recipes"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'lunch recipes'."
      }
    ]
  },
  "query_377_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "eventattendees@example.com",
        "title": "Upcoming Event Notification",
        "body": "Dear attendees,\n\nThis is a reminder that the upcoming event will take place on [DATE]. Today is [WEEKDAY], and we hope to see you there!\n\nBest regards,\nYour Event Organizer"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'eventattendees@example.com', 'title' is 'Upcoming Event Notification', 'body' is 'Dear attendees,\n\nThis is a reminder that the upcoming event will take place on [DATE]. Today is [WEEKDAY], and we hope to see you there!\n\nBest regards,\nYour Event Organizer'."
      }
    ]
  },
  "query_193_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "University of California, Berkeley"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'University of California, Berkeley'."
      }
    ]
  },
  "query_25_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "attendee1@example.com",
        "title": "Thank You for Attending the Event",
        "body": "Dear Attendee 1, \n\nThank you for attending our event at 789 Park Ave, New York. We hope you had a great time and found it informative. If you have any further questions or feedback, please don't hesitate to reach out to us. \n\nBest regards, \nEvent Planner"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'attendee1@example.com', 'title' is 'Thank You for Attending the Event', 'body' is 'Dear Attendee 1, \n\nThank you for attending our event at 789 Park Ave, New York. We hope you had a great time and found it informative. If you have any further questions or feedback, please don't hesitate to reach out to us. \n\nBest regards, \nEvent Planner'."
      }
    ]
  },
  "query_164_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'San Francisco'."
      }
    ]
  },
  "query_104_2_10": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_133_0_14": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 44783505
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '44783505'."
      }
    ]
  },
  "query_156_1_9": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "35.70468,139.77436",
        "keywords": "restaurant"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '35.70468,139.77436', 'keywords' is 'restaurant'."
      }
    ]
  },
  "query_270_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "tourist attractions",
        "places": "The Ritz-Carlton, New York",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'tourist attractions', 'places' is 'The Ritz-Carlton, New York', 'radius' is '5000'."
      }
    ]
  },
  "query_152_0_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_30_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "safety of road trips"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'safety of road trips'."
      }
    ]
  },
  "query_11_1_15": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Property 3: Hostel in El Prat de Llobregat",
        "bullet_items": "Property Type: Room in hostel\nCapacity: 1 person\nRating: 4.47\nLatitude: 41.3238\nLongitude: 2.09509"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Property 3: Hostel in El Prat de Llobregat', 'bullet_items' is 'Property Type: Room in hostel\nCapacity: 1 person\nRating: 4.47\nLatitude: 41.3238\nLongitude: 2.09509'."
      }
    ]
  },
  "query_402_2_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "trends in movie genres"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'trends in movie genres'."
      }
    ]
  },
  "query_0_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'San Francisco'."
      }
    ]
  },
  "query_21_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "14:00",
        "end_time": "16:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '14:00', 'end_time' is '16:00'."
      }
    ]
  },
  "query_206_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "data analysis"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'data analysis'."
      }
    ]
  },
  "query_456_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "珍·古道尔的传奇一生",
        "bullet_items": "导演: 布莱特·摩根\n主演: 简·古道尔, 雨果·凡·拉维克, 雨果·埃里克·路易斯·凡·拉维克\n评分: 9.2",
        "image": "outputs/1697986163.8543074.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is '珍·古道尔的传奇一生', 'bullet_items' is '导演: 布莱特·摩根\n主演: 简·古道尔, 雨果·凡·拉维克, 雨果·埃里克·路易斯·凡·拉维克\n评分: 9.2', 'image' is 'outputs/1697986163.8543074.jpg'."
      }
    ]
  },
  "query_226_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'quantum computing'."
      }
    ]
  },
  "query_407_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_227_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": 103,
        "start_time": "14:30",
        "end_time": "15:30"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '103', 'start_time' is '14:30', 'end_time' is '15:30'."
      }
    ]
  },
  "query_47_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 575264
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '575264'."
      }
    ]
  },
  "query_1_0_7": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurant",
        "places": "Minato City, Tokyo, Japan",
        "radius": 500
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurant', 'places' is 'Minato City, Tokyo, Japan', 'radius' is '500'."
      }
    ]
  },
  "query_291_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_information",
      "args": {
        "author_id": "0juNTSgAAAAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_information', 'description': \"Search for an author's information by author's id provided by get_author_id.\", 'required_parameters': [{'name': 'author_id', 'type': 'STRING', 'description': 'unique ID of the author'}], 'optional_parameters': [], 'return_data': [{'name': 'name', 'description': 'author name'}, {'name': 'affliation', 'description': 'affliation of the author'}, {'name': 'articles', 'description': 'at most 3 articles by the author'}, {'name': 'website', 'description': \"the authors's homepage url\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_information with the parameter as follows: 'author_id' is '0juNTSgAAAAJ'."
      }
    ]
  },
  "query_449_1_16": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "一闪一闪亮星星"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is '一闪一闪亮星星'."
      }
    ]
  },
  "query_345_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "friend@example.com",
        "title": "Recommendation for Movie Night",
        "body": "Hey friend, I suggest we watch the movie 'Inception' for our movie night. It's a mind-bending and thrilling film directed by Christopher Nolan. I'm sure you'll enjoy it. Let me know what you think!",
        "attachment": ""
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'friend@example.com', 'title' is 'Recommendation for Movie Night', 'body' is 'Hey friend, I suggest we watch the movie 'Inception' for our movie night. It's a mind-bending and thrilling film directed by Christopher Nolan. I'm sure you'll enjoy it. Let me know what you think!', 'attachment' is ''."
      }
    ]
  },
  "query_228_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_148_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 691676460109271194
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '691676460109271194'."
      }
    ]
  },
  "query_177_1_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 10803849
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '10803849'."
      }
    ]
  },
  "query_348_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_118_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 10803849
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '10803849'."
      }
    ]
  },
  "query_393_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": 102,
        "start_time": "14:00",
        "end_time": "15:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '14:00', 'end_time' is '15:00'."
      }
    ]
  },
  "query_27_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Central Park",
        "end": "Pizza Restaurant"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Central Park', 'end' is 'Pizza Restaurant'."
      }
    ]
  },
  "query_172_2_14": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.reserve",
      "args": {
        "room_id": "102",
        "start_time": "19:00",
        "end_time": "20:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.reserve', 'description': 'Book the meeting room today using the room id provided by `check_empty`', 'required_parameters': [{'name': 'room_id', 'description': 'the room you want to book', 'type': 'STRING'}, {'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'state', 'description': 'the state of the booking'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.reserve with the parameter as follows: 'room_id' is '102', 'start_time' is '19:00', 'end_time' is '20:00'."
      }
    ]
  },
  "query_229_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Introduction to Programming",
        "bullet_items": "Variables[SPAN]Loops[SPAN]Functions"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Introduction to Programming', 'bullet_items' is 'Variables[SPAN]Loops[SPAN]Functions'."
      }
    ]
  },
  "query_347_1_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_336_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_292_0_4": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 124807
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '124807'."
      }
    ]
  },
  "query_92_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 49634091,
        "checkIn": "2023-10-25",
        "checkOut": "2023-10-28"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '49634091', 'checkIn' is '2023-10-25', 'checkOut' is '2023-10-28'."
      }
    ]
  },
  "query_297_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "New York City",
        "end": "Los Angeles"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'New York City', 'end' is 'Los Angeles'."
      }
    ]
  },
  "query_299_0_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "40.757972, -73.985536",
        "end": "151 W 46th St, New York, NY, 10036"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is '40.757972, -73.985536', 'end' is '151 W 46th St, New York, NY, 10036'."
      }
    ]
  },
  "query_392_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 968051
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '968051'."
      }
    ]
  },
  "query_392_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_285_1_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_247_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Key Points about Deep Learning",
        "bullet_items": "1. Deep learning is a subfield of machine learning\n2. It focuses on learning representations of data through multiple layers of neural networks\n3. Deep learning has achieved great success in various fields\n4. Understanding the internal mechanism of deep learning is important for its development and effective application\n5. Deep learning is based on mathematics and can be examined from different perspectives\n6. Concepts are the foundation of human deep learning\n7. Concept-oriented deep learning extends machine deep learning with concept representations and understanding capability\n8. Deep learning research landscape and roadmap provides insights into the past, present, and future of deep learning"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Key Points about Deep Learning', 'bullet_items' is '1. Deep learning is a subfield of machine learning\n2. It focuses on learning representations of data through multiple layers of neural networks\n3. Deep learning has achieved great success in various fields\n4. Understanding the internal mechanism of deep learning is important for its development and effective application\n5. Deep learning is based on mathematics and can be examined from different perspectives\n6. Concepts are the foundation of human deep learning\n7. Concept-oriented deep learning extends machine deep learning with concept representations and understanding capability\n8. Deep learning research landscape and roadmap provides insights into the past, present, and future of deep learning'."
      }
    ]
  },
  "query_25_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "attraction",
        "places": "789 Park Ave, New York",
        "latitude": 40.7715133,
        "longitude": -73.9632433,
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'attraction', 'places' is '789 Park Ave, New York', 'latitude' is '40.7715133', 'longitude' is '-73.9632433', 'radius' is '5000'."
      }
    ]
  },
  "query_251_2_4": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_218_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "latest news about quantum computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'latest news about quantum computing'."
      }
    ]
  },
  "query_372_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_94_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "火山挚恋"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '火山挚恋'."
      }
    ]
  },
  "query_377_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Microsoft"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Microsoft'."
      }
    ]
  },
  "query_182_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "hotel",
        "places": "JFK Airport"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'hotel', 'places' is 'JFK Airport'."
      }
    ]
  },
  "query_344_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.aggregate_stock_with_time",
      "args": {
        "ticker": "AAPL",
        "multiplier": 1,
        "timespan": "day",
        "from": "2023-10-10",
        "to": "2023-10-17"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.aggregate_stock_with_time', 'description': 'get aggregate bars for a stock over a given date range in custom time window sizes', 'required_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'The ticker symbol of the stock/equity'}, {'name': 'multiplier', 'type': 'NUMBER', 'description': 'The size of the timespan multiplier'}, {'name': 'timespan', 'type': 'STRING', 'description': \"The size of the time window, supported 'day', 'hour', 'week'\"}, {'name': 'from', 'type': 'STRING', 'description': 'The start of the aggregate time window with the format YYYY-MM-DD'}, {'name': 'to', 'type': 'STRING', 'description': 'The end of the aggregate time window with the format YYYY-MM-DD'}], 'optional_parameters': [], 'return_data': [{'name': 'results', 'description': 'list of dict including the open and closed price in the given time period and the unix msec timestamp for the start of the aggregate window'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.aggregate_stock_with_time with the parameter as follows: 'ticker' is 'AAPL', 'multiplier' is '1', 'timespan' is 'day', 'from' is '2023-10-10', 'to' is '2023-10-17'."
      }
    ]
  },
  "query_226_1_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_444_2_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/study_presentation.pptx"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/study_presentation.pptx'."
      }
    ]
  },
  "query_347_2_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "participants@example.com",
        "title": "Event Reminder",
        "body": "Just a reminder that the event is tomorrow"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'participants@example.com', 'title' is 'Event Reminder', 'body' is 'Just a reminder that the event is tomorrow'."
      }
    ]
  },
  "query_220_2_13": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "功夫熊猫"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '功夫熊猫'."
      }
    ]
  },
  "query_348_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_65_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "The Godfather cast"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'The Godfather cast'."
      }
    ]
  },
  "query_1_0_6": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 37677930
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '37677930'."
      }
    ]
  },
  "query_256_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "financial markets"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'financial markets'."
      }
    ]
  },
  "query_251_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/DataAnalysisTechniques.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/DataAnalysisTechniques.ppt'."
      }
    ]
  },
  "query_103_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 52047578
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '52047578'."
      }
    ]
  },
  "query_221_2_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Science Experiments",
        "bullet_items": "",
        "image": "science_experiment.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Science Experiments', 'bullet_items' is '', 'image' is 'science_experiment.jpg'."
      }
    ]
  },
  "query_348_2_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_empty_room_with_time",
      "args": {
        "start_time": "15:00",
        "end_time": "17:00"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_empty_room_with_time', 'description': 'if they are any rooms available in the provided time', 'required_parameters': [{'name': 'start_time', 'description': 'the start booked time, must be in 24 hour format, e.g. 13:15', 'type': 'STRING'}, {'name': 'end_time', 'description': 'the end booked time, must be in 24 hour format, e.g. 22:21', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of available room ids'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_empty_room_with_time with the parameter as follows: 'start_time' is '15:00', 'end_time' is '17:00'."
      }
    ]
  },
  "query_310_2_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "impact of tourism on New York City's economy"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'impact of tourism on New York City's economy'."
      }
    ]
  },
  "query_192_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "Amsterdam"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'Amsterdam'."
      }
    ]
  },
  "query_164_1_7": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "Research",
        "abs_location": "outputs/research_findings.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'Research', 'abs_location' is 'outputs/research_findings.ppt'."
      }
    ]
  },
  "query_17_2_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 2503
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '2503'."
      }
    ]
  },
  "query_270_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "742 Evergreen Terrace"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is '742 Evergreen Terrace'."
      }
    ]
  },
  "query_312_1_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_228_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_79_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Summary of Selected Paper",
        "bullet_items": "Title: Machine learning techniques for anomaly detection: an overview\nAuthor: Salima Omar, Asri Ngadi, Hamid H. Jebur\nYear: 2013\nJournal: International Journal of Computer Applications\nCitation: Omar, S., Ngadi, A., & Jebur, H. H. (2013). Machine learning techniques for anomaly detection: an overview. International Journal of Computer Applications, 79(2)."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Summary of Selected Paper', 'bullet_items' is 'Title: Machine learning techniques for anomaly detection: an overview\nAuthor: Salima Omar, Asri Ngadi, Hamid H. Jebur\nYear: 2013\nJournal: International Journal of Computer Applications\nCitation: Omar, S., Ngadi, A., & Jebur, H. H. (2013). Machine learning techniques for anomaly detection: an overview. International Journal of Computer Applications, 79(2).'."
      }
    ]
  },
  "query_55_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 238
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '238'."
      }
    ]
  },
  "query_42_0_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "client@example.com",
        "title": "Meeting Confirmation",
        "body": "Dear Client,\n\nI am writing to confirm our meeting scheduled for tomorrow. The meeting will take place between 9:00 AM and 12:00 PM.\n\nI am pleased to inform you that I have secured a meeting room for our discussion. The details of the room are as follows:\n\nRoom Number: 102\n\nPlease let me know if you have any questions or if there are any changes to our meeting schedule.\n\nLooking forward to meeting you.\n\nBest regards,\n[Your Name]"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'client@example.com', 'title' is 'Meeting Confirmation', 'body' is 'Dear Client,\n\nI am writing to confirm our meeting scheduled for tomorrow. The meeting will take place between 9:00 AM and 12:00 PM.\n\nI am pleased to inform you that I have secured a meeting room for our discussion. The details of the room are as follows:\n\nRoom Number: 102\n\nPlease let me know if you have any questions or if there are any changes to our meeting schedule.\n\nLooking forward to meeting you.\n\nBest regards,\n[Your Name]'."
      }
    ]
  },
  "query_289_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "restaurants",
        "places": "Times Square, New York City",
        "radius": 1000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'restaurants', 'places' is 'Times Square, New York City', 'radius' is '1000'."
      }
    ]
  },
  "query_55_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_172_2_17": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 38677942,
        "checkIn": "2023-12-01",
        "checkOut": "2023-12-31"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '38677942', 'checkIn' is '2023-12-01', 'checkOut' is '2023-12-31'."
      }
    ]
  },
  "query_143_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 4195503
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '4195503'."
      }
    ]
  },
  "query_348_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_453_1_11": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "雪豹和她的朋友们",
        "bullet_items": "雪豹和她的朋友们是一部中国大陆的纪录片，由奚志农导演，朱亚文主演。\n\n剧情简介：暂无剧情简介。"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is '雪豹和她的朋友们', 'bullet_items' is '雪豹和她的朋友们是一部中国大陆的纪录片，由奚志农导演，朱亚文主演。\n\n剧情简介：暂无剧情简介。'."
      }
    ]
  },
  "query_41_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "sales@example.com",
        "title": "New Marketing Strategy Proposal",
        "body": "Dear team, I have prepared a new marketing strategy proposal for our upcoming campaign. Please review it and let me know your thoughts. Attached is the PDF file of the proposal. Regards, John Doe",
        "attachment": "path/to/proposal.pdf"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'sales@example.com', 'title' is 'New Marketing Strategy Proposal', 'body' is 'Dear team, I have prepared a new marketing strategy proposal for our upcoming campaign. Please review it and let me know your thoughts. Attached is the PDF file of the proposal. Regards, John Doe', 'attachment' is 'path/to/proposal.pdf'."
      }
    ]
  },
  "query_148_1_9": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 700888293266225258,
        "date": "2023-10-19"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '700888293266225258', 'date' is '2023-10-19'."
      }
    ]
  },
  "query_221_1_9": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "奥本海默",
        "bullet_items": "Category: 剧情、传记、历史电影\nRegion: 美国 / 英国\nNumber of Interested Viewers: 8.9\nSynopsis: 奥本海默是一部美国/英国的剧情、传记、历史电影，由克里斯托弗·诺兰导演，基里安·墨菲、艾米莉·布朗特、马特·达蒙等人主演。剧情简介：当我们为权力金钱焦虑、兴奋与愤怒时，却根本想象不到“他们”在谈论着怎样更重要的事情。",
        "image": "outputs/1697752236.1743202.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is '奥本海默', 'bullet_items' is 'Category: 剧情、传记、历史电影\nRegion: 美国 / 英国\nNumber of Interested Viewers: 8.9\nSynopsis: 奥本海默是一部美国/英国的剧情、传记、历史电影，由克里斯托弗·诺兰导演，基里安·墨菲、艾米莉·布朗特、马特·达蒙等人主演。剧情简介：当我们为权力金钱焦虑、兴奋与愤怒时，却根本想象不到“他们”在谈论着怎样更重要的事情。', 'image' is 'outputs/1697752236.1743202.jpg'."
      }
    ]
  },
  "query_260_0_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FileOperation.write_file",
      "args": {
        "file_path": "outputs/attractions.txt",
        "text": "{places}"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.write_file', 'description': 'write file to disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}, {'name': 'text', 'type': 'STRING', 'description': 'The text needed to write.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the status of the operation.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.write_file with the parameter as follows: 'file_path' is 'outputs/attractions.txt', 'text' is '{places}'."
      }
    ]
  },
  "query_76_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "artificial intelligence ethics"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'artificial intelligence ethics'."
      }
    ]
  },
  "query_269_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "1 Infinite Loop, Cupertino, CA",
        "end": "1600 Pennsylvania Ave NW, Washington, DC"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is '1 Infinite Loop, Cupertino, CA', 'end' is '1600 Pennsylvania Ave NW, Washington, DC'."
      }
    ]
  },
  "query_7_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 25547075
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '25547075'."
      }
    ]
  },
  "query_307_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Times Square",
        "end": "Statue of Liberty"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Times Square', 'end' is 'Statue of Liberty'."
      }
    ]
  },
  "query_1_0_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": 48596594
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '48596594'."
      }
    ]
  },
  "query_430_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_456_0_7": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "奥本海默",
        "bullet_items": "导演: 克里斯托弗·诺兰\n主演: 基里安·墨菲, 艾米莉·布朗特, 马特·达蒙\n评分: 8.9",
        "image": "outputs/1697986236.8698277.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is '奥本海默', 'bullet_items' is '导演: 克里斯托弗·诺兰\n主演: 基里安·墨菲, 艾米莉·布朗特, 马特·达蒙\n评分: 8.9', 'image' is 'outputs/1697986236.8698277.jpg'."
      }
    ]
  },
  "query_363_2_8": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Key Strategies",
        "bullet_items": "1. Building Rapport\n2. Active Listening\n3. Solution-Oriented Selling\n4. Upselling and Cross-Selling\n5. Follow-Up and Customer Relationship Management",
        "image": "outputs/1697991556.7474115.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Key Strategies', 'bullet_items' is '1. Building Rapport\n2. Active Listening\n3. Solution-Oriented Selling\n4. Upselling and Cross-Selling\n5. Follow-Up and Customer Relationship Management', 'image' is 'outputs/1697991556.7474115.jpg'."
      }
    ]
  },
  "query_332_2_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_453_1_8": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "驯龙高手"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '驯龙高手'."
      }
    ]
  },
  "query_246_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "data analysis"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'data analysis'."
      }
    ]
  },
  "query_335_0_3": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PolygonFinance.search_stock_ticker",
      "args": {
        "search": "Apple Inc"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.search_stock_ticker', 'description': 'get the stock ticker given the company name', 'required_parameters': [{'name': 'search', 'type': 'STRING', 'description': 'search for terms within the ticker and/or company name'}], 'optional_parameters': [], 'return_data': [{'name': 'ticker', 'description': 'The exchange symbol that this item is traded under'}, {'name': 'name', 'description': 'The name of the asset'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.search_stock_ticker with the parameter as follows: 'search' is 'Apple Inc'."
      }
    ]
  },
  "query_118_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 48347678
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '48347678'."
      }
    ]
  },
  "query_406_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "-jKcSxGaARwJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is '-jKcSxGaARwJ'."
      }
    ]
  },
  "query_431_2_13": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "Inception movie review"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'Inception movie review'."
      }
    ]
  },
  "query_211_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ArxivSearch.get_arxiv_article_information",
      "args": {
        "query": "artificial intelligence"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ArxivSearch.get_arxiv_article_information', 'description': 'Run Arxiv search and get the article meta information.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'a list of 3 arxiv search papers, including published date, title, authors, and summary'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ArxivSearch.get_arxiv_article_information with the parameter as follows: 'query' is 'artificial intelligence'."
      }
    ]
  },
  "query_251_0_5": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_image_page",
      "args": {
        "title": "Image related to Quantum Computing",
        "bullet_items": "Introduction to Quantum Computing[SPAN]Quantum Computing Applications[SPAN]Challenges in Quantum Computing",
        "image": "outputs/1697777634.9573996.jpg"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_image_page', 'description': 'Add a text page with one image. Image should be a path', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}, {'name': 'image', 'type': 'STRING', 'description': 'the path of the image'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_image_page with the parameter as follows: 'title' is 'Image related to Quantum Computing', 'bullet_items' is 'Introduction to Quantum Computing[SPAN]Quantum Computing Applications[SPAN]Challenges in Quantum Computing', 'image' is 'outputs/1697777634.9573996.jpg'."
      }
    ]
  },
  "query_292_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Las Vegas"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Las Vegas'."
      }
    ]
  },
  "query_143_2_13": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.get_image",
      "args": {
        "keywords": "New York skyline"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.get_image', 'description': 'Get an image given keywords from Internet, return the image path', 'required_parameters': [{'name': 'keywords', 'type': 'STRING', 'description': 'the comma separated keywords to describe the image'}], 'optional_parameters': [], 'return_data': [{'name': 'picture_url', 'description': 'the file path to the searched image'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.get_image with the parameter as follows: 'keywords' is 'New York skyline'."
      }
    ]
  },
  "query_290_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_70_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GaodeMap.search_nearby",
      "args": {
        "location": "116.674652,28.996885",
        "keywords": "eateries"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GaodeMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': \"The coordinate of the location, format with 'lon,lat'\"}, {'name': 'keywords', 'type': 'STRING', 'description': 'The search type, e.g., restaurant, school'}], 'optional_parameters': [], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GaodeMap.search_nearby with the parameter as follows: 'location' is '116.674652,28.996885', 'keywords' is 'eateries'."
      }
    ]
  },
  "query_221_0_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Minimax Deviation Strategies for Machine Learning and Recognition with Short Learning Samples",
        "bullet_items": "Authors: Michail Schlesinger, Evgeniy Vodolazskiy\nSummary: The article is devoted to the problem of small learning samples in machine learning. The flaws of maximum likelihood learning and minimax learning are looked into and the concept of minimax deviation learning is introduced that is free of those flaws."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Minimax Deviation Strategies for Machine Learning and Recognition with Short Learning Samples', 'bullet_items' is 'Authors: Michail Schlesinger, Evgeniy Vodolazskiy\nSummary: The article is devoted to the problem of small learning samples in machine learning. The flaws of maximum likelihood learning and minimax learning are looked into and the concept of minimax deviation learning is introduced that is free of those flaws.'."
      }
    ]
  },
  "query_219_1_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_30_1_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "REp4OmsiCXIJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'REp4OmsiCXIJ'."
      }
    ]
  },
  "query_454_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.coming_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.coming_out_filter', 'description': 'prints the details of the filtered [outNum] coming films in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'cate', 'type': 'STRING', 'description': 'the category of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.coming_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_190_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "University of California, Berkeley",
        "end": "Massachusetts Institute of Technology"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'University of California, Berkeley', 'end' is 'Massachusetts Institute of Technology'."
      }
    ]
  },
  "query_420_1_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/hotel.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/hotel.txt'."
      }
    ]
  },
  "query_470_1_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "6HqcEiwmoJIJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is '6HqcEiwmoJIJ'."
      }
    ]
  },
  "query_151_1_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.create_file",
      "args": {
        "theme": "default",
        "abs_location": "outputs/EventDetails.ppt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.create_file', 'description': 'Create a pptx file with specific themes', 'required_parameters': [{'name': 'theme', 'type': 'STRING', 'description': 'the theme used'}, {'name': 'abs_location', 'type': 'STRING', 'description': \"the ppt file's absolute saving location\"}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.create_file with the parameter as follows: 'theme' is 'default', 'abs_location' is 'outputs/EventDetails.ppt'."
      }
    ]
  },
  "query_174_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "San Francisco"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'San Francisco'."
      }
    ]
  },
  "query_100_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_369_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Weather.get_weather_today",
      "args": {
        "location": "New York City"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Weather.get_weather_today', 'description': \"get today's weather\", 'required_parameters': [{'name': 'location', 'description': 'the location name', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'overall', 'description': ''}, {'name': 'avg temperature', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Weather.get_weather_today with the parameter as follows: 'location' is 'New York City'."
      }
    ]
  },
  "query_71_1_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "What are the reviews for 荐慤堂·海鲜自助 in Shanghai?"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'What are the reviews for 荐慤堂·海鲜自助 in Shanghai?'."
      }
    ]
  },
  "query_277_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "gas station",
        "places": "123 Main Street",
        "radius": 2000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'gas station', 'places' is '123 Main Street', 'radius' is '2000'."
      }
    ]
  },
  "query_1_1_6": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 997382
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '997382'."
      }
    ]
  },
  "query_250_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_88_2_2": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Events of World War II",
        "bullet_items": "Invasion of Poland, Battle of Stalingrad, D-Day, Atomic Bombing of Hiroshima and Nagasaki"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Events of World War II', 'bullet_items' is 'Invasion of Poland, Battle of Stalingrad, D-Day, Atomic Bombing of Hiroshima and Nagasaki'."
      }
    ]
  },
  "query_314_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleSearch.serper_search",
      "args": {
        "query": "Kuta Beach information"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleSearch.serper_search', 'description': 'A google search API. You can use it when you want to get answer about specific `questions.', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the content of search query'}], 'optional_parameters': [], 'return_data': [{'name': 'content', 'description': 'at most 3 items of google search results'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleSearch.serper_search with the parameter as follows: 'query' is 'Kuta Beach information'."
      }
    ]
  },
  "query_2_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 667316357375615620
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '667316357375615620'."
      }
    ]
  },
  "query_69_0_10": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 19404
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '19404'."
      }
    ]
  },
  "query_478_0_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_popular_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_popular_movies', 'description': 'Get a list of movies ordered by popularity', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by popularity, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_popular_movies with the parameter as follows: ."
      }
    ]
  },
  "query_349_2_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_447_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_53_1_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_281_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "Paris",
        "end": "London"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'Paris', 'end' is 'London'."
      }
    ]
  },
  "query_338_2_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.now_playing_out_filter",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.now_playing_out_filter', 'description': 'prints the details of the filtered [outNum] playing films now in China', 'required_parameters': [], 'optional_parameters': [{'name': 'region', 'type': 'STRING', 'description': 'the region of search query, and the parameter must in Chinese.'}, {'name': 'outNum', 'type': 'NUMBER', 'description': 'the number of search query'}], 'return_data': [{'name': 'film', 'description': 'a list of film information, including date, title, cate, region, wantWatchPeopleNum, link'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.now_playing_out_filter with the parameter as follows: ."
      }
    ]
  },
  "query_352_1_0": {
    "template": {
      "thought_start": "goal:",
      "thought_end": "\n\n",
      "action_start": "name:",
      "action_end": "\n\n",
      "args_start": "args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease generate the response in the following format:\ngoal: goal to call this action\n\nname: api name to call\n\nargs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_14_1_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "jane.doe@example.com",
        "title": "Top 3 Articles on Machine Learning in Healthcare",
        "body": "Here are the top three articles on machine learning in healthcare:\n\n1. Title: Fair Machine Learning in Healthcare: A Review\n   Authors: Qizhang Feng, Mengnan Du, Na Zou, Xia Hu\n   Summary: Benefiting from the digitization of healthcare data and the development of computing power, machine learning methods are increasingly used in the healthcare domain. Fairness problems have been identified in machine learning for healthcare, resulting in an unfair allocation of limited healthcare resources or excessive health risks for certain groups. Therefore, addressing the fairness problems has recently attracted increasing attention from the healthcare community. However, the intersection of machine learning for healthcare and fairness in machine learning remains understudied. In this review, we build the bridge by exposing fairness problems, summarizing possible biases, sorting out mitigation methods and pointing out challenges along with opportunities for the future.\n\n2. Title: Machine Learning Applications In Healthcare: The State Of Knowledge and Future Directions\n   Authors: Mrinmoy Roy, Sarwar J. Minar, Porarthi Dhar, A T M Omor Faruq\n   Summary: Detection of easily missed hidden patterns with fast processing power makes machine learning (ML) indispensable to today's healthcare system. Though many ML applications have already been discovered and many are still under investigation, only a few have been adopted by current healthcare systems. As a result, there exists an enormous opportunity in the healthcare system for ML but distributed information, scarcity of properly arranged and easily explainable documentation in the related sector are major impediments that are making ML applications difficult for healthcare professionals. This study aimed to gather ML applications in different areas of healthcare concisely and more effectively so that necessary information can be accessed immediately with relevant references. We divided our study into five major groups: community level work, risk management/preventive care, healthcare operation management, remote care, and early detection. Dividing these groups into subgroups, we provided relevant references with a description in tabular form for quick access. Our objective is to inform people about ML applicability in the healthcare industry, reduce the knowledge gap of clinicians about the ML applications, and motivate healthcare professionals towards a more machine learning-based healthcare system.\n\n3. Title: Probabilistic Machine Learning for Healthcare\n   Authors: Irene Y. Chen, Shalmali Joshi, Marzyeh Ghassemi, Rajesh Ranganath\n   Summary: Machine learning can be used to make sense of healthcare data. Probabilistic machine learning models help provide a complete picture of observed data in healthcare. In this review, we examine how probabilistic machine learning can advance healthcare. We consider challenges in the predictive model building pipeline where probabilistic models can be beneficial, including calibration and missing data. Beyond predictive models, we also investigate the utility of probabilistic machine learning models in phenotyping, in generative models for clinical use cases, and in reinforcement learning.\n\nPlease find attached the full articles for your reference."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'jane.doe@example.com', 'title' is 'Top 3 Articles on Machine Learning in Healthcare', 'body' is 'Here are the top three articles on machine learning in healthcare:\n\n1. Title: Fair Machine Learning in Healthcare: A Review\n   Authors: Qizhang Feng, Mengnan Du, Na Zou, Xia Hu\n   Summary: Benefiting from the digitization of healthcare data and the development of computing power, machine learning methods are increasingly used in the healthcare domain. Fairness problems have been identified in machine learning for healthcare, resulting in an unfair allocation of limited healthcare resources or excessive health risks for certain groups. Therefore, addressing the fairness problems has recently attracted increasing attention from the healthcare community. However, the intersection of machine learning for healthcare and fairness in machine learning remains understudied. In this review, we build the bridge by exposing fairness problems, summarizing possible biases, sorting out mitigation methods and pointing out challenges along with opportunities for the future.\n\n2. Title: Machine Learning Applications In Healthcare: The State Of Knowledge and Future Directions\n   Authors: Mrinmoy Roy, Sarwar J. Minar, Porarthi Dhar, A T M Omor Faruq\n   Summary: Detection of easily missed hidden patterns with fast processing power makes machine learning (ML) indispensable to today's healthcare system. Though many ML applications have already been discovered and many are still under investigation, only a few have been adopted by current healthcare systems. As a result, there exists an enormous opportunity in the healthcare system for ML but distributed information, scarcity of properly arranged and easily explainable documentation in the related sector are major impediments that are making ML applications difficult for healthcare professionals. This study aimed to gather ML applications in different areas of healthcare concisely and more effectively so that necessary information can be accessed immediately with relevant references. We divided our study into five major groups: community level work, risk management/preventive care, healthcare operation management, remote care, and early detection. Dividing these groups into subgroups, we provided relevant references with a description in tabular form for quick access. Our objective is to inform people about ML applicability in the healthcare industry, reduce the knowledge gap of clinicians about the ML applications, and motivate healthcare professionals towards a more machine learning-based healthcare system.\n\n3. Title: Probabilistic Machine Learning for Healthcare\n   Authors: Irene Y. Chen, Shalmali Joshi, Marzyeh Ghassemi, Rajesh Ranganath\n   Summary: Machine learning can be used to make sense of healthcare data. Probabilistic machine learning models help provide a complete picture of observed data in healthcare. In this review, we examine how probabilistic machine learning can advance healthcare. We consider challenges in the predictive model building pipeline where probabilistic models can be beneficial, including calibration and missing data. Beyond predictive models, we also investigate the utility of probabilistic machine learning models in phenotyping, in generative models for clinical use cases, and in reinforcement learning.\n\nPlease find attached the full articles for your reference.'."
      }
    ]
  },
  "query_34_1_6": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_distance",
      "args": {
        "start": "Chicago",
        "end": "Whole Foods Market"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_distance', 'description': 'Get the distance between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'distance', 'description': 'the distance in km.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_distance with the parameter as follows: 'start' is 'Chicago', 'end' is 'Whole Foods Market'."
      }
    ]
  },
  "query_321_0_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_478_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_reviews",
      "args": {
        "movie_id": 926393
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_reviews', 'description': 'Get the user reviews for a movie', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': \"list of reviews including user's name, rating, and reviews\"}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_reviews with the parameter as follows: 'movie_id' is '926393'."
      }
    ]
  },
  "query_457_2_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_curr_time",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_curr_time', 'description': 'get current time', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'time', 'description': 'the time in YYYY-MM-DD HH:MM format'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_curr_time with the parameter as follows: ."
      }
    ]
  },
  "query_305_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.search_nearby",
      "args": {
        "search_term": "sushi restaurant",
        "places": "downtown Los Angeles",
        "radius": 5000
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.search_nearby', 'description': 'Search for places nearby a location, within a given radius, and return the results into a list. Put the location name at the end of the query.', 'required_parameters': [{'name': 'search_term', 'type': 'STRING', 'description': 'the place name'}], 'optional_parameters': [{'name': 'places', 'type': 'STRING', 'description': 'the name of the location.'}, {'name': 'latitude', 'type': 'FLOAT', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'type': 'FLOAT', 'description': 'the longitude of the location.'}, {'name': 'radius', 'type': 'NUMBER', 'description': 'radius in meters.'}], 'return_data': [{'name': 'places', 'description': 'the list of places, each place is a dict with name and address, at most 5 places.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.search_nearby with the parameter as follows: 'search_term' is 'sushi restaurant', 'places' is 'downtown Los Angeles', 'radius' is '5000'."
      }
    ]
  },
  "query_417_2_0": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FileOperation.read_file",
      "args": {
        "file_path": "data_v2/template_data/hotel.txt"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FileOperation.read_file', 'description': 'read file from disk', 'required_parameters': [{'name': 'file_path', 'type': 'STRING', 'description': 'The path of the file.'}], 'optional_parameters': [], 'return_data': [{'name': 'text', 'description': 'the text of the file.'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FileOperation.read_file with the parameter as follows: 'file_path' is 'data_v2/template_data/hotel.txt'."
      }
    ]
  },
  "query_163_1_5": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_reviews",
      "args": {
        "propertyId": "815771399638335578"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_reviews', 'description': 'This function retrieves the reviews of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'reviews', 'description': 'The reviews of the property, containing comment, rating, and date. At most 3 reviews are returned.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_reviews with the parameter as follows: 'propertyId' is '815771399638335578'."
      }
    ]
  },
  "query_471_0_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 27205
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '27205'."
      }
    ]
  },
  "query_241_2_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "EQ8shYj8Ai8J"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'EQ8shYj8Ai8J'."
      }
    ]
  },
  "query_132_1_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "ReserveMeeting.get_room_status",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'ReserveMeeting.get_room_status', 'description': 'get the room booking status', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'rooms', 'description': 'list of rooms as well as its booking status'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function ReserveMeeting.get_room_status with the parameter as follows: ."
      }
    ]
  },
  "query_225_2_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.search_google_scholar",
      "args": {
        "query": "climate change"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.search_google_scholar', 'description': 'Search for scholarly articles on Google Scholar', 'required_parameters': [{'name': 'query', 'description': 'search query content', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'list of the titles of papers'}, {'name': 'cited_by', 'description': 'citation number of papers'}, {'name': 'organic_id', 'description': \"list of organic results' ids of the papers\"}, {'name': 'snipets', 'description': 'snippets of the papers'}, {'name': 'pub_info', 'description': 'publication information of selected papers'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.search_google_scholar with the parameter as follows: 'query' is 'climate change'."
      }
    ]
  },
  "query_36_2_1": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "client1@example.com",
        "title": "New Product Launch",
        "body": "Dear Clients, We are excited to announce the launch of our new product. Please find attached the product brochure for more details. Thank you. Best regards, Mike"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'client1@example.com', 'title' is 'New Product Launch', 'body' is 'Dear Clients, We are excited to announce the launch of our new product. Please find attached the product brochure for more details. Thank you. Best regards, Mike'."
      }
    ]
  },
  "query_172_0_2": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 41020735
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '41020735'."
      }
    ]
  },
  "query_306_0_7": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_citation_format",
      "args": {
        "q": "FCkDwhGm-kAJ"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_citation_format', 'description': \"get MLA citation format by an identification of organic result's id\", 'required_parameters': [{'name': 'q', 'type': 'STRING', 'description': 'ID of an individual Google Scholar organic search result'}], 'optional_parameters': [], 'return_data': [{'name': 'citation', 'description': 'the citation format of the article'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_citation_format with the parameter as follows: 'q' is 'FCkDwhGm-kAJ'."
      }
    ]
  },
  "query_231_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_top_rated_movies",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_top_rated_movies', 'description': 'Get a list of movies ordered by rating', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films ranked by rating, including id, title, release date, popularity and rating'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_top_rated_movies with the parameter as follows: ."
      }
    ]
  },
  "query_134_0_0": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.search_property_by_place",
      "args": {
        "place": "Paris"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.search_property_by_place', 'description': 'This function takes various parameters to search properties on Airbnb.', 'required_parameters': [{'name': 'place', 'type': 'STRING', 'description': 'The name of the destination.'}], 'optional_parameters': [], 'return_data': [{'name': 'property', 'description': 'a list of at most 3 properties, containing id, name, and address.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.search_property_by_place with the parameter as follows: 'place' is 'Paris'."
      }
    ]
  },
  "query_79_1_5": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Artificial Intelligence in Healthcare",
        "bullet_items": "Yu, Kun-Hsing, Andrew L. Beam, and Isaac S. Kohane. \"Artificial intelligence in healthcare.\" Nature biomedical engineering 2.10 (2018): 719-731."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Artificial Intelligence in Healthcare', 'bullet_items' is 'Yu, Kun-Hsing, Andrew L. Beam, and Isaac S. Kohane. \"Artificial intelligence in healthcare.\" Nature biomedical engineering 2.10 (2018): 719-731.'."
      }
    ]
  },
  "query_354_0_1": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.send",
      "args": {
        "address": "john@example.com",
        "title": "Important Meeting",
        "body": "Hi John, I would like to schedule a meeting with you next week. Please let me know your availability. Best regards, Sam"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.send', 'description': 'send email', 'required_parameters': [{'name': 'address', 'description': 'the email address to send', 'type': 'STRING'}, {'name': 'title', 'description': 'title of email, not NULL', 'type': 'STRING'}], 'optional_parameters': [{'name': 'body', 'description': 'the content of the email', 'type': 'STRING'}, {'name': 'attachment', 'description': 'path of the attachment file', 'type': 'STRING'}], 'return_data': [{'name': 'state', 'description': 'the state of sending email'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.send with the parameter as follows: 'address' is 'john@example.com', 'title' is 'Important Meeting', 'body' is 'Hi John, I would like to schedule a meeting with you next week. Please let me know your availability. Best regards, Sam'."
      }
    ]
  },
  "query_94_0_3": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmDouban.print_detail",
      "args": {
        "film_name": "驯龙高手"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmDouban.print_detail', 'description': 'prints the details of a movie, giving its name', 'required_parameters': [{'name': 'film_name', 'type': 'STRING', 'description': \"target movie's name, must be in Chinese\"}], 'optional_parameters': [], 'return_data': [{'name': 'description', 'description': 'the description of the movie'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmDouban.print_detail with the parameter as follows: 'film_name' is '驯龙高手'."
      }
    ]
  },
  "query_471_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.search_movie",
      "args": {
        "query": "Inception"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.search_movie', 'description': 'Search for movies by their original, translated and alternative titles', 'required_parameters': [{'name': 'query', 'type': 'STRING', 'description': 'the title of the movie'}], 'optional_parameters': [], 'return_data': [{'name': 'id', 'description': 'movie ID of the searched movie'}, {'name': 'title', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.search_movie with the parameter as follows: 'query' is 'Inception'."
      }
    ]
  },
  "query_117_0_5": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.check_availability",
      "args": {
        "propertyId": 48060454
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.check_availability', 'description': 'This function checks the availability of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [{'name': 'date', 'type': 'STRING', 'description': 'The date to check, it must in the format of YYYY-MM-DD.'}], 'return_data': [{'name': 'availability', 'description': 'The availability of the property for the given date or the next 10 days.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.check_availability with the parameter as follows: 'propertyId' is '48060454'."
      }
    ]
  },
  "query_259_2_2": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PolygonFinance.get_ticker_news",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PolygonFinance.get_ticker_news', 'description': 'get the most recent news articles relating to a stock ticker symbol', 'required_parameters': [], 'optional_parameters': [{'name': 'ticker', 'type': 'STRING', 'description': 'Return results that contain this ticker'}], 'return_data': [{'name': 'results', 'description': 'A list of news including title, summary, and author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PolygonFinance.get_ticker_news with the parameter as follows: ."
      }
    ]
  },
  "query_477_1_4": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "The Godfather",
        "bullet_items": "The Godfather is a 1972 crime drama film directed by Francis Ford Coppola. It is the first installment in The Godfather trilogy, chronicling the Corleone family under patriarch Vito Corleone (Marlon Brando) from 1945 to 1955. The film focuses on the transformation of Vito's youngest son, Michael Corleone (Al Pacino), from a reluctant family outsider to a ruthless mafia boss."
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'The Godfather', 'bullet_items' is 'The Godfather is a 1972 crime drama film directed by Francis Ford Coppola. It is the first installment in The Godfather trilogy, chronicling the Corleone family under patriarch Vito Corleone (Marlon Brando) from 1945 to 1955. The film focuses on the transformation of Vito's youngest son, Michael Corleone (Al Pacino), from a reluctant family outsider to a ruthless mafia boss.'."
      }
    ]
  },
  "query_40_0_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": true
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'True'."
      }
    ]
  },
  "query_67_0_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_now_playing",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_now_playing', 'description': 'Get a list of movies that are currently in theatres', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'films', 'description': 'list of films playing, including id, title, release date, popularity and rating'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_now_playing with the parameter as follows: ."
      }
    ]
  },
  "query_134_2_9": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_checkout_price",
      "args": {
        "propertyId": 53555858,
        "checkIn": "2023-10-20",
        "checkOut": "2023-10-25"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_checkout_price', 'description': 'This function retrieves the checkout cost of a property given its ID and check-in date.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}, {'name': 'checkIn', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}, {'name': 'checkOut', 'type': 'STRING', 'description': 'The check-in date, it must in the format of YYYY-MM-DD.'}], 'optional_parameters': [], 'return_data': [{'name': 'accommodationCost', 'description': 'The accommodation cost of the property.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_checkout_price with the parameter as follows: 'propertyId' is '53555858', 'checkIn' is '2023-10-20', 'checkOut' is '2023-10-25'."
      }
    ]
  },
  "query_220_2_11": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "TimeTool.get_weekday",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'TimeTool.get_weekday', 'description': 'get the weekday today', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'weekday', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function TimeTool.get_weekday with the parameter as follows: ."
      }
    ]
  },
  "query_330_0_1": {
    "template": {
      "thought": "Thought",
      "action": "Action",
      "args": "Action_Input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "Email.show",
      "args": {
        "only_unread": false
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'Email.show', 'description': 'show the emails in the inbox', 'required_parameters': [{'name': 'only_unread', 'description': 'whether to show only unread emails in the inbox', 'type': 'BOOLEAN'}], 'optional_parameters': [], 'return_data': [{'name': 'emails', 'descriptions': 'a list of emails in the inbox including sender, title, content, and time'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Thought\": string;\n    // api name to call\n    \"Action\": string;\n    // input params required by current action\n    \"Action_Input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function Email.show with the parameter as follows: 'only_unread' is 'False'."
      }
    ]
  },
  "query_227_0_3": {
    "template": {
      "thought": "goal",
      "action": "name",
      "args": "args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "FilmTMDB.get_movie_details",
      "args": {
        "movie_id": 278
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'FilmTMDB.get_movie_details', 'description': 'Get the top level details of a movie by ID', 'required_parameters': [{'name': 'movie_id', 'type': 'NUMBER', 'description': \"','\"}], 'optional_parameters': [], 'return_data': [{'name': 'genres', 'description': 'category list of film'}, {'name': 'id', 'description': ''}, {'name': 'release_date', 'description': ''}, {'name': 'runtime', 'description': 'film length in minute'}, {'name': 'title', 'description': ''}, {'name': 'overview', 'description': ''}, {'name': 'vote_average', 'description': 'rating for the film'}, {'name': 'popularity', 'description': ''}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"goal\": string;\n    // api name to call\n    \"name\": string;\n    // input params required by current action\n    \"args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function FilmTMDB.get_movie_details with the parameter as follows: 'movie_id' is '278'."
      }
    ]
  },
  "query_281_2_2": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Paris"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Paris'."
      }
    ]
  },
  "query_251_0_3": {
    "template": {
      "thought": "thought",
      "action": "action",
      "args": "action_input"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "PPT.add_text_page",
      "args": {
        "title": "Quantum Computing Overview",
        "bullet_items": "Introduction to Quantum Computing[SPAN]Quantum Computing Applications[SPAN]Challenges in Quantum Computing"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.add_text_page', 'description': 'Add text page of ppt', 'required_parameters': [{'name': 'title', 'type': 'STRING', 'description': 'the title of the page'}, {'name': 'bullet_items', 'type': 'STRING', 'description': 'bullet_items should be string, for multiple bullet items, please use [SPAN] to separate them.'}], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"thought\": string;\n    // api name to call\n    \"action\": string;\n    // input params required by current action\n    \"action_input\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function PPT.add_text_page with the parameter as follows: 'title' is 'Quantum Computing Overview', 'bullet_items' is 'Introduction to Quantum Computing[SPAN]Quantum Computing Applications[SPAN]Challenges in Quantum Computing'."
      }
    ]
  },
  "query_270_1_1": {
    "template": {
      "thought": "Goal",
      "action": "Name",
      "args": "Args"
    },
    "meta_data": {
      "response_format": "json"
    },
    "ground_truth": {
      "action": "BINGMap.get_route",
      "args": {
        "start": "The Ritz-Carlton, New York",
        "end": "Central Park"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_route', 'description': 'Get the route between two locations in km.', 'required_parameters': [{'name': 'start', 'type': 'STRING', 'description': 'The start location.'}, {'name': 'end', 'type': 'STRING', 'description': 'The end location.'}], 'optional_parameters': [], 'return_data': [{'name': 'route', 'description': 'the route, a list of actions.'}]}\nPlease directly generate the response in JSON format. Do NOT add comments (//) in the response.\n```\n{\n    // goal to call this action\n    \"Goal\": string;\n    // api name to call\n    \"Name\": string;\n    // input params required by current action\n    \"Args\": Record<string, any>;\n}\n```"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_route with the parameter as follows: 'start' is 'The Ritz-Carlton, New York', 'end' is 'Central Park'."
      }
    ]
  },
  "query_11_1_6": {
    "template": {
      "thought_start": "Goal:",
      "thought_end": "\n\n",
      "action_start": "Name:",
      "action_end": "\n\n",
      "args_start": "Args:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "AirbnbSearch.get_property_details",
      "args": {
        "propertyId": 24533837
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'AirbnbSearch.get_property_details', 'description': 'This function retrieves the details of a property given its ID.', 'required_parameters': [{'name': 'propertyId', 'type': 'NUMBER', 'description': 'The ID of the property.'}], 'optional_parameters': [], 'return_data': [{'name': 'title', 'description': 'The title of the property.'}, {'name': 'propertyType', 'description': 'The type of the property.'}, {'name': 'personCapacity', 'description': 'The capacity of the property.'}, {'name': 'rating', 'description': 'The rating of the property.'}, {'name': 'latitude', 'description': 'The latitude of the property.'}, {'name': 'longitude', 'description': 'The longitude of the property.'}]}\nPlease generate the response in the following format:\nGoal: goal to call this action\n\nName: api name to call\n\nArgs: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function AirbnbSearch.get_property_details with the parameter as follows: 'propertyId' is '24533837'."
      }
    ]
  },
  "query_34_0_10": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "PPT.save_file",
      "args": {}
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'PPT.save_file', 'description': 'When all steps done, YOU MUST use save_file() to save PPT', 'required_parameters': [], 'optional_parameters': [], 'return_data': [{'name': 'status', 'description': 'the result of the execution'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function PPT.save_file with the parameter as follows: ."
      }
    ]
  },
  "query_269_1_0": {
    "template": {
      "thought_start": "thought:",
      "thought_end": "\n",
      "action_start": "action:",
      "action_end": "\n",
      "args_start": "action input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "BINGMap.get_coordinates",
      "args": {
        "location": "Central Park, New York"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'BINGMap.get_coordinates', 'description': 'Get the coordinates of a location.', 'required_parameters': [{'name': 'location', 'type': 'STRING', 'description': 'the location need to get coordinates.'}], 'optional_parameters': [], 'return_data': [{'name': 'latitude', 'description': 'the latitude of the location.'}, {'name': 'longitude', 'description': 'the longitude of the location.'}]}\nPlease generate the response in the following format:\nthought: goal to call this action\naction: api name to call\naction input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function BINGMap.get_coordinates with the parameter as follows: 'location' is 'Central Park, New York'."
      }
    ]
  },
  "query_78_0_4": {
    "template": {
      "thought_start": "Thought:",
      "thought_end": "\n",
      "action_start": "Action:",
      "action_end": "\n",
      "args_start": "Action Input:",
      "args_end": ""
    },
    "meta_data": {
      "response_format": "string"
    },
    "ground_truth": {
      "action": "GoogleScholar.get_author_id",
      "args": {
        "mauthors": "Are we adapting to climate change?"
      }
    },
    "origin_prompt": [
      {
        "role": "system",
        "content": "You have access to the following API:\n{'name': 'GoogleScholar.get_author_id', 'description': \"The getAuthorId function is used to get the author's id by his or her name.\", 'required_parameters': [{'name': 'mauthors', 'description': 'the name of the author', 'type': 'STRING'}], 'optional_parameters': [], 'return_data': [{'name': 'author_id', 'description': 'the author_id of the author'}]}\nPlease generate the response in the following format:\nThought: goal to call this action\nAction: api name to call\nAction Input: JSON format api args in ONLY one line\n"
      },
      {
        "role": "user",
        "content": "Call the function GoogleScholar.get_author_id with the parameter as follows: 'mauthors' is 'Are we adapting to climate change?'."
      }
    ]
  }
}